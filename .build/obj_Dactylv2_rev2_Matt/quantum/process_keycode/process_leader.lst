   1               		.file	"process_leader.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB10:
  15               		.file 1 "./quantum/rgb.h"
   1:./quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:./quantum/rgb.h ****  *
   3:./quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:./quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:./quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:./quantum/rgb.h ****  * (at your option) any later version.
   7:./quantum/rgb.h ****  *
   8:./quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:./quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:./quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:./quantum/rgb.h ****  * GNU General Public License for more details.
  12:./quantum/rgb.h ****  *
  13:./quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:./quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:./quantum/rgb.h ****  */
  16:./quantum/rgb.h **** 
  17:./quantum/rgb.h **** #ifndef RGB_H
  18:./quantum/rgb.h **** #define RGB_H
  19:./quantum/rgb.h **** 
  20:./quantum/rgb.h **** __attribute__((weak))
  21:./quantum/rgb.h **** void rgblight_toggle(void) {};
  16               		.loc 1 21 28 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               		.loc 1 21 29 view .LVU1
  23               	/* epilogue start */
  24               		.loc 1 21 1 is_stmt 0 view .LVU2
  25 0000 0895      		ret
  26               		.cfi_endproc
  27               	.LFE10:
  29               		.section	.text.rgblight_step,"ax",@progbits
  30               		.weak	rgblight_step
  32               	rgblight_step:
  33               	.LFB32:
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
  39               	/* epilogue start */
  40 0000 0895      		ret
  41               		.cfi_endproc
  42               	.LFE32:
  44               		.section	.text.rgblight_step_reverse,"ax",@progbits
  45               		.weak	rgblight_step_reverse
  47               	rgblight_step_reverse:
  48               	.LFB34:
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  54               	/* epilogue start */
  55 0000 0895      		ret
  56               		.cfi_endproc
  57               	.LFE34:
  59               		.section	.text.rgblight_increase_hue,"ax",@progbits
  60               		.weak	rgblight_increase_hue
  62               	rgblight_increase_hue:
  63               	.LFB36:
  64               		.cfi_startproc
  65               	/* prologue: function */
  66               	/* frame size = 0 */
  67               	/* stack size = 0 */
  68               	.L__stack_usage = 0
  69               	/* epilogue start */
  70 0000 0895      		ret
  71               		.cfi_endproc
  72               	.LFE36:
  74               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  75               		.weak	rgblight_decrease_hue
  77               	rgblight_decrease_hue:
  78               	.LFB38:
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
  84               	/* epilogue start */
  85 0000 0895      		ret
  86               		.cfi_endproc
  87               	.LFE38:
  89               		.section	.text.rgblight_increase_sat,"ax",@progbits
  90               		.weak	rgblight_increase_sat
  92               	rgblight_increase_sat:
  93               	.LFB40:
  94               		.cfi_startproc
  95               	/* prologue: function */
  96               	/* frame size = 0 */
  97               	/* stack size = 0 */
  98               	.L__stack_usage = 0
  99               	/* epilogue start */
 100 0000 0895      		ret
 101               		.cfi_endproc
 102               	.LFE40:
 104               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 105               		.weak	rgblight_decrease_sat
 107               	rgblight_decrease_sat:
 108               	.LFB42:
 109               		.cfi_startproc
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112               	/* stack size = 0 */
 113               	.L__stack_usage = 0
 114               	/* epilogue start */
 115 0000 0895      		ret
 116               		.cfi_endproc
 117               	.LFE42:
 119               		.section	.text.rgblight_increase_val,"ax",@progbits
 120               		.weak	rgblight_increase_val
 122               	rgblight_increase_val:
 123               	.LFB44:
 124               		.cfi_startproc
 125               	/* prologue: function */
 126               	/* frame size = 0 */
 127               	/* stack size = 0 */
 128               	.L__stack_usage = 0
 129               	/* epilogue start */
 130 0000 0895      		ret
 131               		.cfi_endproc
 132               	.LFE44:
 134               		.section	.text.rgblight_decrease_val,"ax",@progbits
 135               		.weak	rgblight_decrease_val
 137               	rgblight_decrease_val:
 138               	.LFB46:
 139               		.cfi_startproc
 140               	/* prologue: function */
 141               	/* frame size = 0 */
 142               	/* stack size = 0 */
 143               	.L__stack_usage = 0
 144               	/* epilogue start */
 145 0000 0895      		ret
 146               		.cfi_endproc
 147               	.LFE46:
 149               		.section	.text.rgblight_increase_speed,"ax",@progbits
 150               		.weak	rgblight_increase_speed
 152               	rgblight_increase_speed:
 153               	.LFB48:
 154               		.cfi_startproc
 155               	/* prologue: function */
 156               	/* frame size = 0 */
 157               	/* stack size = 0 */
 158               	.L__stack_usage = 0
 159               	/* epilogue start */
 160 0000 0895      		ret
 161               		.cfi_endproc
 162               	.LFE48:
 164               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 165               		.weak	rgblight_decrease_speed
 167               	rgblight_decrease_speed:
 168               	.LFB50:
 169               		.cfi_startproc
 170               	/* prologue: function */
 171               	/* frame size = 0 */
 172               	/* stack size = 0 */
 173               	.L__stack_usage = 0
 174               	/* epilogue start */
 175 0000 0895      		ret
 176               		.cfi_endproc
 177               	.LFE50:
 179               		.section	.text.leader_start,"ax",@progbits
 180               		.weak	leader_start
 182               	leader_start:
 183               	.LFB52:
 184               		.cfi_startproc
 185               	/* prologue: function */
 186               	/* frame size = 0 */
 187               	/* stack size = 0 */
 188               	.L__stack_usage = 0
 189               	/* epilogue start */
 190 0000 0895      		ret
 191               		.cfi_endproc
 192               	.LFE52:
 194               		.section	.text.leader_end,"ax",@progbits
 195               		.weak	leader_end
 197               	leader_end:
 198               	.LFB54:
 199               		.cfi_startproc
 200               	/* prologue: function */
 201               	/* frame size = 0 */
 202               	/* stack size = 0 */
 203               	.L__stack_usage = 0
 204               	/* epilogue start */
 205 0000 0895      		ret
 206               		.cfi_endproc
 207               	.LFE54:
 209               		.section	.text.process_leader,"ax",@progbits
 210               	.global	process_leader
 212               	process_leader:
 213               	.LVL0:
 214               	.LFB30:
 215               		.file 2 "quantum/process_keycode/process_leader.c"
   1:quantum/process_keycode/process_leader.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_leader.c ****  *
   3:quantum/process_keycode/process_leader.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_leader.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_leader.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_leader.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_leader.c ****  *
   8:quantum/process_keycode/process_leader.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_leader.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_leader.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_leader.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_leader.c ****  *
  13:quantum/process_keycode/process_leader.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_leader.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_leader.c ****  */
  16:quantum/process_keycode/process_leader.c **** 
  17:quantum/process_keycode/process_leader.c **** #ifndef DISABLE_LEADER
  18:quantum/process_keycode/process_leader.c **** 
  19:quantum/process_keycode/process_leader.c **** #include "process_leader.h"
  20:quantum/process_keycode/process_leader.c **** 
  21:quantum/process_keycode/process_leader.c **** #ifndef LEADER_TIMEOUT
  22:quantum/process_keycode/process_leader.c ****   #define LEADER_TIMEOUT 300
  23:quantum/process_keycode/process_leader.c **** #endif
  24:quantum/process_keycode/process_leader.c **** 
  25:quantum/process_keycode/process_leader.c **** __attribute__ ((weak))
  26:quantum/process_keycode/process_leader.c **** void leader_start(void) {}
  27:quantum/process_keycode/process_leader.c **** 
  28:quantum/process_keycode/process_leader.c **** __attribute__ ((weak))
  29:quantum/process_keycode/process_leader.c **** void leader_end(void) {}
  30:quantum/process_keycode/process_leader.c **** 
  31:quantum/process_keycode/process_leader.c **** // Leader key stuff
  32:quantum/process_keycode/process_leader.c **** bool leading = false;
  33:quantum/process_keycode/process_leader.c **** uint16_t leader_time = 0;
  34:quantum/process_keycode/process_leader.c **** 
  35:quantum/process_keycode/process_leader.c **** uint16_t leader_sequence[5] = {0, 0, 0, 0, 0};
  36:quantum/process_keycode/process_leader.c **** uint8_t leader_sequence_size = 0;
  37:quantum/process_keycode/process_leader.c **** 
  38:quantum/process_keycode/process_leader.c **** bool process_leader(uint16_t keycode, keyrecord_t *record) {
 216               		.loc 2 38 60 is_stmt 1 view -0
 217               		.cfi_startproc
 218               		.loc 2 38 60 is_stmt 0 view .LVU4
 219 0000 0F93      		push r16
 220               	.LCFI0:
 221               		.cfi_def_cfa_offset 3
 222               		.cfi_offset 16, -2
 223 0002 1F93      		push r17
 224               	.LCFI1:
 225               		.cfi_def_cfa_offset 4
 226               		.cfi_offset 17, -3
 227 0004 CF93      		push r28
 228               	.LCFI2:
 229               		.cfi_def_cfa_offset 5
 230               		.cfi_offset 28, -4
 231               	/* prologue: function */
 232               	/* frame size = 0 */
 233               	/* stack size = 3 */
 234               	.L__stack_usage = 3
 235 0006 8C01      		movw r16,r24
  39:quantum/process_keycode/process_leader.c ****   // Leader key set-up
  40:quantum/process_keycode/process_leader.c ****   if (record->event.pressed) {
 236               		.loc 2 40 3 is_stmt 1 view .LVU5
 237               		.loc 2 40 6 is_stmt 0 view .LVU6
 238 0008 FB01      		movw r30,r22
 239 000a 8281      		ldd r24,Z+2
 240               	.LVL1:
 241               		.loc 2 40 6 view .LVU7
 242 000c 8111      		cpse r24,__zero_reg__
 243 000e 00C0      		rjmp .L15
 244               	.LVL2:
 245               	.L18:
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
  42:quantum/process_keycode/process_leader.c ****       leader_start();
  43:quantum/process_keycode/process_leader.c ****       leading = true;
  44:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
  45:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
  50:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
  51:quantum/process_keycode/process_leader.c ****       return false;
  52:quantum/process_keycode/process_leader.c ****     }
  53:quantum/process_keycode/process_leader.c ****     if (leading && timer_elapsed(leader_time) < LEADER_TIMEOUT) {
  54:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
  55:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
  56:quantum/process_keycode/process_leader.c ****       return false;
  57:quantum/process_keycode/process_leader.c ****     }
  58:quantum/process_keycode/process_leader.c ****   }
  59:quantum/process_keycode/process_leader.c ****   return true;
 246               		.loc 2 59 10 view .LVU8
 247 0010 C1E0      		ldi r28,lo8(1)
 248               	.L14:
  60:quantum/process_keycode/process_leader.c **** }
 249               		.loc 2 60 1 view .LVU9
 250 0012 8C2F      		mov r24,r28
 251               	/* epilogue start */
 252 0014 CF91      		pop r28
 253 0016 1F91      		pop r17
 254 0018 0F91      		pop r16
 255               	.LVL3:
 256               		.loc 2 60 1 view .LVU10
 257 001a 0895      		ret
 258               	.LVL4:
 259               	.L15:
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 260               		.loc 2 41 5 is_stmt 1 view .LVU11
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 261               		.loc 2 41 9 is_stmt 0 view .LVU12
 262 001c C091 0000 		lds r28,leading
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 263               		.loc 2 41 8 view .LVU13
 264 0020 C111      		cpse r28,__zero_reg__
 265 0022 00C0      		rjmp .L17
  41:quantum/process_keycode/process_leader.c ****     if (!leading && keycode == KC_LEAD) {
 266               		.loc 2 41 18 discriminator 1 view .LVU14
 267 0024 0631      		cpi r16,22
 268 0026 1C45      		sbci r17,92
 269 0028 01F4      		brne .L18
  42:quantum/process_keycode/process_leader.c ****       leading = true;
 270               		.loc 2 42 7 is_stmt 1 view .LVU15
 271 002a 0E94 0000 		call leader_start
 272               	.LVL5:
  43:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
 273               		.loc 2 43 7 view .LVU16
  43:quantum/process_keycode/process_leader.c ****       leader_time = timer_read();
 274               		.loc 2 43 15 is_stmt 0 view .LVU17
 275 002e 81E0      		ldi r24,lo8(1)
 276 0030 8093 0000 		sts leading,r24
  44:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
 277               		.loc 2 44 7 is_stmt 1 view .LVU18
  44:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
 278               		.loc 2 44 21 is_stmt 0 view .LVU19
 279 0034 0E94 0000 		call timer_read
 280               	.LVL6:
  44:quantum/process_keycode/process_leader.c ****       leader_sequence_size = 0;
 281               		.loc 2 44 19 view .LVU20
 282 0038 9093 0000 		sts leader_time+1,r25
 283 003c 8093 0000 		sts leader_time,r24
  45:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
 284               		.loc 2 45 7 is_stmt 1 view .LVU21
  45:quantum/process_keycode/process_leader.c ****       leader_sequence[0] = 0;
 285               		.loc 2 45 28 is_stmt 0 view .LVU22
 286 0040 1092 0000 		sts leader_sequence_size,__zero_reg__
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
 287               		.loc 2 46 7 is_stmt 1 view .LVU23
  46:quantum/process_keycode/process_leader.c ****       leader_sequence[1] = 0;
 288               		.loc 2 46 26 is_stmt 0 view .LVU24
 289 0044 1092 0000 		sts leader_sequence+1,__zero_reg__
 290 0048 1092 0000 		sts leader_sequence,__zero_reg__
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
 291               		.loc 2 47 7 is_stmt 1 view .LVU25
  47:quantum/process_keycode/process_leader.c ****       leader_sequence[2] = 0;
 292               		.loc 2 47 26 is_stmt 0 view .LVU26
 293 004c 1092 0000 		sts leader_sequence+2+1,__zero_reg__
 294 0050 1092 0000 		sts leader_sequence+2,__zero_reg__
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
 295               		.loc 2 48 7 is_stmt 1 view .LVU27
  48:quantum/process_keycode/process_leader.c ****       leader_sequence[3] = 0;
 296               		.loc 2 48 26 is_stmt 0 view .LVU28
 297 0054 1092 0000 		sts leader_sequence+4+1,__zero_reg__
 298 0058 1092 0000 		sts leader_sequence+4,__zero_reg__
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
 299               		.loc 2 49 7 is_stmt 1 view .LVU29
  49:quantum/process_keycode/process_leader.c ****       leader_sequence[4] = 0;
 300               		.loc 2 49 26 is_stmt 0 view .LVU30
 301 005c 1092 0000 		sts leader_sequence+6+1,__zero_reg__
 302 0060 1092 0000 		sts leader_sequence+6,__zero_reg__
  50:quantum/process_keycode/process_leader.c ****       return false;
 303               		.loc 2 50 7 is_stmt 1 view .LVU31
  50:quantum/process_keycode/process_leader.c ****       return false;
 304               		.loc 2 50 26 is_stmt 0 view .LVU32
 305 0064 1092 0000 		sts leader_sequence+8+1,__zero_reg__
 306 0068 1092 0000 		sts leader_sequence+8,__zero_reg__
  51:quantum/process_keycode/process_leader.c ****     }
 307               		.loc 2 51 7 is_stmt 1 view .LVU33
  51:quantum/process_keycode/process_leader.c ****     }
 308               		.loc 2 51 14 is_stmt 0 view .LVU34
 309 006c 00C0      		rjmp .L14
 310               	.LVL7:
 311               	.L17:
  53:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
 312               		.loc 2 53 5 is_stmt 1 discriminator 1 view .LVU35
  53:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
 313               		.loc 2 53 20 is_stmt 0 discriminator 1 view .LVU36
 314 006e 8091 0000 		lds r24,leader_time
 315 0072 9091 0000 		lds r25,leader_time+1
 316 0076 0E94 0000 		call timer_elapsed
 317               	.LVL8:
  53:quantum/process_keycode/process_leader.c ****       leader_sequence[leader_sequence_size] = keycode;
 318               		.loc 2 53 17 discriminator 1 view .LVU37
 319 007a 8C32      		cpi r24,44
 320 007c 9140      		sbci r25,1
 321 007e 00F4      		brsh .L18
  54:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
 322               		.loc 2 54 7 is_stmt 1 view .LVU38
  54:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
 323               		.loc 2 54 22 is_stmt 0 view .LVU39
 324 0080 8091 0000 		lds r24,leader_sequence_size
 325 0084 E82F      		mov r30,r24
 326 0086 F0E0      		ldi r31,0
  54:quantum/process_keycode/process_leader.c ****       leader_sequence_size++;
 327               		.loc 2 54 45 view .LVU40
 328 0088 EE0F      		lsl r30
 329 008a FF1F      		rol r31
 330 008c E050      		subi r30,lo8(-(leader_sequence))
 331 008e F040      		sbci r31,hi8(-(leader_sequence))
 332 0090 1183      		std Z+1,r17
 333 0092 0083      		st Z,r16
  55:quantum/process_keycode/process_leader.c ****       return false;
 334               		.loc 2 55 7 is_stmt 1 view .LVU41
  55:quantum/process_keycode/process_leader.c ****       return false;
 335               		.loc 2 55 27 is_stmt 0 view .LVU42
 336 0094 8F5F      		subi r24,lo8(-(1))
 337 0096 8093 0000 		sts leader_sequence_size,r24
  56:quantum/process_keycode/process_leader.c ****     }
 338               		.loc 2 56 7 is_stmt 1 view .LVU43
  56:quantum/process_keycode/process_leader.c ****     }
 339               		.loc 2 56 14 is_stmt 0 view .LVU44
 340 009a C0E0      		ldi r28,0
 341 009c 00C0      		rjmp .L14
 342               		.cfi_endproc
 343               	.LFE30:
 345               	.global	leader_sequence_size
 346               		.section	.bss.leader_sequence_size,"aw",@nobits
 349               	leader_sequence_size:
 350 0000 00        		.zero	1
 351               	.global	leader_sequence
 352               		.section	.bss.leader_sequence,"aw",@nobits
 355               	leader_sequence:
 356 0000 0000 0000 		.zero	10
 356      0000 0000 
 356      0000 
 357               	.global	leader_time
 358               		.section	.bss.leader_time,"aw",@nobits
 361               	leader_time:
 362 0000 0000      		.zero	2
 363               	.global	leading
 364               		.section	.bss.leading,"aw",@nobits
 367               	leading:
 368 0000 00        		.zero	1
 369               		.text
 370               	.Letext0:
 371               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 372               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
 373               		.file 5 "./tmk_core/common/keyboard.h"
 374               		.file 6 "./tmk_core/common/action.h"
 375               		.file 7 "./tmk_core/common/report.h"
 376               		.file 8 "./tmk_core/common/host.h"
 377               		.file 9 "./tmk_core/common/debug.h"
 378               		.file 10 "./quantum/keycode_config.h"
 379               		.file 11 "./quantum/keymap.h"
 380               		.file 12 "./tmk_core/common/action_layer.h"
 381               		.file 13 "./tmk_core/common/timer.h"
 382               		.file 14 "./tmk_core/common/action_util.h"
 383               		.file 15 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdlib.h"
 384               		.file 16 "./quantum/process_keycode/process_tap_dance.h"
 385               		.file 17 "./quantum/quantum.h"
 386               		.file 18 "./quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_leader.c
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:13     .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:32     .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:47     .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:62     .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:77     .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:92     .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:107    .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:122    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:137    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:152    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:167    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:182    .text.leader_start:0000000000000000 leader_start
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:197    .text.leader_end:0000000000000000 leader_end
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:212    .text.process_leader:0000000000000000 process_leader
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:367    .bss.leading:0000000000000000 leading
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:361    .bss.leader_time:0000000000000000 leader_time
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:349    .bss.leader_sequence_size:0000000000000000 leader_sequence_size
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccOJAyzO.s:355    .bss.leader_sequence:0000000000000000 leader_sequence

UNDEFINED SYMBOLS
timer_read
timer_elapsed
__do_clear_bss
