   1               		.file	"rgblight.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.sethsv,"ax",@progbits
  11               	.global	sethsv
  13               	sethsv:
  14               	.LVL0:
  15               	.LFB7:
  16               		.file 1 "quantum/rgblight.c"
   1:quantum/rgblight.c **** /* Copyright 2016-2017 Yang Liu
   2:quantum/rgblight.c ****  *
   3:quantum/rgblight.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgblight.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgblight.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgblight.c ****  * (at your option) any later version.
   7:quantum/rgblight.c ****  *
   8:quantum/rgblight.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgblight.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgblight.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgblight.c ****  * GNU General Public License for more details.
  12:quantum/rgblight.c ****  *
  13:quantum/rgblight.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgblight.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgblight.c ****  */
  16:quantum/rgblight.c **** #include <math.h>
  17:quantum/rgblight.c **** #include <avr/eeprom.h>
  18:quantum/rgblight.c **** #include <avr/interrupt.h>
  19:quantum/rgblight.c **** #include <util/delay.h>
  20:quantum/rgblight.c **** #include "progmem.h"
  21:quantum/rgblight.c **** #include "timer.h"
  22:quantum/rgblight.c **** #include "rgblight.h"
  23:quantum/rgblight.c **** #include "debug.h"
  24:quantum/rgblight.c **** #include "led_tables.h"
  25:quantum/rgblight.c **** 
  26:quantum/rgblight.c **** #ifndef RGBLIGHT_LIMIT_VAL
  27:quantum/rgblight.c **** #define RGBLIGHT_LIMIT_VAL 255
  28:quantum/rgblight.c **** #endif
  29:quantum/rgblight.c **** 
  30:quantum/rgblight.c **** #define MIN(a,b) (((a)<(b))?(a):(b))
  31:quantum/rgblight.c **** #define MAX(a,b) (((a)>(b))?(a):(b))
  32:quantum/rgblight.c **** 
  33:quantum/rgblight.c **** __attribute__ ((weak))
  34:quantum/rgblight.c **** const uint8_t RGBLED_BREATHING_INTERVALS[] PROGMEM = {30, 20, 10, 5};
  35:quantum/rgblight.c **** __attribute__ ((weak))
  36:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_MOOD_INTERVALS[] PROGMEM = {120, 60, 30};
  37:quantum/rgblight.c **** __attribute__ ((weak))
  38:quantum/rgblight.c **** const uint8_t RGBLED_RAINBOW_SWIRL_INTERVALS[] PROGMEM = {100, 50, 20};
  39:quantum/rgblight.c **** __attribute__ ((weak))
  40:quantum/rgblight.c **** const uint8_t RGBLED_SNAKE_INTERVALS[] PROGMEM = {100, 50, 20};
  41:quantum/rgblight.c **** __attribute__ ((weak))
  42:quantum/rgblight.c **** const uint8_t RGBLED_KNIGHT_INTERVALS[] PROGMEM = {127, 63, 31};
  43:quantum/rgblight.c **** __attribute__ ((weak))
  44:quantum/rgblight.c **** const uint16_t RGBLED_GRADIENT_RANGES[] PROGMEM = {360, 240, 180, 120, 90};
  45:quantum/rgblight.c **** 
  46:quantum/rgblight.c **** rgblight_config_t rgblight_config;
  47:quantum/rgblight.c **** rgblight_config_t inmem_config;
  48:quantum/rgblight.c **** 
  49:quantum/rgblight.c **** LED_TYPE led[RGBLED_NUM];
  50:quantum/rgblight.c **** uint8_t rgblight_inited = 0;
  51:quantum/rgblight.c **** bool rgblight_timer_enabled = false;
  52:quantum/rgblight.c **** 
  53:quantum/rgblight.c **** void sethsv(uint16_t hue, uint8_t sat, uint8_t val, LED_TYPE *led1) {
  17               		.loc 1 53 69 view -0
  18               		.cfi_startproc
  19               		.loc 1 53 69 is_stmt 0 view .LVU1
  20 0000 CF92      		push r12
  21               	.LCFI0:
  22               		.cfi_def_cfa_offset 3
  23               		.cfi_offset 12, -2
  24 0002 DF92      		push r13
  25               	.LCFI1:
  26               		.cfi_def_cfa_offset 4
  27               		.cfi_offset 13, -3
  28 0004 EF92      		push r14
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 14, -4
  32 0006 FF92      		push r15
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 15, -5
  36 0008 0F93      		push r16
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 16, -6
  40 000a 1F93      		push r17
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 17, -7
  44 000c CF93      		push r28
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 28, -8
  48 000e DF93      		push r29
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 10
  51               		.cfi_offset 29, -9
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 8 */
  55               	.L__stack_usage = 8
  56 0010 E901      		movw r28,r18
  54:quantum/rgblight.c ****   uint8_t r = 0, g = 0, b = 0, base, color;
  57               		.loc 1 54 3 is_stmt 1 view .LVU2
  58               	.LVL1:
  55:quantum/rgblight.c **** 
  56:quantum/rgblight.c ****   if (val > RGBLIGHT_LIMIT_VAL) {
  59               		.loc 1 56 3 view .LVU3
  57:quantum/rgblight.c ****       val=RGBLIGHT_LIMIT_VAL; // limit the val
  58:quantum/rgblight.c ****   }
  59:quantum/rgblight.c **** 
  60:quantum/rgblight.c ****   if (sat == 0) { // Acromatic color (gray). Hue doesn't mind.
  60               		.loc 1 60 3 view .LVU4
  61               		.loc 1 60 6 is_stmt 0 view .LVU5
  62 0012 6623      		tst r22
  63 0014 01F4      		brne .+2
  64 0016 00C0      		rjmp .L10
  65 0018 E42E      		mov r14,r20
  66 001a F12C      		mov r15,__zero_reg__
  61:quantum/rgblight.c ****     r = val;
  62:quantum/rgblight.c ****     g = val;
  63:quantum/rgblight.c ****     b = val;
  64:quantum/rgblight.c ****   } else {
  65:quantum/rgblight.c ****     base = ((255 - sat) * val) >> 8;
  67               		.loc 1 65 5 is_stmt 1 view .LVU6
  68               		.loc 1 65 18 is_stmt 0 view .LVU7
  69 001c EFEF      		ldi r30,lo8(-1)
  70 001e F0E0      		ldi r31,0
  71 0020 E61B      		sub r30,r22
  72 0022 F109      		sbc r31,__zero_reg__
  73               		.loc 1 65 25 view .LVU8
  74 0024 EE9D      		mul r30,r14
  75 0026 8001      		movw r16,r0
  76 0028 EF9D      		mul r30,r15
  77 002a 100D      		add r17,r0
  78 002c FE9D      		mul r31,r14
  79 002e 100D      		add r17,r0
  80 0030 1124      		clr r1
  81               		.loc 1 65 10 view .LVU9
  82 0032 212F      		mov r18,r17
  83               	.LVL2:
  66:quantum/rgblight.c ****     color = (val - base) * (hue % 60) / 60;
  84               		.loc 1 66 5 is_stmt 1 view .LVU10
  85               		.loc 1 66 18 is_stmt 0 view .LVU11
  86 0034 E12F      		mov r30,r17
  87 0036 FF27      		clr r31
  88 0038 EE1A      		sub r14,r30
  89 003a FF0A      		sbc r15,r31
  90               		.loc 1 66 33 view .LVU12
  91 003c 5CE3      		ldi r21,lo8(60)
  92 003e C52E      		mov r12,r21
  93 0040 D12C      		mov r13,__zero_reg__
  94 0042 B601      		movw r22,r12
  95               	.LVL3:
  96               		.loc 1 66 33 view .LVU13
  97 0044 0E94 0000 		call __udivmodhi4
  98               	.LVL4:
  99               		.loc 1 66 33 view .LVU14
 100 0048 FB01      		movw r30,r22
 101 004a BC01      		movw r22,r24
 102               		.loc 1 66 26 view .LVU15
 103 004c E69E      		mul r14,r22
 104 004e C001      		movw r24,r0
 105 0050 E79E      		mul r14,r23
 106 0052 900D      		add r25,r0
 107 0054 F69E      		mul r15,r22
 108 0056 900D      		add r25,r0
 109 0058 1124      		clr r1
 110               		.loc 1 66 39 view .LVU16
 111 005a B601      		movw r22,r12
 112 005c 0E94 0000 		call __udivmodhi4
 113               	.LVL5:
  67:quantum/rgblight.c **** 
  68:quantum/rgblight.c ****     switch (hue / 60) {
 114               		.loc 1 68 5 is_stmt 1 view .LVU17
 115 0060 E230      		cpi r30,2
 116 0062 F105      		cpc r31,__zero_reg__
 117 0064 01F0      		breq .L3
 118 0066 00F4      		brsh .L4
 119               	.LVL6:
  69:quantum/rgblight.c ****       case 0:
  70:quantum/rgblight.c ****         r = val;
  71:quantum/rgblight.c ****         g = base + color;
  72:quantum/rgblight.c ****         b = base;
 120               		.loc 1 72 9 view .LVU18
  73:quantum/rgblight.c ****         break;
 121               		.loc 1 73 9 view .LVU19
  72:quantum/rgblight.c ****         break;
 122               		.loc 1 72 11 is_stmt 0 view .LVU20
 123 0068 812F      		mov r24,r17
  71:quantum/rgblight.c ****         b = base;
 124               		.loc 1 71 11 view .LVU21
 125 006a 262F      		mov r18,r22
 126 006c 210F      		add r18,r17
  68:quantum/rgblight.c ****       case 0:
 127               		.loc 1 68 5 view .LVU22
 128 006e 3097      		sbiw r30,0
 129 0070 01F0      		breq .L2
 130               	.LVL7:
  74:quantum/rgblight.c ****       case 1:
  75:quantum/rgblight.c ****         r = val - color;
  76:quantum/rgblight.c ****         g = val;
 131               		.loc 1 76 9 is_stmt 1 view .LVU23
  77:quantum/rgblight.c ****         b = base;
 132               		.loc 1 77 9 view .LVU24
  78:quantum/rgblight.c ****         break;
 133               		.loc 1 78 9 view .LVU25
  76:quantum/rgblight.c ****         b = base;
 134               		.loc 1 76 11 is_stmt 0 view .LVU26
 135 0072 242F      		mov r18,r20
  75:quantum/rgblight.c ****         g = val;
 136               		.loc 1 75 11 view .LVU27
 137 0074 461B      		sub r20,r22
 138               	.LVL8:
  68:quantum/rgblight.c ****       case 0:
 139               		.loc 1 68 5 view .LVU28
 140 0076 3197      		sbiw r30,1
 141 0078 01F0      		breq .L2
 142               	.LVL9:
 143               	.L11:
  54:quantum/rgblight.c **** 
 144               		.loc 1 54 25 view .LVU29
 145 007a 80E0      		ldi r24,0
  54:quantum/rgblight.c **** 
 146               		.loc 1 54 18 view .LVU30
 147 007c 20E0      		ldi r18,0
  54:quantum/rgblight.c **** 
 148               		.loc 1 54 11 view .LVU31
 149 007e 40E0      		ldi r20,0
 150 0080 00C0      		rjmp .L2
 151               	.LVL10:
 152               	.L4:
  68:quantum/rgblight.c ****       case 0:
 153               		.loc 1 68 5 view .LVU32
 154 0082 E430      		cpi r30,4
 155 0084 F105      		cpc r31,__zero_reg__
 156 0086 01F0      		breq .L7
 157 0088 00F0      		brlo .L8
  79:quantum/rgblight.c ****       case 2:
  80:quantum/rgblight.c ****         r = base;
  81:quantum/rgblight.c ****         g = val;
  82:quantum/rgblight.c ****         b = base + color;
  83:quantum/rgblight.c ****         break;
  84:quantum/rgblight.c ****       case 3:
  85:quantum/rgblight.c ****         r = base;
  86:quantum/rgblight.c ****         g = val - color;
  87:quantum/rgblight.c ****         b = val;
  88:quantum/rgblight.c ****         break;
  89:quantum/rgblight.c ****       case 4:
  90:quantum/rgblight.c ****         r = base + color;
  91:quantum/rgblight.c ****         g = base;
  92:quantum/rgblight.c ****         b = val;
  93:quantum/rgblight.c ****         break;
  94:quantum/rgblight.c ****       case 5:
  95:quantum/rgblight.c ****         r = val;
  96:quantum/rgblight.c ****         g = base;
  97:quantum/rgblight.c ****         b = val - color;
 158               		.loc 1 97 11 view .LVU33
 159 008a 842F      		mov r24,r20
 160 008c 861B      		sub r24,r22
  68:quantum/rgblight.c ****       case 0:
 161               		.loc 1 68 5 view .LVU34
 162 008e 3597      		sbiw r30,5
 163 0090 01F4      		brne .L11
 164               	.LVL11:
 165               	.L2:
  98:quantum/rgblight.c ****         break;
  99:quantum/rgblight.c ****     }
 100:quantum/rgblight.c ****   }
 101:quantum/rgblight.c ****   r = pgm_read_byte(&CIE1931_CURVE[r]);
 166               		.loc 1 101 3 is_stmt 1 view .LVU35
 167               	.LBB9:
 168               		.loc 1 101 7 view .LVU36
 169               		.loc 1 101 7 view .LVU37
 170               		.loc 1 101 7 view .LVU38
 171 0092 E42F      		mov r30,r20
 172 0094 F0E0      		ldi r31,0
 173 0096 E050      		subi r30,lo8(-(CIE1931_CURVE))
 174 0098 F040      		sbci r31,hi8(-(CIE1931_CURVE))
 175               	/* #APP */
 176               	 ;  101 "quantum/rgblight.c" 1
 177 009a 4491      		lpm r20, Z
 178               		
 179               	 ;  0 "" 2
 180               	.LVL12:
 181               		.loc 1 101 7 view .LVU39
 182               		.loc 1 101 7 is_stmt 0 view .LVU40
 183               	/* #NOAPP */
 184               	.LBE9:
 102:quantum/rgblight.c ****   g = pgm_read_byte(&CIE1931_CURVE[g]);
 185               		.loc 1 102 3 is_stmt 1 view .LVU41
 186               	.LBB10:
 187               		.loc 1 102 7 view .LVU42
 188               		.loc 1 102 7 view .LVU43
 189               		.loc 1 102 7 view .LVU44
 190 009c E22F      		mov r30,r18
 191 009e F0E0      		ldi r31,0
 192 00a0 E050      		subi r30,lo8(-(CIE1931_CURVE))
 193 00a2 F040      		sbci r31,hi8(-(CIE1931_CURVE))
 194               	/* #APP */
 195               	 ;  102 "quantum/rgblight.c" 1
 196 00a4 9491      		lpm r25, Z
 197               		
 198               	 ;  0 "" 2
 199               	.LVL13:
 200               		.loc 1 102 7 view .LVU45
 201               		.loc 1 102 7 is_stmt 0 view .LVU46
 202               	/* #NOAPP */
 203               	.LBE10:
 103:quantum/rgblight.c ****   b = pgm_read_byte(&CIE1931_CURVE[b]);
 204               		.loc 1 103 3 is_stmt 1 view .LVU47
 205               	.LBB11:
 206               		.loc 1 103 7 view .LVU48
 207               		.loc 1 103 7 view .LVU49
 208               		.loc 1 103 7 view .LVU50
 209 00a6 E82F      		mov r30,r24
 210 00a8 F0E0      		ldi r31,0
 211 00aa E050      		subi r30,lo8(-(CIE1931_CURVE))
 212 00ac F040      		sbci r31,hi8(-(CIE1931_CURVE))
 213               	/* #APP */
 214               	 ;  103 "quantum/rgblight.c" 1
 215 00ae E491      		lpm r30, Z
 216               		
 217               	 ;  0 "" 2
 218               	.LVL14:
 219               		.loc 1 103 7 view .LVU51
 220               		.loc 1 103 7 is_stmt 0 view .LVU52
 221               	/* #NOAPP */
 222               	.LBE11:
 104:quantum/rgblight.c **** 
 105:quantum/rgblight.c ****   setrgb(r, g, b, led1);
 223               		.loc 1 105 3 is_stmt 1 view .LVU53
 224               	.LBB12:
 225               	.LBI12:
 106:quantum/rgblight.c **** }
 107:quantum/rgblight.c **** 
 108:quantum/rgblight.c **** void setrgb(uint8_t r, uint8_t g, uint8_t b, LED_TYPE *led1) {
 226               		.loc 1 108 6 view .LVU54
 227               	.LBB13:
 109:quantum/rgblight.c ****   (*led1).r = r;
 228               		.loc 1 109 3 view .LVU55
 229               		.loc 1 109 13 is_stmt 0 view .LVU56
 230 00b0 4983      		std Y+1,r20
 110:quantum/rgblight.c ****   (*led1).g = g;
 231               		.loc 1 110 3 is_stmt 1 view .LVU57
 232               		.loc 1 110 13 is_stmt 0 view .LVU58
 233 00b2 9883      		st Y,r25
 111:quantum/rgblight.c ****   (*led1).b = b;
 234               		.loc 1 111 3 is_stmt 1 view .LVU59
 235               		.loc 1 111 13 is_stmt 0 view .LVU60
 236 00b4 EA83      		std Y+2,r30
 237               	.LVL15:
 238               	/* epilogue start */
 239               		.loc 1 111 13 view .LVU61
 240               	.LBE13:
 241               	.LBE12:
 106:quantum/rgblight.c **** 
 242               		.loc 1 106 1 view .LVU62
 243 00b6 DF91      		pop r29
 244 00b8 CF91      		pop r28
 245               	.LVL16:
 106:quantum/rgblight.c **** 
 246               		.loc 1 106 1 view .LVU63
 247 00ba 1F91      		pop r17
 248 00bc 0F91      		pop r16
 249 00be FF90      		pop r15
 250 00c0 EF90      		pop r14
 251 00c2 DF90      		pop r13
 252 00c4 CF90      		pop r12
 253 00c6 0895      		ret
 254               	.LVL17:
 255               	.L3:
  80:quantum/rgblight.c ****         g = val;
 256               		.loc 1 80 9 is_stmt 1 view .LVU64
  81:quantum/rgblight.c ****         b = base + color;
 257               		.loc 1 81 9 view .LVU65
  82:quantum/rgblight.c ****         break;
 258               		.loc 1 82 9 view .LVU66
  82:quantum/rgblight.c ****         break;
 259               		.loc 1 82 11 is_stmt 0 view .LVU67
 260 00c8 862F      		mov r24,r22
 261 00ca 810F      		add r24,r17
 262               	.LVL18:
  83:quantum/rgblight.c ****       case 3:
 263               		.loc 1 83 9 is_stmt 1 view .LVU68
 264 00cc E42F      		mov r30,r20
 265               	.LVL19:
 266               	.L12:
  85:quantum/rgblight.c ****         g = val - color;
 267               		.loc 1 85 11 is_stmt 0 view .LVU69
 268 00ce 412F      		mov r20,r17
 269               	.LVL20:
  86:quantum/rgblight.c ****         b = val;
 270               		.loc 1 86 11 view .LVU70
 271 00d0 2E2F      		mov r18,r30
  88:quantum/rgblight.c ****       case 4:
 272               		.loc 1 88 9 view .LVU71
 273 00d2 00C0      		rjmp .L2
 274               	.LVL21:
 275               	.L8:
  85:quantum/rgblight.c ****         g = val - color;
 276               		.loc 1 85 9 is_stmt 1 view .LVU72
  86:quantum/rgblight.c ****         b = val;
 277               		.loc 1 86 9 view .LVU73
  86:quantum/rgblight.c ****         b = val;
 278               		.loc 1 86 11 is_stmt 0 view .LVU74
 279 00d4 E42F      		mov r30,r20
 280 00d6 E61B      		sub r30,r22
 281               	.LVL22:
  87:quantum/rgblight.c ****         break;
 282               		.loc 1 87 9 is_stmt 1 view .LVU75
  88:quantum/rgblight.c ****       case 4:
 283               		.loc 1 88 9 view .LVU76
  87:quantum/rgblight.c ****         break;
 284               		.loc 1 87 11 is_stmt 0 view .LVU77
 285 00d8 842F      		mov r24,r20
 286 00da 00C0      		rjmp .L12
 287               	.LVL23:
 288               	.L7:
  90:quantum/rgblight.c ****         g = base;
 289               		.loc 1 90 9 is_stmt 1 view .LVU78
  91:quantum/rgblight.c ****         b = val;
 290               		.loc 1 91 9 view .LVU79
  92:quantum/rgblight.c ****         break;
 291               		.loc 1 92 9 view .LVU80
  93:quantum/rgblight.c ****       case 5:
 292               		.loc 1 93 9 view .LVU81
  92:quantum/rgblight.c ****         break;
 293               		.loc 1 92 11 is_stmt 0 view .LVU82
 294 00dc 842F      		mov r24,r20
  90:quantum/rgblight.c ****         g = base;
 295               		.loc 1 90 11 view .LVU83
 296 00de 462F      		mov r20,r22
 297               	.LVL24:
  90:quantum/rgblight.c ****         g = base;
 298               		.loc 1 90 11 view .LVU84
 299 00e0 410F      		add r20,r17
  93:quantum/rgblight.c ****       case 5:
 300               		.loc 1 93 9 view .LVU85
 301 00e2 00C0      		rjmp .L2
 302               	.LVL25:
 303               	.L10:
  63:quantum/rgblight.c ****   } else {
 304               		.loc 1 63 7 view .LVU86
 305 00e4 842F      		mov r24,r20
 306               	.LVL26:
  62:quantum/rgblight.c ****     b = val;
 307               		.loc 1 62 7 view .LVU87
 308 00e6 242F      		mov r18,r20
 309               	.LVL27:
  62:quantum/rgblight.c ****     b = val;
 310               		.loc 1 62 7 view .LVU88
 311 00e8 00C0      		rjmp .L2
 312               		.cfi_endproc
 313               	.LFE7:
 315               		.section	.text.setrgb,"ax",@progbits
 316               	.global	setrgb
 318               	setrgb:
 319               	.LVL28:
 320               	.LFB8:
 108:quantum/rgblight.c ****   (*led1).r = r;
 321               		.loc 1 108 62 is_stmt 1 view -0
 322               		.cfi_startproc
 323               	/* prologue: function */
 324               	/* frame size = 0 */
 325               	/* stack size = 0 */
 326               	.L__stack_usage = 0
 108:quantum/rgblight.c ****   (*led1).r = r;
 327               		.loc 1 108 62 is_stmt 0 view .LVU90
 328 0000 F901      		movw r30,r18
 109:quantum/rgblight.c ****   (*led1).g = g;
 329               		.loc 1 109 3 is_stmt 1 view .LVU91
 109:quantum/rgblight.c ****   (*led1).g = g;
 330               		.loc 1 109 13 is_stmt 0 view .LVU92
 331 0002 8183      		std Z+1,r24
 110:quantum/rgblight.c ****   (*led1).b = b;
 332               		.loc 1 110 3 is_stmt 1 view .LVU93
 110:quantum/rgblight.c ****   (*led1).b = b;
 333               		.loc 1 110 13 is_stmt 0 view .LVU94
 334 0004 6083      		st Z,r22
 335               		.loc 1 111 3 is_stmt 1 view .LVU95
 336               		.loc 1 111 13 is_stmt 0 view .LVU96
 337 0006 4283      		std Z+2,r20
 338               	/* epilogue start */
 112:quantum/rgblight.c **** }
 339               		.loc 1 112 1 view .LVU97
 340 0008 0895      		ret
 341               		.cfi_endproc
 342               	.LFE8:
 344               		.section	.text.eeconfig_read_rgblight,"ax",@progbits
 345               	.global	eeconfig_read_rgblight
 347               	eeconfig_read_rgblight:
 348               	.LFB9:
 113:quantum/rgblight.c **** 
 114:quantum/rgblight.c **** 
 115:quantum/rgblight.c **** uint32_t eeconfig_read_rgblight(void) {
 349               		.loc 1 115 39 is_stmt 1 view -0
 350               		.cfi_startproc
 351               	/* prologue: function */
 352               	/* frame size = 0 */
 353               	/* stack size = 0 */
 354               	.L__stack_usage = 0
 116:quantum/rgblight.c ****   return eeprom_read_dword(EECONFIG_RGBLIGHT);
 355               		.loc 1 116 3 view .LVU99
 356               		.loc 1 116 10 is_stmt 0 view .LVU100
 357 0000 88E0      		ldi r24,lo8(8)
 358 0002 90E0      		ldi r25,0
 359 0004 0C94 0000 		jmp eeprom_read_dword
 360               	.LVL29:
 361               		.cfi_endproc
 362               	.LFE9:
 364               		.section	.text.eeconfig_update_rgblight,"ax",@progbits
 365               	.global	eeconfig_update_rgblight
 367               	eeconfig_update_rgblight:
 368               	.LVL30:
 369               	.LFB10:
 117:quantum/rgblight.c **** }
 118:quantum/rgblight.c **** void eeconfig_update_rgblight(uint32_t val) {
 370               		.loc 1 118 45 is_stmt 1 view -0
 371               		.cfi_startproc
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 376               		.loc 1 118 45 is_stmt 0 view .LVU102
 377 0000 AB01      		movw r20,r22
 378 0002 BC01      		movw r22,r24
 379               	.LVL31:
 119:quantum/rgblight.c ****   eeprom_update_dword(EECONFIG_RGBLIGHT, val);
 380               		.loc 1 119 3 is_stmt 1 view .LVU103
 381 0004 88E0      		ldi r24,lo8(8)
 382 0006 90E0      		ldi r25,0
 383 0008 0C94 0000 		jmp eeprom_update_dword
 384               	.LVL32:
 385               		.cfi_endproc
 386               	.LFE10:
 388               		.section	.text.eeconfig_update_rgblight_default,"ax",@progbits
 389               	.global	eeconfig_update_rgblight_default
 391               	eeconfig_update_rgblight_default:
 392               	.LFB11:
 120:quantum/rgblight.c **** }
 121:quantum/rgblight.c **** void eeconfig_update_rgblight_default(void) {
 393               		.loc 1 121 45 view -0
 394               		.cfi_startproc
 395               	/* prologue: function */
 396               	/* frame size = 0 */
 397               	/* stack size = 0 */
 398               	.L__stack_usage = 0
 122:quantum/rgblight.c ****   dprintf("eeconfig_update_rgblight_default\n");
 399               		.loc 1 122 48 view .LVU105
 123:quantum/rgblight.c ****   rgblight_config.enable = 1;
 400               		.loc 1 123 3 view .LVU106
 124:quantum/rgblight.c ****   rgblight_config.mode = 1;
 401               		.loc 1 124 3 view .LVU107
 125:quantum/rgblight.c ****   rgblight_config.hue = 0;
 402               		.loc 1 125 3 view .LVU108
 126:quantum/rgblight.c ****   rgblight_config.sat = 255;
 403               		.loc 1 126 3 view .LVU109
 127:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 404               		.loc 1 127 3 view .LVU110
 128:quantum/rgblight.c ****   rgblight_config.speed = 0;
 405               		.loc 1 128 3 view .LVU111
 123:quantum/rgblight.c ****   rgblight_config.mode = 1;
 406               		.loc 1 123 26 is_stmt 0 view .LVU112
 407 0000 E0E0      		ldi r30,lo8(rgblight_config)
 408 0002 F0E0      		ldi r31,hi8(rgblight_config)
 409 0004 83E0      		ldi r24,lo8(3)
 410 0006 8083      		st Z,r24
 125:quantum/rgblight.c ****   rgblight_config.sat = 255;
 411               		.loc 1 125 23 view .LVU113
 412 0008 1182      		std Z+1,__zero_reg__
 126:quantum/rgblight.c ****   rgblight_config.val = RGBLIGHT_LIMIT_VAL;
 413               		.loc 1 126 23 view .LVU114
 414 000a 8FEF      		ldi r24,lo8(-1)
 415 000c 8283      		std Z+2,r24
 127:quantum/rgblight.c ****   rgblight_config.speed = 0;
 416               		.loc 1 127 23 view .LVU115
 417 000e 8383      		std Z+3,r24
 418               		.loc 1 128 25 view .LVU116
 419 0010 1482      		std Z+4,__zero_reg__
 129:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 420               		.loc 1 129 3 is_stmt 1 view .LVU117
 421 0012 6081      		ld r22,Z
 422 0014 7181      		ldd r23,Z+1
 423 0016 8281      		ldd r24,Z+2
 424 0018 9381      		ldd r25,Z+3
 425 001a 0C94 0000 		jmp eeconfig_update_rgblight
 426               	.LVL33:
 427               		.cfi_endproc
 428               	.LFE11:
 430               		.section	.text.eeconfig_debug_rgblight,"ax",@progbits
 431               	.global	eeconfig_debug_rgblight
 433               	eeconfig_debug_rgblight:
 434               	.LFB12:
 130:quantum/rgblight.c **** }
 131:quantum/rgblight.c **** void eeconfig_debug_rgblight(void) {
 435               		.loc 1 131 36 view -0
 436               		.cfi_startproc
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
 132:quantum/rgblight.c ****   dprintf("rgblight_config eprom\n");
 441               		.loc 1 132 37 view .LVU119
 133:quantum/rgblight.c ****   dprintf("rgblight_config.enable = %d\n", rgblight_config.enable);
 442               		.loc 1 133 67 view .LVU120
 134:quantum/rgblight.c ****   dprintf("rghlight_config.mode = %d\n", rgblight_config.mode);
 443               		.loc 1 134 63 view .LVU121
 135:quantum/rgblight.c ****   dprintf("rgblight_config.hue = %d\n", rgblight_config.hue);
 444               		.loc 1 135 61 view .LVU122
 136:quantum/rgblight.c ****   dprintf("rgblight_config.sat = %d\n", rgblight_config.sat);
 445               		.loc 1 136 61 view .LVU123
 137:quantum/rgblight.c ****   dprintf("rgblight_config.val = %d\n", rgblight_config.val);
 446               		.loc 1 137 61 view .LVU124
 138:quantum/rgblight.c ****   dprintf("rgblight_config.speed = %d\n", rgblight_config.speed);
 447               		.loc 1 138 65 view .LVU125
 448               	/* epilogue start */
 139:quantum/rgblight.c **** }
 449               		.loc 1 139 1 is_stmt 0 view .LVU126
 450 0000 0895      		ret
 451               		.cfi_endproc
 452               	.LFE12:
 454               		.section	.text.rgblight_get_mode,"ax",@progbits
 455               	.global	rgblight_get_mode
 457               	rgblight_get_mode:
 458               	.LFB19:
 140:quantum/rgblight.c **** 
 141:quantum/rgblight.c **** void rgblight_init(void) {
 142:quantum/rgblight.c ****   debug_enable = 1; // Debug ON!
 143:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 144:quantum/rgblight.c ****   rgblight_inited = 1;
 145:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 146:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 147:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 148:quantum/rgblight.c ****     eeconfig_init();
 149:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 150:quantum/rgblight.c ****   }
 151:quantum/rgblight.c ****   rgblight_config.raw = eeconfig_read_rgblight();
 152:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 153:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 154:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 155:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 156:quantum/rgblight.c ****   }
 157:quantum/rgblight.c ****   eeconfig_debug_rgblight(); // display current eeprom values
 158:quantum/rgblight.c **** 
 159:quantum/rgblight.c ****   #ifdef RGBLIGHT_ANIMATIONS
 160:quantum/rgblight.c ****     rgblight_timer_init(); // setup the timer
 161:quantum/rgblight.c ****   #endif
 162:quantum/rgblight.c **** 
 163:quantum/rgblight.c ****   if (rgblight_config.enable) {
 164:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 165:quantum/rgblight.c ****   }
 166:quantum/rgblight.c **** }
 167:quantum/rgblight.c **** 
 168:quantum/rgblight.c **** void rgblight_update_dword(uint32_t dword) {
 169:quantum/rgblight.c ****   rgblight_config.raw = dword;
 170:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 171:quantum/rgblight.c ****   if (rgblight_config.enable)
 172:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 173:quantum/rgblight.c ****   else {
 174:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 175:quantum/rgblight.c ****       rgblight_timer_disable();
 176:quantum/rgblight.c ****     #endif
 177:quantum/rgblight.c ****       rgblight_set();
 178:quantum/rgblight.c ****   }
 179:quantum/rgblight.c **** }
 180:quantum/rgblight.c **** 
 181:quantum/rgblight.c **** void rgblight_increase(void) {
 182:quantum/rgblight.c ****   uint8_t mode = 0;
 183:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 184:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 185:quantum/rgblight.c ****   }
 186:quantum/rgblight.c ****   rgblight_mode(mode);
 187:quantum/rgblight.c **** }
 188:quantum/rgblight.c **** void rgblight_decrease(void) {
 189:quantum/rgblight.c ****   uint8_t mode = 0;
 190:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 191:quantum/rgblight.c ****   if (rgblight_config.mode > 1) {
 192:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 193:quantum/rgblight.c ****   }
 194:quantum/rgblight.c ****   rgblight_mode(mode);
 195:quantum/rgblight.c **** }
 196:quantum/rgblight.c **** void rgblight_step(void) {
 197:quantum/rgblight.c ****   uint8_t mode = 0;
 198:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 199:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 200:quantum/rgblight.c ****     mode = 1;
 201:quantum/rgblight.c ****   }
 202:quantum/rgblight.c ****   rgblight_mode(mode);
 203:quantum/rgblight.c **** }
 204:quantum/rgblight.c **** void rgblight_step_reverse(void) {
 205:quantum/rgblight.c ****   uint8_t mode = 0;
 206:quantum/rgblight.c ****   mode = rgblight_config.mode - 1;
 207:quantum/rgblight.c ****   if (mode < 1) {
 208:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 209:quantum/rgblight.c ****   }
 210:quantum/rgblight.c ****   rgblight_mode(mode);
 211:quantum/rgblight.c **** }
 212:quantum/rgblight.c **** 
 213:quantum/rgblight.c **** uint32_t rgblight_get_mode(void) {
 459               		.loc 1 213 34 is_stmt 1 view -0
 460               		.cfi_startproc
 461               	/* prologue: function */
 462               	/* frame size = 0 */
 463               	/* stack size = 0 */
 464               	.L__stack_usage = 0
 214:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 465               		.loc 1 214 3 view .LVU128
 466               		.loc 1 214 23 is_stmt 0 view .LVU129
 467 0000 6091 0000 		lds r22,rgblight_config
 468               		.loc 1 214 6 view .LVU130
 469 0004 60FF      		sbrs r22,0
 470 0006 00C0      		rjmp .L20
 215:quantum/rgblight.c ****     return false;
 216:quantum/rgblight.c ****   }
 217:quantum/rgblight.c **** 
 218:quantum/rgblight.c ****   return rgblight_config.mode;
 471               		.loc 1 218 3 is_stmt 1 view .LVU131
 472               		.loc 1 218 25 is_stmt 0 view .LVU132
 473 0008 6695      		lsr r22
 474 000a 6F73      		andi r22,lo8(63)
 475 000c 70E0      		ldi r23,0
 476 000e 90E0      		ldi r25,0
 477 0010 80E0      		ldi r24,0
 478 0012 0895      		ret
 479               	.L20:
 215:quantum/rgblight.c ****     return false;
 480               		.loc 1 215 12 view .LVU133
 481 0014 60E0      		ldi r22,0
 482 0016 70E0      		ldi r23,0
 483 0018 CB01      		movw r24,r22
 484               	/* epilogue start */
 219:quantum/rgblight.c **** }
 485               		.loc 1 219 1 view .LVU134
 486 001a 0895      		ret
 487               		.cfi_endproc
 488               	.LFE19:
 490               		.section	.text.increment,"ax",@progbits
 491               	.global	increment
 493               	increment:
 494               	.LVL34:
 495               	.LFB24:
 220:quantum/rgblight.c **** 
 221:quantum/rgblight.c **** void rgblight_mode(uint8_t mode) {
 222:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 223:quantum/rgblight.c ****     return;
 224:quantum/rgblight.c ****   }
 225:quantum/rgblight.c ****   if (mode < 1) {
 226:quantum/rgblight.c ****     rgblight_config.mode = 1;
 227:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 228:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 229:quantum/rgblight.c ****   } else {
 230:quantum/rgblight.c ****     rgblight_config.mode = mode;
 231:quantum/rgblight.c ****   }
 232:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 233:quantum/rgblight.c ****   xprintf("rgblight mode: %u\n", rgblight_config.mode);
 234:quantum/rgblight.c ****   if (rgblight_config.mode == 1) {
 235:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 236:quantum/rgblight.c ****       rgblight_timer_disable();
 237:quantum/rgblight.c ****     #endif
 238:quantum/rgblight.c ****   } else if (rgblight_config.mode >= 2 && rgblight_config.mode <= 24) {
 239:quantum/rgblight.c ****     // MODE 2-5, breathing
 240:quantum/rgblight.c ****     // MODE 6-8, rainbow mood
 241:quantum/rgblight.c ****     // MODE 9-14, rainbow swirl
 242:quantum/rgblight.c ****     // MODE 15-20, snake
 243:quantum/rgblight.c ****     // MODE 21-23, knight
 244:quantum/rgblight.c ****     // MODE 24, xmas
 245:quantum/rgblight.c ****     // MODE 25-34, static rainbow
 246:quantum/rgblight.c **** 
 247:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 248:quantum/rgblight.c ****       rgblight_timer_enable();
 249:quantum/rgblight.c ****     #endif
 250:quantum/rgblight.c ****   } else if (rgblight_config.mode >= 25 && rgblight_config.mode <= 34) {
 251:quantum/rgblight.c ****     // MODE 25-34, static gradient
 252:quantum/rgblight.c **** 
 253:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 254:quantum/rgblight.c ****       rgblight_timer_disable();
 255:quantum/rgblight.c ****     #endif
 256:quantum/rgblight.c ****   }
 257:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val);
 258:quantum/rgblight.c **** }
 259:quantum/rgblight.c **** 
 260:quantum/rgblight.c **** void rgblight_toggle(void) {
 261:quantum/rgblight.c ****   xprintf("rgblight toggle: rgblight_config.enable = %u\n", !rgblight_config.enable);
 262:quantum/rgblight.c ****   if (rgblight_config.enable) {
 263:quantum/rgblight.c ****     rgblight_disable();
 264:quantum/rgblight.c ****   }
 265:quantum/rgblight.c ****   else {
 266:quantum/rgblight.c ****     rgblight_enable();
 267:quantum/rgblight.c ****   }
 268:quantum/rgblight.c **** }
 269:quantum/rgblight.c **** 
 270:quantum/rgblight.c **** void rgblight_enable(void) {
 271:quantum/rgblight.c ****   rgblight_config.enable = 1;
 272:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 273:quantum/rgblight.c ****   xprintf("rgblight enable: rgblight_config.enable = %u\n", rgblight_config.enable);
 274:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 275:quantum/rgblight.c **** }
 276:quantum/rgblight.c **** 
 277:quantum/rgblight.c **** void rgblight_disable(void) {
 278:quantum/rgblight.c ****   rgblight_config.enable = 0;
 279:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 280:quantum/rgblight.c ****   xprintf("rgblight disable: rgblight_config.enable = %u\n", rgblight_config.enable);
 281:quantum/rgblight.c ****   #ifdef RGBLIGHT_ANIMATIONS
 282:quantum/rgblight.c ****     rgblight_timer_disable();
 283:quantum/rgblight.c ****   #endif
 284:quantum/rgblight.c ****   _delay_ms(50);
 285:quantum/rgblight.c ****   rgblight_set();
 286:quantum/rgblight.c **** }
 287:quantum/rgblight.c **** 
 288:quantum/rgblight.c **** // Deals with the messy details of incrementing an integer
 289:quantum/rgblight.c **** uint8_t increment( uint8_t value, uint8_t step, uint8_t min, uint8_t max ) {
 496               		.loc 1 289 76 is_stmt 1 view -0
 497               		.cfi_startproc
 498               	/* prologue: function */
 499               	/* frame size = 0 */
 500               	/* stack size = 0 */
 501               	.L__stack_usage = 0
 290:quantum/rgblight.c ****     int16_t new_value = value;
 502               		.loc 1 290 5 view .LVU136
 291:quantum/rgblight.c ****     new_value += step;
 503               		.loc 1 291 5 view .LVU137
 292:quantum/rgblight.c ****     return MIN( MAX( new_value, min ), max );
 504               		.loc 1 292 5 view .LVU138
 505               		.loc 1 292 12 is_stmt 0 view .LVU139
 506 0000 50E0      		ldi r21,0
 507 0002 860F      		add r24,r22
 508 0004 9927      		clr r25
 509 0006 991F      		rol r25
 510               	.LVL35:
 511               		.loc 1 292 12 view .LVU140
 512 0008 8417      		cp r24,r20
 513 000a 9507      		cpc r25,r21
 514 000c 04F4      		brge .L22
 515 000e CA01      		movw r24,r20
 516               	.LVL36:
 517               	.L22:
 518               		.loc 1 292 12 view .LVU141
 519 0010 30E0      		ldi r19,0
 520 0012 2817      		cp r18,r24
 521 0014 3907      		cpc r19,r25
 522 0016 04F4      		brge .L23
 523 0018 C901      		movw r24,r18
 524               	.L23:
 525               	/* epilogue start */
 293:quantum/rgblight.c **** }
 526               		.loc 1 293 1 view .LVU142
 527 001a 0895      		ret
 528               		.cfi_endproc
 529               	.LFE24:
 531               		.section	.text.decrement,"ax",@progbits
 532               	.global	decrement
 534               	decrement:
 535               	.LVL37:
 536               	.LFB25:
 294:quantum/rgblight.c **** 
 295:quantum/rgblight.c **** uint8_t decrement( uint8_t value, uint8_t step, uint8_t min, uint8_t max ) {
 537               		.loc 1 295 76 is_stmt 1 view -0
 538               		.cfi_startproc
 539               	/* prologue: function */
 540               	/* frame size = 0 */
 541               	/* stack size = 0 */
 542               	.L__stack_usage = 0
 296:quantum/rgblight.c ****     int16_t new_value = value;
 543               		.loc 1 296 5 view .LVU144
 297:quantum/rgblight.c ****     new_value -= step;
 544               		.loc 1 297 5 view .LVU145
 298:quantum/rgblight.c ****     return MIN( MAX( new_value, min ), max );
 545               		.loc 1 298 5 view .LVU146
 546               		.loc 1 298 12 is_stmt 0 view .LVU147
 547 0000 50E0      		ldi r21,0
 548 0002 861B      		sub r24,r22
 549 0004 990B      		sbc r25,r25
 550               	.LVL38:
 551               		.loc 1 298 12 view .LVU148
 552 0006 8417      		cp r24,r20
 553 0008 9507      		cpc r25,r21
 554 000a 04F4      		brge .L25
 555 000c CA01      		movw r24,r20
 556               	.LVL39:
 557               	.L25:
 558               		.loc 1 298 12 view .LVU149
 559 000e 30E0      		ldi r19,0
 560 0010 2817      		cp r18,r24
 561 0012 3907      		cpc r19,r25
 562 0014 04F4      		brge .L26
 563 0016 C901      		movw r24,r18
 564               	.L26:
 565               	/* epilogue start */
 299:quantum/rgblight.c **** }
 566               		.loc 1 299 1 view .LVU150
 567 0018 0895      		ret
 568               		.cfi_endproc
 569               	.LFE25:
 571               		.section	.text.rgblight_increase_speed,"ax",@progbits
 572               	.global	rgblight_increase_speed
 574               	rgblight_increase_speed:
 575               	.LFB32:
 300:quantum/rgblight.c **** 
 301:quantum/rgblight.c **** void rgblight_increase_hue(void) {
 302:quantum/rgblight.c ****   uint16_t hue;
 303:quantum/rgblight.c ****   hue = (rgblight_config.hue+RGBLIGHT_HUE_STEP) % 360;
 304:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 305:quantum/rgblight.c **** }
 306:quantum/rgblight.c **** void rgblight_decrease_hue(void) {
 307:quantum/rgblight.c ****   uint16_t hue;
 308:quantum/rgblight.c ****   if (rgblight_config.hue-RGBLIGHT_HUE_STEP < 0) {
 309:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 310:quantum/rgblight.c ****   } else {
 311:quantum/rgblight.c ****     hue = (rgblight_config.hue - RGBLIGHT_HUE_STEP) % 360;
 312:quantum/rgblight.c ****   }
 313:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 314:quantum/rgblight.c **** }
 315:quantum/rgblight.c **** void rgblight_increase_sat(void) {
 316:quantum/rgblight.c ****   uint8_t sat;
 317:quantum/rgblight.c ****   if (rgblight_config.sat + RGBLIGHT_SAT_STEP > 255) {
 318:quantum/rgblight.c ****     sat = 255;
 319:quantum/rgblight.c ****   } else {
 320:quantum/rgblight.c ****     sat = rgblight_config.sat + RGBLIGHT_SAT_STEP;
 321:quantum/rgblight.c ****   }
 322:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, sat, rgblight_config.val);
 323:quantum/rgblight.c **** }
 324:quantum/rgblight.c **** void rgblight_decrease_sat(void) {
 325:quantum/rgblight.c ****   uint8_t sat;
 326:quantum/rgblight.c ****   if (rgblight_config.sat - RGBLIGHT_SAT_STEP < 0) {
 327:quantum/rgblight.c ****     sat = 0;
 328:quantum/rgblight.c ****   } else {
 329:quantum/rgblight.c ****     sat = rgblight_config.sat - RGBLIGHT_SAT_STEP;
 330:quantum/rgblight.c ****   }
 331:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, sat, rgblight_config.val);
 332:quantum/rgblight.c **** }
 333:quantum/rgblight.c **** void rgblight_increase_val(void) {
 334:quantum/rgblight.c ****   uint8_t val;
 335:quantum/rgblight.c ****   if (rgblight_config.val + RGBLIGHT_VAL_STEP > RGBLIGHT_LIMIT_VAL) {
 336:quantum/rgblight.c ****     val = RGBLIGHT_LIMIT_VAL;
 337:quantum/rgblight.c ****   } else {
 338:quantum/rgblight.c ****     val = rgblight_config.val + RGBLIGHT_VAL_STEP;
 339:quantum/rgblight.c ****   }
 340:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, rgblight_config.sat, val);
 341:quantum/rgblight.c **** }
 342:quantum/rgblight.c **** void rgblight_decrease_val(void) {
 343:quantum/rgblight.c ****   uint8_t val;
 344:quantum/rgblight.c ****   if (rgblight_config.val - RGBLIGHT_VAL_STEP < 0) {
 345:quantum/rgblight.c ****     val = 0;
 346:quantum/rgblight.c ****   } else {
 347:quantum/rgblight.c ****     val = rgblight_config.val - RGBLIGHT_VAL_STEP;
 348:quantum/rgblight.c ****   }
 349:quantum/rgblight.c ****   rgblight_sethsv(rgblight_config.hue, rgblight_config.sat, val);
 350:quantum/rgblight.c **** }
 351:quantum/rgblight.c **** void rgblight_increase_speed(void) {
 576               		.loc 1 351 36 is_stmt 1 view -0
 577               		.cfi_startproc
 578               	/* prologue: function */
 579               	/* frame size = 0 */
 580               	/* stack size = 0 */
 581               	.L__stack_usage = 0
 352:quantum/rgblight.c ****     rgblight_config.speed = increment( rgblight_config.speed, 1, 0, 3 );
 582               		.loc 1 352 5 view .LVU152
 583               	.LVL40:
 584               	.LBB16:
 585               	.LBI16:
 289:quantum/rgblight.c ****     int16_t new_value = value;
 586               		.loc 1 289 9 view .LVU153
 587               	.LBB17:
 290:quantum/rgblight.c ****     new_value += step;
 588               		.loc 1 290 5 view .LVU154
 290:quantum/rgblight.c ****     new_value += step;
 589               		.loc 1 290 13 is_stmt 0 view .LVU155
 590 0000 8091 0000 		lds r24,rgblight_config+4
 591 0004 90E0      		ldi r25,0
 592               	.LVL41:
 291:quantum/rgblight.c ****     return MIN( MAX( new_value, min ), max );
 593               		.loc 1 291 5 is_stmt 1 view .LVU156
 292:quantum/rgblight.c **** }
 594               		.loc 1 292 5 view .LVU157
 291:quantum/rgblight.c ****     return MIN( MAX( new_value, min ), max );
 595               		.loc 1 291 15 is_stmt 0 view .LVU158
 596 0006 0196      		adiw r24,1
 292:quantum/rgblight.c **** }
 597               		.loc 1 292 12 view .LVU159
 598 0008 8430      		cpi r24,4
 599 000a 9105      		cpc r25,__zero_reg__
 600 000c 04F0      		brlt .L28
 601 000e 83E0      		ldi r24,lo8(3)
 602 0010 90E0      		ldi r25,0
 603               	.L28:
 604 0012 8093 0000 		sts rgblight_config+4,r24
 605               	.LBE17:
 606               	.LBE16:
 353:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);//EECONFIG needs to be increased to support this
 607               		.loc 1 353 5 is_stmt 1 view .LVU160
 608 0016 6091 0000 		lds r22,rgblight_config
 609 001a 7091 0000 		lds r23,rgblight_config+1
 610 001e 8091 0000 		lds r24,rgblight_config+2
 611 0022 9091 0000 		lds r25,rgblight_config+3
 612 0026 0C94 0000 		jmp eeconfig_update_rgblight
 613               	.LVL42:
 614               		.cfi_endproc
 615               	.LFE32:
 617               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 618               	.global	rgblight_decrease_speed
 620               	rgblight_decrease_speed:
 621               	.LFB33:
 354:quantum/rgblight.c **** }
 355:quantum/rgblight.c **** 
 356:quantum/rgblight.c **** void rgblight_decrease_speed(void) {
 622               		.loc 1 356 36 view -0
 623               		.cfi_startproc
 624               	/* prologue: function */
 625               	/* frame size = 0 */
 626               	/* stack size = 0 */
 627               	.L__stack_usage = 0
 357:quantum/rgblight.c ****     rgblight_config.speed = decrement( rgblight_config.speed, 1, 0, 3 );
 628               		.loc 1 357 5 view .LVU162
 629               	.LVL43:
 630               	.LBB20:
 631               	.LBI20:
 295:quantum/rgblight.c ****     int16_t new_value = value;
 632               		.loc 1 295 9 view .LVU163
 633               	.LBB21:
 296:quantum/rgblight.c ****     new_value -= step;
 634               		.loc 1 296 5 view .LVU164
 296:quantum/rgblight.c ****     new_value -= step;
 635               		.loc 1 296 13 is_stmt 0 view .LVU165
 636 0000 8091 0000 		lds r24,rgblight_config+4
 637               	.LVL44:
 297:quantum/rgblight.c ****     return MIN( MAX( new_value, min ), max );
 638               		.loc 1 297 5 is_stmt 1 view .LVU166
 298:quantum/rgblight.c **** }
 639               		.loc 1 298 5 view .LVU167
 297:quantum/rgblight.c ****     return MIN( MAX( new_value, min ), max );
 640               		.loc 1 297 15 is_stmt 0 view .LVU168
 641 0004 8150      		subi r24,1
 642 0006 990B      		sbc r25,r25
 298:quantum/rgblight.c **** }
 643               		.loc 1 298 12 view .LVU169
 644 0008 97FF      		sbrs r25,7
 645 000a 00C0      		rjmp .L30
 646 000c 90E0      		ldi r25,0
 647 000e 80E0      		ldi r24,0
 648               	.L30:
 649 0010 8430      		cpi r24,4
 650 0012 9105      		cpc r25,__zero_reg__
 651 0014 04F0      		brlt .L31
 652 0016 83E0      		ldi r24,lo8(3)
 653 0018 90E0      		ldi r25,0
 654               	.L31:
 655 001a 8093 0000 		sts rgblight_config+4,r24
 656               	.LBE21:
 657               	.LBE20:
 358:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);//EECONFIG needs to be increased to support this
 658               		.loc 1 358 5 is_stmt 1 view .LVU170
 659 001e 6091 0000 		lds r22,rgblight_config
 660 0022 7091 0000 		lds r23,rgblight_config+1
 661 0026 8091 0000 		lds r24,rgblight_config+2
 662 002a 9091 0000 		lds r25,rgblight_config+3
 663 002e 0C94 0000 		jmp eeconfig_update_rgblight
 664               	.LVL45:
 665               		.cfi_endproc
 666               	.LFE33:
 668               		.section	.text.rgblight_get_hue,"ax",@progbits
 669               	.global	rgblight_get_hue
 671               	rgblight_get_hue:
 672               	.LFB36:
 359:quantum/rgblight.c **** }
 360:quantum/rgblight.c **** 
 361:quantum/rgblight.c **** void rgblight_sethsv_noeeprom(uint16_t hue, uint8_t sat, uint8_t val) {
 362:quantum/rgblight.c ****   inmem_config.raw = rgblight_config.raw;
 363:quantum/rgblight.c ****   if (rgblight_config.enable) {
 364:quantum/rgblight.c ****     LED_TYPE tmp_led;
 365:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 366:quantum/rgblight.c ****     inmem_config.hue = hue;
 367:quantum/rgblight.c ****     inmem_config.sat = sat;
 368:quantum/rgblight.c ****     inmem_config.val = val;
 369:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 370:quantum/rgblight.c ****     rgblight_setrgb(tmp_led.r, tmp_led.g, tmp_led.b);
 371:quantum/rgblight.c ****   }
 372:quantum/rgblight.c **** }
 373:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 374:quantum/rgblight.c ****   if (rgblight_config.enable) {
 375:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 376:quantum/rgblight.c ****       // same static color
 377:quantum/rgblight.c ****       rgblight_sethsv_noeeprom(hue, sat, val);
 378:quantum/rgblight.c ****     } else {
 379:quantum/rgblight.c ****       // all LEDs in same color
 380:quantum/rgblight.c ****       if (rgblight_config.mode >= 2 && rgblight_config.mode <= 5) {
 381:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 382:quantum/rgblight.c ****         val = rgblight_config.val;
 383:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 384:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 385:quantum/rgblight.c ****         hue = rgblight_config.hue;
 386:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 25 && rgblight_config.mode <= 34) {
 387:quantum/rgblight.c ****         // static gradient
 388:quantum/rgblight.c ****         uint16_t _hue;
 389:quantum/rgblight.c ****         int8_t direction = ((rgblight_config.mode - 25) % 2) ? -1 : 1;
 390:quantum/rgblight.c ****         uint16_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[(rgblight_config.mode - 25) / 2]);
 391:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 392:quantum/rgblight.c ****           _hue = (range / RGBLED_NUM * i * direction + hue + 360) % 360;
 393:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %u,%u,%d,%u\n", i, _hue, direction, range);
 394:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i]);
 395:quantum/rgblight.c ****         }
 396:quantum/rgblight.c ****         rgblight_set();
 397:quantum/rgblight.c ****       }
 398:quantum/rgblight.c ****     }
 399:quantum/rgblight.c ****     rgblight_config.hue = hue;
 400:quantum/rgblight.c ****     rgblight_config.sat = sat;
 401:quantum/rgblight.c ****     rgblight_config.val = val;
 402:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 403:quantum/rgblight.c ****     xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rgbl
 404:quantum/rgblight.c ****   }
 405:quantum/rgblight.c **** }
 406:quantum/rgblight.c **** 
 407:quantum/rgblight.c **** uint16_t rgblight_get_hue(void) {
 673               		.loc 1 407 33 view -0
 674               		.cfi_startproc
 675               	/* prologue: function */
 676               	/* frame size = 0 */
 677               	/* stack size = 0 */
 678               	.L__stack_usage = 0
 408:quantum/rgblight.c ****   return rgblight_config.hue;
 679               		.loc 1 408 3 view .LVU172
 680               		.loc 1 408 25 is_stmt 0 view .LVU173
 681 0000 8091 0000 		lds r24,rgblight_config
 682 0004 881F      		rol r24
 683 0006 8827      		clr r24
 684 0008 881F      		rol r24
 685 000a 9091 0000 		lds r25,rgblight_config+1
 686 000e 292F      		mov r18,r25
 687 0010 220F      		lsl r18
 688 0012 97FB      		bst r25,7
 689 0014 9927      		clr r25
 690 0016 90F9      		bld r25,0
 409:quantum/rgblight.c **** }
 691               		.loc 1 409 1 view .LVU174
 692 0018 822B      		or r24,r18
 693               	/* epilogue start */
 694 001a 0895      		ret
 695               		.cfi_endproc
 696               	.LFE36:
 698               		.section	.text.rgblight_get_sat,"ax",@progbits
 699               	.global	rgblight_get_sat
 701               	rgblight_get_sat:
 702               	.LFB37:
 410:quantum/rgblight.c **** 
 411:quantum/rgblight.c **** uint8_t rgblight_get_sat(void) {
 703               		.loc 1 411 32 is_stmt 1 view -0
 704               		.cfi_startproc
 705               	/* prologue: function */
 706               	/* frame size = 0 */
 707               	/* stack size = 0 */
 708               	.L__stack_usage = 0
 412:quantum/rgblight.c ****   return rgblight_config.sat;
 709               		.loc 1 412 3 view .LVU176
 413:quantum/rgblight.c **** }
 710               		.loc 1 413 1 is_stmt 0 view .LVU177
 711 0000 8091 0000 		lds r24,rgblight_config+2
 712               	/* epilogue start */
 713 0004 0895      		ret
 714               		.cfi_endproc
 715               	.LFE37:
 717               		.section	.text.rgblight_get_val,"ax",@progbits
 718               	.global	rgblight_get_val
 720               	rgblight_get_val:
 721               	.LFB38:
 414:quantum/rgblight.c **** 
 415:quantum/rgblight.c **** uint8_t rgblight_get_val(void) {
 722               		.loc 1 415 32 is_stmt 1 view -0
 723               		.cfi_startproc
 724               	/* prologue: function */
 725               	/* frame size = 0 */
 726               	/* stack size = 0 */
 727               	.L__stack_usage = 0
 416:quantum/rgblight.c ****   return rgblight_config.val;
 728               		.loc 1 416 3 view .LVU179
 417:quantum/rgblight.c **** }
 729               		.loc 1 417 1 is_stmt 0 view .LVU180
 730 0000 8091 0000 		lds r24,rgblight_config+3
 731               	/* epilogue start */
 732 0004 0895      		ret
 733               		.cfi_endproc
 734               	.LFE38:
 736               		.section	.text.rgblight_set,"ax",@progbits
 737               	.global	rgblight_set
 739               	rgblight_set:
 740               	.LFB42:
 418:quantum/rgblight.c **** 
 419:quantum/rgblight.c **** void rgblight_setrgb(uint8_t r, uint8_t g, uint8_t b) {
 420:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 421:quantum/rgblight.c **** 
 422:quantum/rgblight.c ****   for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 423:quantum/rgblight.c ****     led[i].r = r;
 424:quantum/rgblight.c ****     led[i].g = g;
 425:quantum/rgblight.c ****     led[i].b = b;
 426:quantum/rgblight.c ****   }
 427:quantum/rgblight.c ****   rgblight_set();
 428:quantum/rgblight.c **** }
 429:quantum/rgblight.c **** 
 430:quantum/rgblight.c **** void rgblight_setrgb_at(uint8_t r, uint8_t g, uint8_t b, uint8_t index) {
 431:quantum/rgblight.c ****   if (!rgblight_config.enable || index >= RGBLED_NUM) { return; }
 432:quantum/rgblight.c **** 
 433:quantum/rgblight.c ****   led[index].r = r;
 434:quantum/rgblight.c ****   led[index].g = g;
 435:quantum/rgblight.c ****   led[index].b = b;
 436:quantum/rgblight.c ****   rgblight_set();
 437:quantum/rgblight.c **** }
 438:quantum/rgblight.c **** 
 439:quantum/rgblight.c **** void rgblight_sethsv_at(uint16_t hue, uint8_t sat, uint8_t val, uint8_t index) {
 440:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 441:quantum/rgblight.c **** 
 442:quantum/rgblight.c ****   LED_TYPE tmp_led;
 443:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 444:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 445:quantum/rgblight.c **** }
 446:quantum/rgblight.c **** 
 447:quantum/rgblight.c **** #ifndef RGBLIGHT_CUSTOM_DRIVER
 448:quantum/rgblight.c **** void rgblight_set(void) {
 741               		.loc 1 448 25 is_stmt 1 view -0
 742               		.cfi_startproc
 743               	/* prologue: function */
 744               	/* frame size = 0 */
 745               	/* stack size = 0 */
 746               	.L__stack_usage = 0
 449:quantum/rgblight.c ****   if (rgblight_config.enable) {
 747               		.loc 1 449 3 view .LVU182
 748               		.loc 1 449 7 is_stmt 0 view .LVU183
 749 0000 8091 0000 		lds r24,rgblight_config
 750 0004 E0E0      		ldi r30,lo8(led)
 751 0006 F0E0      		ldi r31,hi8(led)
 752               		.loc 1 449 6 view .LVU184
 753 0008 80FF      		sbrs r24,0
 754 000a 00C0      		rjmp .L37
 755               	.L38:
 450:quantum/rgblight.c ****     #ifdef RGBW
 451:quantum/rgblight.c ****       ws2812_setleds_rgbw(led, RGBLED_NUM);
 452:quantum/rgblight.c ****     #else
 453:quantum/rgblight.c ****       ws2812_setleds(led, RGBLED_NUM);
 756               		.loc 1 453 7 is_stmt 1 view .LVU185
 757 000c 60E1      		ldi r22,lo8(16)
 758 000e 70E0      		ldi r23,0
 759 0010 80E0      		ldi r24,lo8(led)
 760 0012 90E0      		ldi r25,hi8(led)
 761 0014 0C94 0000 		jmp ws2812_setleds
 762               	.LVL46:
 763               	.L37:
 764               	.LBB22:
 454:quantum/rgblight.c ****     #endif
 455:quantum/rgblight.c ****   } else {
 456:quantum/rgblight.c ****     for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 457:quantum/rgblight.c ****       led[i].r = 0;
 765               		.loc 1 457 7 discriminator 3 view .LVU186
 766               		.loc 1 457 16 is_stmt 0 discriminator 3 view .LVU187
 767 0018 1182      		std Z+1,__zero_reg__
 458:quantum/rgblight.c ****       led[i].g = 0;
 768               		.loc 1 458 7 is_stmt 1 discriminator 3 view .LVU188
 769               		.loc 1 458 16 is_stmt 0 discriminator 3 view .LVU189
 770 001a 1082      		st Z,__zero_reg__
 459:quantum/rgblight.c ****       led[i].b = 0;
 771               		.loc 1 459 7 is_stmt 1 discriminator 3 view .LVU190
 772               		.loc 1 459 16 is_stmt 0 discriminator 3 view .LVU191
 773 001c 1282      		std Z+2,__zero_reg__
 774               	.LVL47:
 775               		.loc 1 459 16 discriminator 3 view .LVU192
 776 001e 3396      		adiw r30,3
 456:quantum/rgblight.c ****       led[i].r = 0;
 777               		.loc 1 456 5 discriminator 3 view .LVU193
 778 0020 80E0      		ldi r24,hi8(led+48)
 779 0022 E030      		cpi r30,lo8(led+48)
 780 0024 F807      		cpc r31,r24
 781 0026 01F4      		brne .L37
 782 0028 00C0      		rjmp .L38
 783               	.LBE22:
 784               		.cfi_endproc
 785               	.LFE42:
 787               		.section	.text.rgblight_setrgb,"ax",@progbits
 788               	.global	rgblight_setrgb
 790               	rgblight_setrgb:
 791               	.LVL48:
 792               	.LFB39:
 419:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 793               		.loc 1 419 55 is_stmt 1 view -0
 794               		.cfi_startproc
 795               	/* prologue: function */
 796               	/* frame size = 0 */
 797               	/* stack size = 0 */
 798               	.L__stack_usage = 0
 420:quantum/rgblight.c **** 
 799               		.loc 1 420 3 view .LVU195
 420:quantum/rgblight.c **** 
 800               		.loc 1 420 23 is_stmt 0 view .LVU196
 801 0000 9091 0000 		lds r25,rgblight_config
 420:quantum/rgblight.c **** 
 802               		.loc 1 420 6 view .LVU197
 803 0004 90FF      		sbrs r25,0
 804 0006 00C0      		rjmp .L40
 805 0008 E0E0      		ldi r30,lo8(led)
 806 000a F0E0      		ldi r31,hi8(led)
 807               	.L42:
 808               	.LBB23:
 423:quantum/rgblight.c ****     led[i].g = g;
 809               		.loc 1 423 5 is_stmt 1 discriminator 3 view .LVU198
 423:quantum/rgblight.c ****     led[i].g = g;
 810               		.loc 1 423 14 is_stmt 0 discriminator 3 view .LVU199
 811 000c 8183      		std Z+1,r24
 424:quantum/rgblight.c ****     led[i].b = b;
 812               		.loc 1 424 5 is_stmt 1 discriminator 3 view .LVU200
 424:quantum/rgblight.c ****     led[i].b = b;
 813               		.loc 1 424 14 is_stmt 0 discriminator 3 view .LVU201
 814 000e 6083      		st Z,r22
 425:quantum/rgblight.c ****   }
 815               		.loc 1 425 5 is_stmt 1 discriminator 3 view .LVU202
 425:quantum/rgblight.c ****   }
 816               		.loc 1 425 14 is_stmt 0 discriminator 3 view .LVU203
 817 0010 4283      		std Z+2,r20
 818               	.LVL49:
 425:quantum/rgblight.c ****   }
 819               		.loc 1 425 14 discriminator 3 view .LVU204
 820 0012 3396      		adiw r30,3
 422:quantum/rgblight.c ****     led[i].r = r;
 821               		.loc 1 422 3 discriminator 3 view .LVU205
 822 0014 90E0      		ldi r25,hi8(led+48)
 823 0016 E030      		cpi r30,lo8(led+48)
 824 0018 F907      		cpc r31,r25
 825 001a 01F4      		brne .L42
 422:quantum/rgblight.c ****     led[i].r = r;
 826               		.loc 1 422 3 discriminator 3 view .LVU206
 827               	.LBE23:
 427:quantum/rgblight.c **** }
 828               		.loc 1 427 3 is_stmt 1 view .LVU207
 829 001c 0C94 0000 		jmp rgblight_set
 830               	.LVL50:
 831               	.L40:
 832               	/* epilogue start */
 428:quantum/rgblight.c **** 
 833               		.loc 1 428 1 is_stmt 0 view .LVU208
 834 0020 0895      		ret
 835               		.cfi_endproc
 836               	.LFE39:
 838               		.section	.text.rgblight_sethsv_noeeprom,"ax",@progbits
 839               	.global	rgblight_sethsv_noeeprom
 841               	rgblight_sethsv_noeeprom:
 842               	.LVL51:
 843               	.LFB34:
 361:quantum/rgblight.c ****   inmem_config.raw = rgblight_config.raw;
 844               		.loc 1 361 71 is_stmt 1 view -0
 845               		.cfi_startproc
 361:quantum/rgblight.c ****   inmem_config.raw = rgblight_config.raw;
 846               		.loc 1 361 71 is_stmt 0 view .LVU210
 847 0000 EF92      		push r14
 848               	.LCFI8:
 849               		.cfi_def_cfa_offset 3
 850               		.cfi_offset 14, -2
 851 0002 FF92      		push r15
 852               	.LCFI9:
 853               		.cfi_def_cfa_offset 4
 854               		.cfi_offset 15, -3
 855 0004 0F93      		push r16
 856               	.LCFI10:
 857               		.cfi_def_cfa_offset 5
 858               		.cfi_offset 16, -4
 859 0006 1F93      		push r17
 860               	.LCFI11:
 861               		.cfi_def_cfa_offset 6
 862               		.cfi_offset 17, -5
 863 0008 CF93      		push r28
 864               	.LCFI12:
 865               		.cfi_def_cfa_offset 7
 866               		.cfi_offset 28, -6
 867 000a DF93      		push r29
 868               	.LCFI13:
 869               		.cfi_def_cfa_offset 8
 870               		.cfi_offset 29, -7
 871 000c 00D0      		rcall .
 872 000e 0F92      		push __tmp_reg__
 873               	.LCFI14:
 874               		.cfi_def_cfa_offset 11
 875 0010 CDB7      		in r28,__SP_L__
 876 0012 DEB7      		in r29,__SP_H__
 877               	.LCFI15:
 878               		.cfi_def_cfa_register 28
 879               	/* prologue: function */
 880               	/* frame size = 3 */
 881               	/* stack size = 9 */
 882               	.L__stack_usage = 9
 883 0014 182F      		mov r17,r24
 884 0016 E92E      		mov r14,r25
 885 0018 F62E      		mov r15,r22
 886 001a 042F      		mov r16,r20
 362:quantum/rgblight.c ****   if (rgblight_config.enable) {
 887               		.loc 1 362 3 is_stmt 1 view .LVU211
 362:quantum/rgblight.c ****   if (rgblight_config.enable) {
 888               		.loc 1 362 20 is_stmt 0 view .LVU212
 889 001c 8091 0000 		lds r24,rgblight_config
 890 0020 9091 0000 		lds r25,rgblight_config+1
 891 0024 A091 0000 		lds r26,rgblight_config+2
 892 0028 B091 0000 		lds r27,rgblight_config+3
 893               	.LVL52:
 362:quantum/rgblight.c ****   if (rgblight_config.enable) {
 894               		.loc 1 362 20 view .LVU213
 895 002c 8093 0000 		sts inmem_config,r24
 896 0030 9093 0000 		sts inmem_config+1,r25
 897 0034 A093 0000 		sts inmem_config+2,r26
 898 0038 B093 0000 		sts inmem_config+3,r27
 363:quantum/rgblight.c ****     LED_TYPE tmp_led;
 899               		.loc 1 363 3 is_stmt 1 view .LVU214
 363:quantum/rgblight.c ****     LED_TYPE tmp_led;
 900               		.loc 1 363 7 is_stmt 0 view .LVU215
 901 003c 8091 0000 		lds r24,rgblight_config
 363:quantum/rgblight.c ****     LED_TYPE tmp_led;
 902               		.loc 1 363 6 view .LVU216
 903 0040 80FF      		sbrs r24,0
 904 0042 00C0      		rjmp .L44
 905               	.LBB24:
 364:quantum/rgblight.c ****     sethsv(hue, sat, val, &tmp_led);
 906               		.loc 1 364 5 is_stmt 1 view .LVU217
 365:quantum/rgblight.c ****     inmem_config.hue = hue;
 907               		.loc 1 365 5 view .LVU218
 908 0044 9E01      		movw r18,r28
 909 0046 2F5F      		subi r18,-1
 910 0048 3F4F      		sbci r19,-1
 911 004a 812F      		mov r24,r17
 912 004c 9E2D      		mov r25,r14
 913 004e 0E94 0000 		call sethsv
 914               	.LVL53:
 366:quantum/rgblight.c ****     inmem_config.sat = sat;
 915               		.loc 1 366 5 view .LVU219
 366:quantum/rgblight.c ****     inmem_config.sat = sat;
 916               		.loc 1 366 22 is_stmt 0 view .LVU220
 917 0052 8091 0000 		lds r24,inmem_config
 918 0056 10FB      		bst r17,0
 919 0058 87F9      		bld r24,7
 920 005a 8093 0000 		sts inmem_config,r24
 921 005e 1695      		lsr r17
 922 0060 8091 0000 		lds r24,inmem_config+1
 923 0064 8078      		andi r24,lo8(-128)
 924 0066 812B      		or r24,r17
 925 0068 E0FA      		bst r14,0
 926 006a 87F9      		bld r24,7
 927 006c 8093 0000 		sts inmem_config+1,r24
 367:quantum/rgblight.c ****     inmem_config.val = val;
 928               		.loc 1 367 5 is_stmt 1 view .LVU221
 367:quantum/rgblight.c ****     inmem_config.val = val;
 929               		.loc 1 367 22 is_stmt 0 view .LVU222
 930 0070 F092 0000 		sts inmem_config+2,r15
 368:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 931               		.loc 1 368 5 is_stmt 1 view .LVU223
 368:quantum/rgblight.c ****     // dprintf("rgblight set hue [MEMORY]: %u,%u,%u\n", inmem_config.hue, inmem_config.sat, inmem_c
 932               		.loc 1 368 22 is_stmt 0 view .LVU224
 933 0074 0093 0000 		sts inmem_config+3,r16
 370:quantum/rgblight.c ****   }
 934               		.loc 1 370 5 is_stmt 1 view .LVU225
 935 0078 4B81      		ldd r20,Y+3
 936 007a 6981      		ldd r22,Y+1
 937 007c 8A81      		ldd r24,Y+2
 938 007e 0E94 0000 		call rgblight_setrgb
 939               	.LVL54:
 940               	.L44:
 941               	/* epilogue start */
 942               	.LBE24:
 372:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 943               		.loc 1 372 1 is_stmt 0 view .LVU226
 944 0082 0F90      		pop __tmp_reg__
 945 0084 0F90      		pop __tmp_reg__
 946 0086 0F90      		pop __tmp_reg__
 947 0088 DF91      		pop r29
 948 008a CF91      		pop r28
 949 008c 1F91      		pop r17
 950 008e 0F91      		pop r16
 951               	.LVL55:
 372:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 952               		.loc 1 372 1 view .LVU227
 953 0090 FF90      		pop r15
 954               	.LVL56:
 372:quantum/rgblight.c **** void rgblight_sethsv(uint16_t hue, uint8_t sat, uint8_t val) {
 955               		.loc 1 372 1 view .LVU228
 956 0092 EF90      		pop r14
 957 0094 0895      		ret
 958               		.cfi_endproc
 959               	.LFE34:
 961               		.section	.text.rgblight_sethsv,"ax",@progbits
 962               	.global	rgblight_sethsv
 964               	rgblight_sethsv:
 965               	.LVL57:
 966               	.LFB35:
 373:quantum/rgblight.c ****   if (rgblight_config.enable) {
 967               		.loc 1 373 62 is_stmt 1 view -0
 968               		.cfi_startproc
 373:quantum/rgblight.c ****   if (rgblight_config.enable) {
 969               		.loc 1 373 62 is_stmt 0 view .LVU230
 970 0000 6F92      		push r6
 971               	.LCFI16:
 972               		.cfi_def_cfa_offset 3
 973               		.cfi_offset 6, -2
 974 0002 7F92      		push r7
 975               	.LCFI17:
 976               		.cfi_def_cfa_offset 4
 977               		.cfi_offset 7, -3
 978 0004 8F92      		push r8
 979               	.LCFI18:
 980               		.cfi_def_cfa_offset 5
 981               		.cfi_offset 8, -4
 982 0006 9F92      		push r9
 983               	.LCFI19:
 984               		.cfi_def_cfa_offset 6
 985               		.cfi_offset 9, -5
 986 0008 AF92      		push r10
 987               	.LCFI20:
 988               		.cfi_def_cfa_offset 7
 989               		.cfi_offset 10, -6
 990 000a BF92      		push r11
 991               	.LCFI21:
 992               		.cfi_def_cfa_offset 8
 993               		.cfi_offset 11, -7
 994 000c CF92      		push r12
 995               	.LCFI22:
 996               		.cfi_def_cfa_offset 9
 997               		.cfi_offset 12, -8
 998 000e DF92      		push r13
 999               	.LCFI23:
 1000               		.cfi_def_cfa_offset 10
 1001               		.cfi_offset 13, -9
 1002 0010 EF92      		push r14
 1003               	.LCFI24:
 1004               		.cfi_def_cfa_offset 11
 1005               		.cfi_offset 14, -10
 1006 0012 FF92      		push r15
 1007               	.LCFI25:
 1008               		.cfi_def_cfa_offset 12
 1009               		.cfi_offset 15, -11
 1010 0014 0F93      		push r16
 1011               	.LCFI26:
 1012               		.cfi_def_cfa_offset 13
 1013               		.cfi_offset 16, -12
 1014 0016 1F93      		push r17
 1015               	.LCFI27:
 1016               		.cfi_def_cfa_offset 14
 1017               		.cfi_offset 17, -13
 1018 0018 CF93      		push r28
 1019               	.LCFI28:
 1020               		.cfi_def_cfa_offset 15
 1021               		.cfi_offset 28, -14
 1022 001a DF93      		push r29
 1023               	.LCFI29:
 1024               		.cfi_def_cfa_offset 16
 1025               		.cfi_offset 29, -15
 1026               	/* prologue: function */
 1027               	/* frame size = 0 */
 1028               	/* stack size = 14 */
 1029               	.L__stack_usage = 14
 1030 001c EC01      		movw r28,r24
 1031 001e 662E      		mov r6,r22
 1032 0020 742E      		mov r7,r20
 374:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 1033               		.loc 1 374 3 is_stmt 1 view .LVU231
 374:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 1034               		.loc 1 374 7 is_stmt 0 view .LVU232
 1035 0022 8091 0000 		lds r24,rgblight_config
 1036               	.LVL58:
 374:quantum/rgblight.c ****     if (rgblight_config.mode == 1) {
 1037               		.loc 1 374 6 view .LVU233
 1038 0026 80FF      		sbrs r24,0
 1039 0028 00C0      		rjmp .L49
 375:quantum/rgblight.c ****       // same static color
 1040               		.loc 1 375 5 is_stmt 1 view .LVU234
 375:quantum/rgblight.c ****       // same static color
 1041               		.loc 1 375 30 is_stmt 0 view .LVU235
 1042 002a 982F      		mov r25,r24
 1043 002c 9E77      		andi r25,lo8(126)
 375:quantum/rgblight.c ****       // same static color
 1044               		.loc 1 375 8 view .LVU236
 1045 002e 9230      		cpi r25,lo8(2)
 1046 0030 01F4      		brne .L51
 377:quantum/rgblight.c ****     } else {
 1047               		.loc 1 377 7 is_stmt 1 view .LVU237
 1048 0032 CE01      		movw r24,r28
 1049 0034 0E94 0000 		call rgblight_sethsv_noeeprom
 1050               	.LVL59:
 1051               	.L52:
 399:quantum/rgblight.c ****     rgblight_config.sat = sat;
 1052               		.loc 1 399 5 view .LVU238
 399:quantum/rgblight.c ****     rgblight_config.sat = sat;
 1053               		.loc 1 399 25 is_stmt 0 view .LVU239
 1054 0038 8091 0000 		lds r24,rgblight_config
 1055 003c 9C2F      		mov r25,r28
 1056 003e C0FB      		bst r28,0
 1057 0040 87F9      		bld r24,7
 1058 0042 8093 0000 		sts rgblight_config,r24
 1059 0046 9695      		lsr r25
 1060 0048 8091 0000 		lds r24,rgblight_config+1
 1061 004c 8078      		andi r24,lo8(-128)
 1062 004e 892B      		or r24,r25
 1063 0050 D0FB      		bst r29,0
 1064 0052 87F9      		bld r24,7
 1065 0054 8093 0000 		sts rgblight_config+1,r24
 400:quantum/rgblight.c ****     rgblight_config.val = val;
 1066               		.loc 1 400 5 is_stmt 1 view .LVU240
 400:quantum/rgblight.c ****     rgblight_config.val = val;
 1067               		.loc 1 400 25 is_stmt 0 view .LVU241
 1068 0058 6092 0000 		sts rgblight_config+2,r6
 401:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 1069               		.loc 1 401 5 is_stmt 1 view .LVU242
 401:quantum/rgblight.c ****     eeconfig_update_rgblight(rgblight_config.raw);
 1070               		.loc 1 401 25 is_stmt 0 view .LVU243
 1071 005c 7092 0000 		sts rgblight_config+3,r7
 402:quantum/rgblight.c ****     xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rgbl
 1072               		.loc 1 402 5 is_stmt 1 view .LVU244
 1073 0060 6091 0000 		lds r22,rgblight_config
 1074 0064 7091 0000 		lds r23,rgblight_config+1
 1075 0068 8091 0000 		lds r24,rgblight_config+2
 1076 006c 9091 0000 		lds r25,rgblight_config+3
 1077               	/* epilogue start */
 405:quantum/rgblight.c **** 
 1078               		.loc 1 405 1 is_stmt 0 view .LVU245
 1079 0070 DF91      		pop r29
 1080 0072 CF91      		pop r28
 1081               	.LVL60:
 405:quantum/rgblight.c **** 
 1082               		.loc 1 405 1 view .LVU246
 1083 0074 1F91      		pop r17
 1084 0076 0F91      		pop r16
 1085 0078 FF90      		pop r15
 1086 007a EF90      		pop r14
 1087 007c DF90      		pop r13
 1088 007e CF90      		pop r12
 1089 0080 BF90      		pop r11
 1090 0082 AF90      		pop r10
 1091 0084 9F90      		pop r9
 1092 0086 8F90      		pop r8
 1093 0088 7F90      		pop r7
 1094               	.LVL61:
 405:quantum/rgblight.c **** 
 1095               		.loc 1 405 1 view .LVU247
 1096 008a 6F90      		pop r6
 1097               	.LVL62:
 402:quantum/rgblight.c ****     xprintf("rgblight set hsv [EEPROM]: %u,%u,%u\n", rgblight_config.hue, rgblight_config.sat, rgbl
 1098               		.loc 1 402 5 view .LVU248
 1099 008c 0C94 0000 		jmp eeconfig_update_rgblight
 1100               	.LVL63:
 1101               	.L51:
 380:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1102               		.loc 1 380 7 is_stmt 1 view .LVU249
 380:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1103               		.loc 1 380 26 is_stmt 0 view .LVU250
 1104 0090 E82F      		mov r30,r24
 1105 0092 E695      		lsr r30
 1106 0094 EF73      		andi r30,lo8(63)
 380:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1107               		.loc 1 380 37 view .LVU251
 1108 0096 9EE3      		ldi r25,lo8(62)
 1109 0098 9E0F      		add r25,r30
 1110 009a 9F73      		andi r25,lo8(63)
 380:quantum/rgblight.c ****         // breathing mode, ignore the change of val, use in memory value instead
 1111               		.loc 1 380 10 view .LVU252
 1112 009c 9430      		cpi r25,lo8(4)
 1113 009e 00F4      		brsh .L53
 382:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 1114               		.loc 1 382 9 is_stmt 1 view .LVU253
 382:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 1115               		.loc 1 382 13 is_stmt 0 view .LVU254
 1116 00a0 7090 0000 		lds r7,rgblight_config+3
 1117               	.LVL64:
 382:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 14) {
 1118               		.loc 1 382 13 view .LVU255
 1119 00a4 00C0      		rjmp .L52
 1120               	.L53:
 383:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 1121               		.loc 1 383 14 is_stmt 1 view .LVU256
 383:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 1122               		.loc 1 383 44 is_stmt 0 view .LVU257
 1123 00a6 9AE3      		ldi r25,lo8(58)
 1124 00a8 9E0F      		add r25,r30
 1125 00aa 9F73      		andi r25,lo8(63)
 383:quantum/rgblight.c ****         // rainbow mood and rainbow swirl, ignore the change of hue
 1126               		.loc 1 383 17 view .LVU258
 1127 00ac 9930      		cpi r25,lo8(9)
 1128 00ae 00F4      		brsh .L54
 385:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 25 && rgblight_config.mode <= 34) {
 1129               		.loc 1 385 9 is_stmt 1 view .LVU259
 385:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 25 && rgblight_config.mode <= 34) {
 1130               		.loc 1 385 30 is_stmt 0 view .LVU260
 1131 00b0 881F      		rol r24
 1132 00b2 8827      		clr r24
 1133 00b4 881F      		rol r24
 1134 00b6 9091 0000 		lds r25,rgblight_config+1
 1135 00ba 292F      		mov r18,r25
 1136 00bc 220F      		lsl r18
 1137 00be C22F      		mov r28,r18
 1138               	.LVL65:
 385:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 25 && rgblight_config.mode <= 34) {
 1139               		.loc 1 385 30 view .LVU261
 1140 00c0 C82B      		or r28,r24
 1141 00c2 97FB      		bst r25,7
 1142 00c4 9927      		clr r25
 1143 00c6 90F9      		bld r25,0
 1144 00c8 D92F      		mov r29,r25
 1145               	.LVL66:
 385:quantum/rgblight.c ****       } else if (rgblight_config.mode >= 25 && rgblight_config.mode <= 34) {
 1146               		.loc 1 385 30 view .LVU262
 1147 00ca 00C0      		rjmp .L52
 1148               	.L54:
 386:quantum/rgblight.c ****         // static gradient
 1149               		.loc 1 386 14 is_stmt 1 view .LVU263
 386:quantum/rgblight.c ****         // static gradient
 1150               		.loc 1 386 45 is_stmt 0 view .LVU264
 1151 00cc 87E2      		ldi r24,lo8(39)
 1152 00ce 8E0F      		add r24,r30
 1153 00d0 8F73      		andi r24,lo8(63)
 386:quantum/rgblight.c ****         // static gradient
 1154               		.loc 1 386 17 view .LVU265
 1155 00d2 8A30      		cpi r24,lo8(10)
 1156 00d4 00F0      		brlo .+2
 1157 00d6 00C0      		rjmp .L52
 1158               	.LBB25:
 388:quantum/rgblight.c ****         int8_t direction = ((rgblight_config.mode - 25) % 2) ? -1 : 1;
 1159               		.loc 1 388 9 is_stmt 1 view .LVU266
 389:quantum/rgblight.c ****         uint16_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[(rgblight_config.mode - 25) / 2]);
 1160               		.loc 1 389 9 view .LVU267
 389:quantum/rgblight.c ****         uint16_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[(rgblight_config.mode - 25) / 2]);
 1161               		.loc 1 389 51 is_stmt 0 view .LVU268
 1162 00d8 E951      		subi r30,25
 1163 00da FF0B      		sbc r31,r31
 389:quantum/rgblight.c ****         uint16_t range = pgm_read_word(&RGBLED_GRADIENT_RANGES[(rgblight_config.mode - 25) / 2]);
 1164               		.loc 1 389 16 view .LVU269
 1165 00dc 21E0      		ldi r18,lo8(1)
 1166 00de E0FD      		sbrc r30,0
 1167 00e0 2FEF      		ldi r18,lo8(-1)
 1168               	.L55:
 1169               	.LVL67:
 390:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 1170               		.loc 1 390 9 is_stmt 1 discriminator 4 view .LVU270
 1171               	.LBB26:
 390:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 1172               		.loc 1 390 26 discriminator 4 view .LVU271
 1173 00e2 EE7F      		andi r30,254
 1174 00e4 E050      		subi r30,lo8(-(RGBLED_GRADIENT_RANGES))
 1175 00e6 F040      		sbci r31,hi8(-(RGBLED_GRADIENT_RANGES))
 1176               	.LVL68:
 390:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 1177               		.loc 1 390 26 discriminator 4 view .LVU272
 390:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 1178               		.loc 1 390 26 discriminator 4 view .LVU273
 1179               	/* #APP */
 1180               	 ;  390 "quantum/rgblight.c" 1
 1181 00e8 8591      		lpm r24, Z+
 1182 00ea 9491      		lpm r25, Z
 1183               		
 1184               	 ;  0 "" 2
 1185               	.LVL69:
 390:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 1186               		.loc 1 390 26 discriminator 4 view .LVU274
 390:quantum/rgblight.c ****         for (uint8_t i = 0; i < RGBLED_NUM; i++) {
 1187               		.loc 1 390 26 is_stmt 0 discriminator 4 view .LVU275
 1188               	/* #NOAPP */
 1189               	.LBE26:
 391:quantum/rgblight.c ****           _hue = (range / RGBLED_NUM * i * direction + hue + 360) % 360;
 1190               		.loc 1 391 9 is_stmt 1 discriminator 4 view .LVU276
 1191               	.LBB27:
 391:quantum/rgblight.c ****           _hue = (range / RGBLED_NUM * i * direction + hue + 360) % 360;
 1192               		.loc 1 391 14 discriminator 4 view .LVU277
 392:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %u,%u,%d,%u\n", i, _hue, direction, range);
 1193               		.loc 1 392 25 is_stmt 0 discriminator 4 view .LVU278
 1194 00ec 34E0      		ldi r19,4
 1195               		1:
 1196 00ee 9695      		lsr r25
 1197 00f0 8795      		ror r24
 1198 00f2 3A95      		dec r19
 1199 00f4 01F4      		brne 1b
 1200               	.LVL70:
 392:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %u,%u,%d,%u\n", i, _hue, direction, range);
 1201               		.loc 1 392 25 discriminator 4 view .LVU279
 1202 00f6 AC01      		movw r20,r24
 1203 00f8 2403      		mulsu r18,r20
 1204 00fa 5001      		movw r10,r0
 1205 00fc 259F      		mul r18,r21
 1206 00fe B00C      		add r11,r0
 1207 0100 1124      		clr __zero_reg__
 1208 0102 7E01      		movw r14,r28
 1209 0104 58E9      		ldi r21,-104
 1210 0106 E51A      		sub r14,r21
 1211 0108 5EEF      		ldi r21,-2
 1212 010a F50A      		sbc r15,r21
 1213 010c 00E0      		ldi r16,lo8(led)
 1214 010e 10E0      		ldi r17,hi8(led)
 1215 0110 40E0      		ldi r20,lo8(led+48)
 1216 0112 C42E      		mov r12,r20
 1217 0114 40E0      		ldi r20,hi8(led+48)
 1218 0116 D42E      		mov r13,r20
 392:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %u,%u,%d,%u\n", i, _hue, direction, range);
 1219               		.loc 1 392 16 discriminator 4 view .LVU280
 1220 0118 58E6      		ldi r21,lo8(104)
 1221 011a 852E      		mov r8,r21
 1222 011c 9924      		clr r9
 1223 011e 9394      		inc r9
 1224               	.LVL71:
 1225               	.L56:
 392:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %u,%u,%d,%u\n", i, _hue, direction, range);
 1226               		.loc 1 392 11 is_stmt 1 discriminator 3 view .LVU281
 393:quantum/rgblight.c ****           sethsv(_hue, sat, val, (LED_TYPE *)&led[i]);
 1227               		.loc 1 393 88 discriminator 3 view .LVU282
 394:quantum/rgblight.c ****         }
 1228               		.loc 1 394 11 discriminator 3 view .LVU283
 392:quantum/rgblight.c ****           dprintf("rgblight rainbow set hsv: %u,%u,%d,%u\n", i, _hue, direction, range);
 1229               		.loc 1 392 16 is_stmt 0 discriminator 3 view .LVU284
 1230 0120 C701      		movw r24,r14
 1231 0122 B401      		movw r22,r8
 1232 0124 0E94 0000 		call __udivmodhi4
 394:quantum/rgblight.c ****         }
 1233               		.loc 1 394 11 discriminator 3 view .LVU285
 1234 0128 9801      		movw r18,r16
 1235 012a 472D      		mov r20,r7
 1236 012c 662D      		mov r22,r6
 1237 012e 0E94 0000 		call sethsv
 1238               	.LVL72:
 394:quantum/rgblight.c ****         }
 1239               		.loc 1 394 11 discriminator 3 view .LVU286
 1240 0132 EA0C      		add r14,r10
 1241 0134 FB1C      		adc r15,r11
 1242               	.LVL73:
 394:quantum/rgblight.c ****         }
 1243               		.loc 1 394 11 discriminator 3 view .LVU287
 1244 0136 0D5F      		subi r16,-3
 1245 0138 1F4F      		sbci r17,-1
 391:quantum/rgblight.c ****           _hue = (range / RGBLED_NUM * i * direction + hue + 360) % 360;
 1246               		.loc 1 391 9 discriminator 3 view .LVU288
 1247 013a C016      		cp r12,r16
 1248 013c D106      		cpc r13,r17
 1249 013e 01F4      		brne .L56
 1250               	.LBE27:
 396:quantum/rgblight.c ****       }
 1251               		.loc 1 396 9 is_stmt 1 view .LVU289
 1252 0140 0E94 0000 		call rgblight_set
 1253               	.LVL74:
 1254 0144 00C0      		rjmp .L52
 1255               	.L49:
 1256               	/* epilogue start */
 396:quantum/rgblight.c ****       }
 1257               		.loc 1 396 9 is_stmt 0 view .LVU290
 1258               	.LBE25:
 405:quantum/rgblight.c **** 
 1259               		.loc 1 405 1 view .LVU291
 1260 0146 DF91      		pop r29
 1261 0148 CF91      		pop r28
 1262               	.LVL75:
 405:quantum/rgblight.c **** 
 1263               		.loc 1 405 1 view .LVU292
 1264 014a 1F91      		pop r17
 1265 014c 0F91      		pop r16
 1266 014e FF90      		pop r15
 1267 0150 EF90      		pop r14
 1268 0152 DF90      		pop r13
 1269 0154 CF90      		pop r12
 1270 0156 BF90      		pop r11
 1271 0158 AF90      		pop r10
 1272 015a 9F90      		pop r9
 1273 015c 8F90      		pop r8
 1274 015e 7F90      		pop r7
 1275               	.LVL76:
 405:quantum/rgblight.c **** 
 1276               		.loc 1 405 1 view .LVU293
 1277 0160 6F90      		pop r6
 1278               	.LVL77:
 405:quantum/rgblight.c **** 
 1279               		.loc 1 405 1 view .LVU294
 1280 0162 0895      		ret
 1281               		.cfi_endproc
 1282               	.LFE35:
 1284               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1285               	.global	rgblight_increase_hue
 1287               	rgblight_increase_hue:
 1288               	.LFB26:
 301:quantum/rgblight.c ****   uint16_t hue;
 1289               		.loc 1 301 34 is_stmt 1 view -0
 1290               		.cfi_startproc
 1291               	/* prologue: function */
 1292               	/* frame size = 0 */
 1293               	/* stack size = 0 */
 1294               	.L__stack_usage = 0
 302:quantum/rgblight.c ****   hue = (rgblight_config.hue+RGBLIGHT_HUE_STEP) % 360;
 1295               		.loc 1 302 3 view .LVU296
 303:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 1296               		.loc 1 303 3 view .LVU297
 1297               	.LVL78:
 304:quantum/rgblight.c **** }
 1298               		.loc 1 304 3 view .LVU298
 1299 0000 E0E0      		ldi r30,lo8(rgblight_config)
 1300 0002 F0E0      		ldi r31,hi8(rgblight_config)
 1301               	.LVL79:
 303:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 1302               		.loc 1 303 25 is_stmt 0 view .LVU299
 1303 0004 2081      		ld r18,Z
 1304 0006 221F      		rol r18
 1305 0008 2227      		clr r18
 1306 000a 221F      		rol r18
 1307 000c 3091 0000 		lds r19,rgblight_config+1
 1308 0010 432F      		mov r20,r19
 1309 0012 440F      		lsl r20
 1310 0014 842F      		mov r24,r20
 1311 0016 822B      		or r24,r18
 1312 0018 37FB      		bst r19,7
 1313 001a 9927      		clr r25
 1314 001c 90F9      		bld r25,0
 303:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 1315               		.loc 1 303 29 view .LVU300
 1316 001e 0896      		adiw r24,8
 303:quantum/rgblight.c ****   rgblight_sethsv(hue, rgblight_config.sat, rgblight_config.val);
 1317               		.loc 1 303 49 view .LVU301
 1318 0020 68E6      		ldi r22,lo8(104)
 1319 0022 71E0      		ldi r23,lo8(1)
 1320 0024 0E94 0000 		call __divmodhi4
 304:quantum/rgblight.c **** }
 1321               		.loc 1 304 3 view .LVU302
 1322 0028 4381      		ldd r20,Z+3
 1323 002a 6281      		ldd r22,Z+2
 1324 002c 0C94 0000 		jmp rgblight_sethsv
 1325               	.LVL80:
 304:quantum/rgblight.c **** }
 1326               		.loc 1 304 3 view .LVU303
 1327               		.cfi_endproc
 1328               	.LFE26:
 1330               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1331               	.global	rgblight_decrease_hue
 1333               	rgblight_decrease_hue:
 1334               	.LFB27:
 306:quantum/rgblight.c ****   uint16_t hue;
 1335               		.loc 1 306 34 is_stmt 1 view -0
 1336               		.cfi_startproc
 1337               	/* prologue: function */
 1338               	/* frame size = 0 */
 1339               	/* stack size = 0 */
 1340               	.L__stack_usage = 0
 307:quantum/rgblight.c ****   if (rgblight_config.hue-RGBLIGHT_HUE_STEP < 0) {
 1341               		.loc 1 307 3 view .LVU305
 308:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 1342               		.loc 1 308 3 view .LVU306
 308:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 1343               		.loc 1 308 22 is_stmt 0 view .LVU307
 1344 0000 2091 0000 		lds r18,rgblight_config
 1345 0004 221F      		rol r18
 1346 0006 2227      		clr r18
 1347 0008 221F      		rol r18
 1348 000a 3091 0000 		lds r19,rgblight_config+1
 1349 000e 432F      		mov r20,r19
 1350 0010 440F      		lsl r20
 1351 0012 842F      		mov r24,r20
 1352 0014 822B      		or r24,r18
 1353 0016 37FB      		bst r19,7
 1354 0018 9927      		clr r25
 1355 001a 90F9      		bld r25,0
 308:quantum/rgblight.c ****     hue = (rgblight_config.hue + 360 - RGBLIGHT_HUE_STEP) % 360;
 1356               		.loc 1 308 6 view .LVU308
 1357 001c 8830      		cpi r24,8
 1358 001e 9105      		cpc r25,__zero_reg__
 1359 0020 00F4      		brsh .L61
 309:quantum/rgblight.c ****   } else {
 1360               		.loc 1 309 5 is_stmt 1 view .LVU309
 309:quantum/rgblight.c ****   } else {
 1361               		.loc 1 309 38 is_stmt 0 view .LVU310
 1362 0022 805A      		subi r24,-96
 1363 0024 9E4F      		sbci r25,-2
 1364               	.LVL81:
 1365               	.L62:
 313:quantum/rgblight.c **** }
 1366               		.loc 1 313 3 is_stmt 1 view .LVU311
 1367 0026 4091 0000 		lds r20,rgblight_config+3
 1368 002a 6091 0000 		lds r22,rgblight_config+2
 1369 002e 0C94 0000 		jmp rgblight_sethsv
 1370               	.LVL82:
 1371               	.L61:
 311:quantum/rgblight.c ****   }
 1372               		.loc 1 311 5 view .LVU312
 311:quantum/rgblight.c ****   }
 1373               		.loc 1 311 32 is_stmt 0 view .LVU313
 1374 0032 0897      		sbiw r24,8
 311:quantum/rgblight.c ****   }
 1375               		.loc 1 311 9 view .LVU314
 1376 0034 68E6      		ldi r22,lo8(104)
 1377 0036 71E0      		ldi r23,lo8(1)
 1378 0038 0E94 0000 		call __divmodhi4
 1379               	.LVL83:
 311:quantum/rgblight.c ****   }
 1380               		.loc 1 311 9 view .LVU315
 1381 003c 00C0      		rjmp .L62
 1382               		.cfi_endproc
 1383               	.LFE27:
 1385               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1386               	.global	rgblight_increase_sat
 1388               	rgblight_increase_sat:
 1389               	.LFB28:
 315:quantum/rgblight.c ****   uint8_t sat;
 1390               		.loc 1 315 34 is_stmt 1 view -0
 1391               		.cfi_startproc
 1392               	/* prologue: function */
 1393               	/* frame size = 0 */
 1394               	/* stack size = 0 */
 1395               	.L__stack_usage = 0
 316:quantum/rgblight.c ****   if (rgblight_config.sat + RGBLIGHT_SAT_STEP > 255) {
 1396               		.loc 1 316 3 view .LVU317
 317:quantum/rgblight.c ****     sat = 255;
 1397               		.loc 1 317 3 view .LVU318
 317:quantum/rgblight.c ****     sat = 255;
 1398               		.loc 1 317 22 is_stmt 0 view .LVU319
 1399 0000 6091 0000 		lds r22,rgblight_config+2
 317:quantum/rgblight.c ****     sat = 255;
 1400               		.loc 1 317 6 view .LVU320
 1401 0004 683F      		cpi r22,lo8(-8)
 1402 0006 00F4      		brsh .L65
 320:quantum/rgblight.c ****   }
 1403               		.loc 1 320 5 is_stmt 1 view .LVU321
 320:quantum/rgblight.c ****   }
 1404               		.loc 1 320 9 is_stmt 0 view .LVU322
 1405 0008 685F      		subi r22,lo8(-(8))
 1406               	.LVL84:
 1407               	.L64:
 322:quantum/rgblight.c **** }
 1408               		.loc 1 322 3 is_stmt 1 view .LVU323
 322:quantum/rgblight.c **** }
 1409               		.loc 1 322 34 is_stmt 0 view .LVU324
 1410 000a 8091 0000 		lds r24,rgblight_config
 1411 000e 881F      		rol r24
 1412 0010 8827      		clr r24
 1413 0012 881F      		rol r24
 1414 0014 9091 0000 		lds r25,rgblight_config+1
 1415 0018 292F      		mov r18,r25
 1416 001a 220F      		lsl r18
 1417 001c 97FB      		bst r25,7
 1418 001e 9927      		clr r25
 1419 0020 90F9      		bld r25,0
 322:quantum/rgblight.c **** }
 1420               		.loc 1 322 3 view .LVU325
 1421 0022 4091 0000 		lds r20,rgblight_config+3
 1422 0026 822B      		or r24,r18
 1423 0028 0C94 0000 		jmp rgblight_sethsv
 1424               	.LVL85:
 1425               	.L65:
 318:quantum/rgblight.c ****   } else {
 1426               		.loc 1 318 9 view .LVU326
 1427 002c 6FEF      		ldi r22,lo8(-1)
 1428 002e 00C0      		rjmp .L64
 1429               		.cfi_endproc
 1430               	.LFE28:
 1432               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1433               	.global	rgblight_decrease_sat
 1435               	rgblight_decrease_sat:
 1436               	.LFB29:
 324:quantum/rgblight.c ****   uint8_t sat;
 1437               		.loc 1 324 34 is_stmt 1 view -0
 1438               		.cfi_startproc
 1439               	/* prologue: function */
 1440               	/* frame size = 0 */
 1441               	/* stack size = 0 */
 1442               	.L__stack_usage = 0
 325:quantum/rgblight.c ****   if (rgblight_config.sat - RGBLIGHT_SAT_STEP < 0) {
 1443               		.loc 1 325 3 view .LVU328
 326:quantum/rgblight.c ****     sat = 0;
 1444               		.loc 1 326 3 view .LVU329
 326:quantum/rgblight.c ****     sat = 0;
 1445               		.loc 1 326 22 is_stmt 0 view .LVU330
 1446 0000 6091 0000 		lds r22,rgblight_config+2
 326:quantum/rgblight.c ****     sat = 0;
 1447               		.loc 1 326 6 view .LVU331
 1448 0004 6830      		cpi r22,lo8(8)
 1449 0006 00F0      		brlo .L68
 329:quantum/rgblight.c ****   }
 1450               		.loc 1 329 5 is_stmt 1 view .LVU332
 329:quantum/rgblight.c ****   }
 1451               		.loc 1 329 9 is_stmt 0 view .LVU333
 1452 0008 6850      		subi r22,lo8(-(-8))
 1453               	.LVL86:
 1454               	.L67:
 331:quantum/rgblight.c **** }
 1455               		.loc 1 331 3 is_stmt 1 view .LVU334
 331:quantum/rgblight.c **** }
 1456               		.loc 1 331 34 is_stmt 0 view .LVU335
 1457 000a 8091 0000 		lds r24,rgblight_config
 1458 000e 881F      		rol r24
 1459 0010 8827      		clr r24
 1460 0012 881F      		rol r24
 1461 0014 9091 0000 		lds r25,rgblight_config+1
 1462 0018 292F      		mov r18,r25
 1463 001a 220F      		lsl r18
 1464 001c 97FB      		bst r25,7
 1465 001e 9927      		clr r25
 1466 0020 90F9      		bld r25,0
 331:quantum/rgblight.c **** }
 1467               		.loc 1 331 3 view .LVU336
 1468 0022 4091 0000 		lds r20,rgblight_config+3
 1469 0026 822B      		or r24,r18
 1470 0028 0C94 0000 		jmp rgblight_sethsv
 1471               	.LVL87:
 1472               	.L68:
 327:quantum/rgblight.c ****   } else {
 1473               		.loc 1 327 9 view .LVU337
 1474 002c 60E0      		ldi r22,0
 1475 002e 00C0      		rjmp .L67
 1476               		.cfi_endproc
 1477               	.LFE29:
 1479               		.section	.text.rgblight_increase_val,"ax",@progbits
 1480               	.global	rgblight_increase_val
 1482               	rgblight_increase_val:
 1483               	.LFB30:
 333:quantum/rgblight.c ****   uint8_t val;
 1484               		.loc 1 333 34 is_stmt 1 view -0
 1485               		.cfi_startproc
 1486               	/* prologue: function */
 1487               	/* frame size = 0 */
 1488               	/* stack size = 0 */
 1489               	.L__stack_usage = 0
 334:quantum/rgblight.c ****   if (rgblight_config.val + RGBLIGHT_VAL_STEP > RGBLIGHT_LIMIT_VAL) {
 1490               		.loc 1 334 3 view .LVU339
 335:quantum/rgblight.c ****     val = RGBLIGHT_LIMIT_VAL;
 1491               		.loc 1 335 3 view .LVU340
 335:quantum/rgblight.c ****     val = RGBLIGHT_LIMIT_VAL;
 1492               		.loc 1 335 22 is_stmt 0 view .LVU341
 1493 0000 4091 0000 		lds r20,rgblight_config+3
 335:quantum/rgblight.c ****     val = RGBLIGHT_LIMIT_VAL;
 1494               		.loc 1 335 6 view .LVU342
 1495 0004 483F      		cpi r20,lo8(-8)
 1496 0006 00F4      		brsh .L71
 338:quantum/rgblight.c ****   }
 1497               		.loc 1 338 5 is_stmt 1 view .LVU343
 338:quantum/rgblight.c ****   }
 1498               		.loc 1 338 9 is_stmt 0 view .LVU344
 1499 0008 485F      		subi r20,lo8(-(8))
 1500               	.LVL88:
 1501               	.L70:
 340:quantum/rgblight.c **** }
 1502               		.loc 1 340 3 is_stmt 1 view .LVU345
 340:quantum/rgblight.c **** }
 1503               		.loc 1 340 34 is_stmt 0 view .LVU346
 1504 000a 8091 0000 		lds r24,rgblight_config
 1505 000e 881F      		rol r24
 1506 0010 8827      		clr r24
 1507 0012 881F      		rol r24
 1508 0014 9091 0000 		lds r25,rgblight_config+1
 1509 0018 292F      		mov r18,r25
 1510 001a 220F      		lsl r18
 1511 001c 97FB      		bst r25,7
 1512 001e 9927      		clr r25
 1513 0020 90F9      		bld r25,0
 340:quantum/rgblight.c **** }
 1514               		.loc 1 340 3 view .LVU347
 1515 0022 6091 0000 		lds r22,rgblight_config+2
 1516 0026 822B      		or r24,r18
 1517 0028 0C94 0000 		jmp rgblight_sethsv
 1518               	.LVL89:
 1519               	.L71:
 336:quantum/rgblight.c ****   } else {
 1520               		.loc 1 336 9 view .LVU348
 1521 002c 4FEF      		ldi r20,lo8(-1)
 1522 002e 00C0      		rjmp .L70
 1523               		.cfi_endproc
 1524               	.LFE30:
 1526               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1527               	.global	rgblight_decrease_val
 1529               	rgblight_decrease_val:
 1530               	.LFB31:
 342:quantum/rgblight.c ****   uint8_t val;
 1531               		.loc 1 342 34 is_stmt 1 view -0
 1532               		.cfi_startproc
 1533               	/* prologue: function */
 1534               	/* frame size = 0 */
 1535               	/* stack size = 0 */
 1536               	.L__stack_usage = 0
 343:quantum/rgblight.c ****   if (rgblight_config.val - RGBLIGHT_VAL_STEP < 0) {
 1537               		.loc 1 343 3 view .LVU350
 344:quantum/rgblight.c ****     val = 0;
 1538               		.loc 1 344 3 view .LVU351
 344:quantum/rgblight.c ****     val = 0;
 1539               		.loc 1 344 22 is_stmt 0 view .LVU352
 1540 0000 4091 0000 		lds r20,rgblight_config+3
 344:quantum/rgblight.c ****     val = 0;
 1541               		.loc 1 344 6 view .LVU353
 1542 0004 4830      		cpi r20,lo8(8)
 1543 0006 00F0      		brlo .L74
 347:quantum/rgblight.c ****   }
 1544               		.loc 1 347 5 is_stmt 1 view .LVU354
 347:quantum/rgblight.c ****   }
 1545               		.loc 1 347 9 is_stmt 0 view .LVU355
 1546 0008 4850      		subi r20,lo8(-(-8))
 1547               	.LVL90:
 1548               	.L73:
 349:quantum/rgblight.c **** }
 1549               		.loc 1 349 3 is_stmt 1 view .LVU356
 349:quantum/rgblight.c **** }
 1550               		.loc 1 349 34 is_stmt 0 view .LVU357
 1551 000a 8091 0000 		lds r24,rgblight_config
 1552 000e 881F      		rol r24
 1553 0010 8827      		clr r24
 1554 0012 881F      		rol r24
 1555 0014 9091 0000 		lds r25,rgblight_config+1
 1556 0018 292F      		mov r18,r25
 1557 001a 220F      		lsl r18
 1558 001c 97FB      		bst r25,7
 1559 001e 9927      		clr r25
 1560 0020 90F9      		bld r25,0
 349:quantum/rgblight.c **** }
 1561               		.loc 1 349 3 view .LVU358
 1562 0022 6091 0000 		lds r22,rgblight_config+2
 1563 0026 822B      		or r24,r18
 1564 0028 0C94 0000 		jmp rgblight_sethsv
 1565               	.LVL91:
 1566               	.L74:
 345:quantum/rgblight.c ****   } else {
 1567               		.loc 1 345 9 view .LVU359
 1568 002c 40E0      		ldi r20,0
 1569 002e 00C0      		rjmp .L73
 1570               		.cfi_endproc
 1571               	.LFE31:
 1573               		.section	.text.rgblight_mode,"ax",@progbits
 1574               	.global	rgblight_mode
 1576               	rgblight_mode:
 1577               	.LVL92:
 1578               	.LFB20:
 221:quantum/rgblight.c ****   if (!rgblight_config.enable) {
 1579               		.loc 1 221 34 is_stmt 1 view -0
 1580               		.cfi_startproc
 1581               	/* prologue: function */
 1582               	/* frame size = 0 */
 1583               	/* stack size = 0 */
 1584               	.L__stack_usage = 0
 222:quantum/rgblight.c ****     return;
 1585               		.loc 1 222 3 view .LVU361
 222:quantum/rgblight.c ****     return;
 1586               		.loc 1 222 23 is_stmt 0 view .LVU362
 1587 0000 9091 0000 		lds r25,rgblight_config
 222:quantum/rgblight.c ****     return;
 1588               		.loc 1 222 6 view .LVU363
 1589 0004 90FF      		sbrs r25,0
 1590 0006 00C0      		rjmp .L75
 225:quantum/rgblight.c ****     rgblight_config.mode = 1;
 1591               		.loc 1 225 3 is_stmt 1 view .LVU364
 1592 0008 9178      		andi r25,lo8(-127)
 225:quantum/rgblight.c ****     rgblight_config.mode = 1;
 1593               		.loc 1 225 6 is_stmt 0 view .LVU365
 1594 000a 8111      		cpse r24,__zero_reg__
 1595 000c 00C0      		rjmp .L77
 226:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 1596               		.loc 1 226 5 is_stmt 1 view .LVU366
 226:quantum/rgblight.c ****   } else if (mode > RGBLIGHT_MODES) {
 1597               		.loc 1 226 26 is_stmt 0 view .LVU367
 1598 000e 9260      		ori r25,lo8(2)
 1599               	.LVL93:
 1600               	.L84:
 230:quantum/rgblight.c ****   }
 1601               		.loc 1 230 26 view .LVU368
 1602 0010 9093 0000 		sts rgblight_config,r25
 232:quantum/rgblight.c ****   xprintf("rgblight mode: %u\n", rgblight_config.mode);
 1603               		.loc 1 232 3 is_stmt 1 view .LVU369
 1604 0014 6091 0000 		lds r22,rgblight_config
 1605 0018 7091 0000 		lds r23,rgblight_config+1
 1606 001c 8091 0000 		lds r24,rgblight_config+2
 1607 0020 9091 0000 		lds r25,rgblight_config+3
 1608 0024 0E94 0000 		call eeconfig_update_rgblight
 1609               	.LVL94:
 233:quantum/rgblight.c ****   if (rgblight_config.mode == 1) {
 1610               		.loc 1 233 55 view .LVU370
 234:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 1611               		.loc 1 234 3 view .LVU371
 234:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 1612               		.loc 1 234 28 is_stmt 0 view .LVU372
 1613 0028 8091 0000 		lds r24,rgblight_config
 1614 002c 982F      		mov r25,r24
 1615 002e 9E77      		andi r25,lo8(126)
 234:quantum/rgblight.c ****     #ifdef RGBLIGHT_ANIMATIONS
 1616               		.loc 1 234 6 view .LVU373
 1617 0030 9230      		cpi r25,lo8(2)
 1618 0032 01F4      		brne .L80
 1619               	.L83:
 236:quantum/rgblight.c ****     #endif
 1620               		.loc 1 236 7 is_stmt 1 view .LVU374
 1621               	.LBB34:
 1622               	.LBI34:
 460:quantum/rgblight.c ****     }
 461:quantum/rgblight.c ****     #ifdef RGBW
 462:quantum/rgblight.c ****       ws2812_setleds_rgbw(led, RGBLED_NUM);
 463:quantum/rgblight.c ****     #else
 464:quantum/rgblight.c ****       ws2812_setleds(led, RGBLED_NUM);
 465:quantum/rgblight.c ****     #endif
 466:quantum/rgblight.c ****   }
 467:quantum/rgblight.c **** }
 468:quantum/rgblight.c **** #endif
 469:quantum/rgblight.c **** 
 470:quantum/rgblight.c **** #ifdef RGBLIGHT_ANIMATIONS
 471:quantum/rgblight.c **** 
 472:quantum/rgblight.c **** // Animation timer -- AVR Timer3
 473:quantum/rgblight.c **** void rgblight_timer_init(void) {
 474:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 475:quantum/rgblight.c ****   // if (rgblight_timer_is_init) {
 476:quantum/rgblight.c ****   //   return;
 477:quantum/rgblight.c ****   // }
 478:quantum/rgblight.c ****   // rgblight_timer_is_init = 1;
 479:quantum/rgblight.c ****   // /* Timer 3 setup */
 480:quantum/rgblight.c ****   // TCCR3B = _BV(WGM32) // CTC mode OCR3A as TOP
 481:quantum/rgblight.c ****   //       | _BV(CS30); // Clock selelct: clk/1
 482:quantum/rgblight.c ****   // /* Set TOP value */
 483:quantum/rgblight.c ****   // uint8_t sreg = SREG;
 484:quantum/rgblight.c ****   // cli();
 485:quantum/rgblight.c ****   // OCR3AH = (RGBLED_TIMER_TOP >> 8) & 0xff;
 486:quantum/rgblight.c ****   // OCR3AL = RGBLED_TIMER_TOP & 0xff;
 487:quantum/rgblight.c ****   // SREG = sreg;
 488:quantum/rgblight.c **** 
 489:quantum/rgblight.c ****   rgblight_timer_enabled = true;
 490:quantum/rgblight.c **** }
 491:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 492:quantum/rgblight.c ****   rgblight_timer_enabled = true;
 493:quantum/rgblight.c ****   dprintf("TIMER3 enabled.\n");
 494:quantum/rgblight.c **** }
 495:quantum/rgblight.c **** void rgblight_timer_disable(void) {
 1623               		.loc 1 495 6 view .LVU375
 1624               	.LBB35:
 496:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 1625               		.loc 1 496 3 view .LVU376
 1626               		.loc 1 496 26 is_stmt 0 view .LVU377
 1627 0034 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 497:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 1628               		.loc 1 497 32 is_stmt 1 view .LVU378
 1629               	.L81:
 1630               	.LBE35:
 1631               	.LBE34:
 257:quantum/rgblight.c **** }
 1632               		.loc 1 257 3 view .LVU379
 257:quantum/rgblight.c **** }
 1633               		.loc 1 257 34 is_stmt 0 view .LVU380
 1634 0038 881F      		rol r24
 1635 003a 8827      		clr r24
 1636 003c 881F      		rol r24
 1637 003e 9091 0000 		lds r25,rgblight_config+1
 1638 0042 292F      		mov r18,r25
 1639 0044 220F      		lsl r18
 1640 0046 97FB      		bst r25,7
 1641 0048 9927      		clr r25
 1642 004a 90F9      		bld r25,0
 257:quantum/rgblight.c **** }
 1643               		.loc 1 257 3 view .LVU381
 1644 004c 4091 0000 		lds r20,rgblight_config+3
 1645 0050 6091 0000 		lds r22,rgblight_config+2
 1646 0054 822B      		or r24,r18
 1647 0056 0C94 0000 		jmp rgblight_sethsv
 1648               	.LVL95:
 1649               	.L77:
 227:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 1650               		.loc 1 227 10 is_stmt 1 view .LVU382
 227:quantum/rgblight.c ****     rgblight_config.mode = RGBLIGHT_MODES;
 1651               		.loc 1 227 13 is_stmt 0 view .LVU383
 1652 005a 8332      		cpi r24,lo8(35)
 1653 005c 00F0      		brlo .L79
 228:quantum/rgblight.c ****   } else {
 1654               		.loc 1 228 5 is_stmt 1 view .LVU384
 228:quantum/rgblight.c ****   } else {
 1655               		.loc 1 228 26 is_stmt 0 view .LVU385
 1656 005e 9464      		ori r25,lo8(68)
 1657 0060 00C0      		rjmp .L84
 1658               	.L79:
 230:quantum/rgblight.c ****   }
 1659               		.loc 1 230 5 is_stmt 1 view .LVU386
 230:quantum/rgblight.c ****   }
 1660               		.loc 1 230 26 is_stmt 0 view .LVU387
 1661 0062 8F73      		andi r24,lo8(63)
 1662               	.LVL96:
 230:quantum/rgblight.c ****   }
 1663               		.loc 1 230 26 view .LVU388
 1664 0064 880F      		lsl r24
 1665 0066 982B      		or r25,r24
 1666 0068 00C0      		rjmp .L84
 1667               	.L80:
 238:quantum/rgblight.c ****     // MODE 2-5, breathing
 1668               		.loc 1 238 10 is_stmt 1 view .LVU389
 238:quantum/rgblight.c ****     // MODE 2-5, breathing
 1669               		.loc 1 238 29 is_stmt 0 view .LVU390
 1670 006a 982F      		mov r25,r24
 1671 006c 9695      		lsr r25
 1672 006e 9F73      		andi r25,lo8(63)
 238:quantum/rgblight.c ****     // MODE 2-5, breathing
 1673               		.loc 1 238 40 view .LVU391
 1674 0070 2EE3      		ldi r18,lo8(62)
 1675 0072 290F      		add r18,r25
 1676 0074 2F73      		andi r18,lo8(63)
 238:quantum/rgblight.c ****     // MODE 2-5, breathing
 1677               		.loc 1 238 13 view .LVU392
 1678 0076 2731      		cpi r18,lo8(23)
 1679 0078 00F4      		brsh .L82
 248:quantum/rgblight.c ****     #endif
 1680               		.loc 1 248 7 is_stmt 1 view .LVU393
 1681               	.LBB36:
 1682               	.LBI36:
 473:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 1683               		.loc 1 473 6 view .LVU394
 1684               	.LBB37:
 489:quantum/rgblight.c **** }
 1685               		.loc 1 489 3 view .LVU395
 489:quantum/rgblight.c **** }
 1686               		.loc 1 489 26 is_stmt 0 view .LVU396
 1687 007a 91E0      		ldi r25,lo8(1)
 1688 007c 9093 0000 		sts rgblight_timer_enabled,r25
 1689 0080 00C0      		rjmp .L81
 1690               	.L82:
 1691               	.LBE37:
 1692               	.LBE36:
 250:quantum/rgblight.c ****     // MODE 25-34, static gradient
 1693               		.loc 1 250 10 is_stmt 1 view .LVU397
 250:quantum/rgblight.c ****     // MODE 25-34, static gradient
 1694               		.loc 1 250 41 is_stmt 0 view .LVU398
 1695 0082 995D      		subi r25,lo8(-(39))
 1696 0084 9F73      		andi r25,lo8(63)
 250:quantum/rgblight.c ****     // MODE 25-34, static gradient
 1697               		.loc 1 250 13 view .LVU399
 1698 0086 9A30      		cpi r25,lo8(10)
 1699 0088 00F4      		brsh .L81
 1700 008a 00C0      		rjmp .L83
 1701               	.LVL97:
 1702               	.L75:
 1703               	/* epilogue start */
 258:quantum/rgblight.c **** 
 1704               		.loc 1 258 1 view .LVU400
 1705 008c 0895      		ret
 1706               		.cfi_endproc
 1707               	.LFE20:
 1709               		.section	.text.rgblight_init,"ax",@progbits
 1710               	.global	rgblight_init
 1712               	rgblight_init:
 1713               	.LFB13:
 141:quantum/rgblight.c ****   debug_enable = 1; // Debug ON!
 1714               		.loc 1 141 26 is_stmt 1 view -0
 1715               		.cfi_startproc
 1716               	/* prologue: function */
 1717               	/* frame size = 0 */
 1718               	/* stack size = 0 */
 1719               	.L__stack_usage = 0
 142:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 1720               		.loc 1 142 3 view .LVU402
 142:quantum/rgblight.c ****   dprintf("rgblight_init called.\n");
 1721               		.loc 1 142 16 is_stmt 0 view .LVU403
 1722 0000 8091 0000 		lds r24,debug_config
 1723 0004 8160      		ori r24,lo8(1<<0)
 1724 0006 8093 0000 		sts debug_config,r24
 143:quantum/rgblight.c ****   rgblight_inited = 1;
 1725               		.loc 1 143 37 is_stmt 1 view .LVU404
 144:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 1726               		.loc 1 144 3 view .LVU405
 144:quantum/rgblight.c ****   dprintf("rgblight_init start!\n");
 1727               		.loc 1 144 19 is_stmt 0 view .LVU406
 1728 000a 81E0      		ldi r24,lo8(1)
 1729 000c 8093 0000 		sts rgblight_inited,r24
 145:quantum/rgblight.c ****   if (!eeconfig_is_enabled()) {
 1730               		.loc 1 145 36 is_stmt 1 view .LVU407
 146:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 1731               		.loc 1 146 3 view .LVU408
 146:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 1732               		.loc 1 146 8 is_stmt 0 view .LVU409
 1733 0010 0E94 0000 		call eeconfig_is_enabled
 1734               	.LVL98:
 146:quantum/rgblight.c ****     dprintf("rgblight_init eeconfig is not enabled.\n");
 1735               		.loc 1 146 6 view .LVU410
 1736 0014 8111      		cpse r24,__zero_reg__
 1737 0016 00C0      		rjmp .L86
 147:quantum/rgblight.c ****     eeconfig_init();
 1738               		.loc 1 147 56 is_stmt 1 view .LVU411
 148:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 1739               		.loc 1 148 5 view .LVU412
 1740 0018 0E94 0000 		call eeconfig_init
 1741               	.LVL99:
 149:quantum/rgblight.c ****   }
 1742               		.loc 1 149 5 view .LVU413
 1743 001c 0E94 0000 		call eeconfig_update_rgblight_default
 1744               	.LVL100:
 1745               	.L86:
 151:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 1746               		.loc 1 151 3 view .LVU414
 151:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 1747               		.loc 1 151 25 is_stmt 0 view .LVU415
 1748 0020 0E94 0000 		call eeconfig_read_rgblight
 1749               	.LVL101:
 151:quantum/rgblight.c ****   if (!rgblight_config.mode) {
 1750               		.loc 1 151 23 view .LVU416
 1751 0024 6093 0000 		sts rgblight_config,r22
 1752 0028 7093 0000 		sts rgblight_config+1,r23
 1753 002c 8093 0000 		sts rgblight_config+2,r24
 1754 0030 9093 0000 		sts rgblight_config+3,r25
 152:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 1755               		.loc 1 152 3 is_stmt 1 view .LVU417
 152:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 1756               		.loc 1 152 7 is_stmt 0 view .LVU418
 1757 0034 6E77      		andi r22,lo8(126)
 152:quantum/rgblight.c ****     dprintf("rgblight_init rgblight_config.mode = 0. Write default values to EEPROM.\n");
 1758               		.loc 1 152 6 view .LVU419
 1759 0036 01F4      		brne .L87
 153:quantum/rgblight.c ****     eeconfig_update_rgblight_default();
 1760               		.loc 1 153 89 is_stmt 1 view .LVU420
 154:quantum/rgblight.c ****     rgblight_config.raw = eeconfig_read_rgblight();
 1761               		.loc 1 154 5 view .LVU421
 1762 0038 0E94 0000 		call eeconfig_update_rgblight_default
 1763               	.LVL102:
 155:quantum/rgblight.c ****   }
 1764               		.loc 1 155 5 view .LVU422
 155:quantum/rgblight.c ****   }
 1765               		.loc 1 155 27 is_stmt 0 view .LVU423
 1766 003c 0E94 0000 		call eeconfig_read_rgblight
 1767               	.LVL103:
 155:quantum/rgblight.c ****   }
 1768               		.loc 1 155 25 view .LVU424
 1769 0040 6093 0000 		sts rgblight_config,r22
 1770 0044 7093 0000 		sts rgblight_config+1,r23
 1771 0048 8093 0000 		sts rgblight_config+2,r24
 1772 004c 9093 0000 		sts rgblight_config+3,r25
 1773               	.L87:
 157:quantum/rgblight.c **** 
 1774               		.loc 1 157 3 is_stmt 1 view .LVU425
 160:quantum/rgblight.c ****   #endif
 1775               		.loc 1 160 5 view .LVU426
 1776               	.LBB40:
 1777               	.LBI40:
 473:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 1778               		.loc 1 473 6 view .LVU427
 1779               	.LBB41:
 489:quantum/rgblight.c **** }
 1780               		.loc 1 489 3 view .LVU428
 489:quantum/rgblight.c **** }
 1781               		.loc 1 489 26 is_stmt 0 view .LVU429
 1782 0050 81E0      		ldi r24,lo8(1)
 1783 0052 8093 0000 		sts rgblight_timer_enabled,r24
 1784               	.LBE41:
 1785               	.LBE40:
 163:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1786               		.loc 1 163 3 is_stmt 1 view .LVU430
 163:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1787               		.loc 1 163 7 is_stmt 0 view .LVU431
 1788 0056 8091 0000 		lds r24,rgblight_config
 163:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 1789               		.loc 1 163 6 view .LVU432
 1790 005a 80FF      		sbrs r24,0
 1791 005c 00C0      		rjmp .L85
 164:quantum/rgblight.c ****   }
 1792               		.loc 1 164 5 is_stmt 1 view .LVU433
 164:quantum/rgblight.c ****   }
 1793               		.loc 1 164 34 is_stmt 0 view .LVU434
 1794 005e 8695      		lsr r24
 164:quantum/rgblight.c ****   }
 1795               		.loc 1 164 5 view .LVU435
 1796 0060 8F73      		andi r24,lo8(63)
 1797 0062 0C94 0000 		jmp rgblight_mode
 1798               	.LVL104:
 1799               	.L85:
 1800               	/* epilogue start */
 166:quantum/rgblight.c **** 
 1801               		.loc 1 166 1 view .LVU436
 1802 0066 0895      		ret
 1803               		.cfi_endproc
 1804               	.LFE13:
 1806               		.section	.text.rgblight_increase,"ax",@progbits
 1807               	.global	rgblight_increase
 1809               	rgblight_increase:
 1810               	.LFB15:
 181:quantum/rgblight.c ****   uint8_t mode = 0;
 1811               		.loc 1 181 30 is_stmt 1 view -0
 1812               		.cfi_startproc
 1813               	/* prologue: function */
 1814               	/* frame size = 0 */
 1815               	/* stack size = 0 */
 1816               	.L__stack_usage = 0
 182:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 1817               		.loc 1 182 3 view .LVU438
 1818               	.LVL105:
 183:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 1819               		.loc 1 183 3 view .LVU439
 183:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 1820               		.loc 1 183 22 is_stmt 0 view .LVU440
 1821 0000 8091 0000 		lds r24,rgblight_config
 1822 0004 8695      		lsr r24
 1823 0006 8F73      		andi r24,lo8(63)
 183:quantum/rgblight.c ****     mode = rgblight_config.mode + 1;
 1824               		.loc 1 183 6 view .LVU441
 1825 0008 8232      		cpi r24,lo8(34)
 1826 000a 00F4      		brsh .L91
 184:quantum/rgblight.c ****   }
 1827               		.loc 1 184 5 is_stmt 1 view .LVU442
 184:quantum/rgblight.c ****   }
 1828               		.loc 1 184 10 is_stmt 0 view .LVU443
 1829 000c 8F5F      		subi r24,lo8(-(1))
 1830               	.LVL106:
 1831               	.L90:
 186:quantum/rgblight.c **** }
 1832               		.loc 1 186 3 is_stmt 1 view .LVU444
 1833 000e 0C94 0000 		jmp rgblight_mode
 1834               	.LVL107:
 1835               	.L91:
 182:quantum/rgblight.c ****   if (rgblight_config.mode < RGBLIGHT_MODES) {
 1836               		.loc 1 182 11 is_stmt 0 view .LVU445
 1837 0012 80E0      		ldi r24,0
 1838 0014 00C0      		rjmp .L90
 1839               		.cfi_endproc
 1840               	.LFE15:
 1842               		.section	.text.rgblight_decrease,"ax",@progbits
 1843               	.global	rgblight_decrease
 1845               	rgblight_decrease:
 1846               	.LFB16:
 188:quantum/rgblight.c ****   uint8_t mode = 0;
 1847               		.loc 1 188 30 is_stmt 1 view -0
 1848               		.cfi_startproc
 1849               	/* prologue: function */
 1850               	/* frame size = 0 */
 1851               	/* stack size = 0 */
 1852               	.L__stack_usage = 0
 189:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 1853               		.loc 1 189 3 view .LVU447
 1854               	.LVL108:
 191:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 1855               		.loc 1 191 3 view .LVU448
 191:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 1856               		.loc 1 191 22 is_stmt 0 view .LVU449
 1857 0000 8091 0000 		lds r24,rgblight_config
 1858 0004 8695      		lsr r24
 1859 0006 8F73      		andi r24,lo8(63)
 191:quantum/rgblight.c ****     mode = rgblight_config.mode - 1;
 1860               		.loc 1 191 6 view .LVU450
 1861 0008 8230      		cpi r24,lo8(2)
 1862 000a 00F0      		brlo .L94
 192:quantum/rgblight.c ****   }
 1863               		.loc 1 192 5 is_stmt 1 view .LVU451
 192:quantum/rgblight.c ****   }
 1864               		.loc 1 192 10 is_stmt 0 view .LVU452
 1865 000c 8150      		subi r24,lo8(-(-1))
 1866               	.LVL109:
 1867               	.L93:
 194:quantum/rgblight.c **** }
 1868               		.loc 1 194 3 is_stmt 1 view .LVU453
 1869 000e 0C94 0000 		jmp rgblight_mode
 1870               	.LVL110:
 1871               	.L94:
 189:quantum/rgblight.c ****   // Mode will never be < 1. If it ever is, eeprom needs to be initialized.
 1872               		.loc 1 189 11 is_stmt 0 view .LVU454
 1873 0012 80E0      		ldi r24,0
 1874 0014 00C0      		rjmp .L93
 1875               		.cfi_endproc
 1876               	.LFE16:
 1878               		.section	.text.rgblight_step,"ax",@progbits
 1879               	.global	rgblight_step
 1881               	rgblight_step:
 1882               	.LFB17:
 196:quantum/rgblight.c ****   uint8_t mode = 0;
 1883               		.loc 1 196 26 is_stmt 1 view -0
 1884               		.cfi_startproc
 1885               	/* prologue: function */
 1886               	/* frame size = 0 */
 1887               	/* stack size = 0 */
 1888               	.L__stack_usage = 0
 197:quantum/rgblight.c ****   mode = rgblight_config.mode + 1;
 1889               		.loc 1 197 3 view .LVU456
 1890               	.LVL111:
 198:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 1891               		.loc 1 198 3 view .LVU457
 198:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 1892               		.loc 1 198 25 is_stmt 0 view .LVU458
 1893 0000 8091 0000 		lds r24,rgblight_config
 1894 0004 8695      		lsr r24
 1895 0006 8F73      		andi r24,lo8(63)
 198:quantum/rgblight.c ****   if (mode > RGBLIGHT_MODES) {
 1896               		.loc 1 198 8 view .LVU459
 1897 0008 8F5F      		subi r24,lo8(-(1))
 1898               	.LVL112:
 199:quantum/rgblight.c ****     mode = 1;
 1899               		.loc 1 199 3 is_stmt 1 view .LVU460
 199:quantum/rgblight.c ****     mode = 1;
 1900               		.loc 1 199 6 is_stmt 0 view .LVU461
 1901 000a 8332      		cpi r24,lo8(35)
 1902 000c 00F0      		brlo .L96
 200:quantum/rgblight.c ****   }
 1903               		.loc 1 200 10 view .LVU462
 1904 000e 81E0      		ldi r24,lo8(1)
 1905               	.LVL113:
 1906               	.L96:
 202:quantum/rgblight.c **** }
 1907               		.loc 1 202 3 is_stmt 1 view .LVU463
 1908 0010 0C94 0000 		jmp rgblight_mode
 1909               	.LVL114:
 202:quantum/rgblight.c **** }
 1910               		.loc 1 202 3 is_stmt 0 view .LVU464
 1911               		.cfi_endproc
 1912               	.LFE17:
 1914               		.section	.text.rgblight_step_reverse,"ax",@progbits
 1915               	.global	rgblight_step_reverse
 1917               	rgblight_step_reverse:
 1918               	.LFB18:
 204:quantum/rgblight.c ****   uint8_t mode = 0;
 1919               		.loc 1 204 34 is_stmt 1 view -0
 1920               		.cfi_startproc
 1921               	/* prologue: function */
 1922               	/* frame size = 0 */
 1923               	/* stack size = 0 */
 1924               	.L__stack_usage = 0
 205:quantum/rgblight.c ****   mode = rgblight_config.mode - 1;
 1925               		.loc 1 205 3 view .LVU466
 1926               	.LVL115:
 206:quantum/rgblight.c ****   if (mode < 1) {
 1927               		.loc 1 206 3 view .LVU467
 206:quantum/rgblight.c ****   if (mode < 1) {
 1928               		.loc 1 206 25 is_stmt 0 view .LVU468
 1929 0000 8091 0000 		lds r24,rgblight_config
 1930 0004 8695      		lsr r24
 1931 0006 8F73      		andi r24,lo8(63)
 206:quantum/rgblight.c ****   if (mode < 1) {
 1932               		.loc 1 206 8 view .LVU469
 1933 0008 8150      		subi r24,lo8(-(-1))
 1934               	.LVL116:
 207:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 1935               		.loc 1 207 3 is_stmt 1 view .LVU470
 207:quantum/rgblight.c ****     mode = RGBLIGHT_MODES;
 1936               		.loc 1 207 6 is_stmt 0 view .LVU471
 1937 000a 01F4      		brne .L98
 208:quantum/rgblight.c ****   }
 1938               		.loc 1 208 10 view .LVU472
 1939 000c 82E2      		ldi r24,lo8(34)
 1940               	.LVL117:
 1941               	.L98:
 210:quantum/rgblight.c **** }
 1942               		.loc 1 210 3 is_stmt 1 view .LVU473
 1943 000e 0C94 0000 		jmp rgblight_mode
 1944               	.LVL118:
 210:quantum/rgblight.c **** }
 1945               		.loc 1 210 3 is_stmt 0 view .LVU474
 1946               		.cfi_endproc
 1947               	.LFE18:
 1949               		.section	.text.rgblight_enable,"ax",@progbits
 1950               	.global	rgblight_enable
 1952               	rgblight_enable:
 1953               	.LFB22:
 270:quantum/rgblight.c ****   rgblight_config.enable = 1;
 1954               		.loc 1 270 28 is_stmt 1 view -0
 1955               		.cfi_startproc
 1956 0000 CF93      		push r28
 1957               	.LCFI30:
 1958               		.cfi_def_cfa_offset 3
 1959               		.cfi_offset 28, -2
 1960 0002 DF93      		push r29
 1961               	.LCFI31:
 1962               		.cfi_def_cfa_offset 4
 1963               		.cfi_offset 29, -3
 1964               	/* prologue: function */
 1965               	/* frame size = 0 */
 1966               	/* stack size = 2 */
 1967               	.L__stack_usage = 2
 271:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1968               		.loc 1 271 3 view .LVU476
 271:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 1969               		.loc 1 271 26 is_stmt 0 view .LVU477
 1970 0004 C0E0      		ldi r28,lo8(rgblight_config)
 1971 0006 D0E0      		ldi r29,hi8(rgblight_config)
 1972 0008 8881      		ld r24,Y
 1973 000a 8160      		ori r24,lo8(1<<0)
 1974 000c 8883      		st Y,r24
 272:quantum/rgblight.c ****   xprintf("rgblight enable: rgblight_config.enable = %u\n", rgblight_config.enable);
 1975               		.loc 1 272 3 is_stmt 1 view .LVU478
 1976 000e 6881      		ld r22,Y
 1977 0010 7981      		ldd r23,Y+1
 1978 0012 8A81      		ldd r24,Y+2
 1979 0014 9B81      		ldd r25,Y+3
 1980 0016 0E94 0000 		call eeconfig_update_rgblight
 1981               	.LVL119:
 273:quantum/rgblight.c ****   rgblight_mode(rgblight_config.mode);
 1982               		.loc 1 273 84 view .LVU479
 274:quantum/rgblight.c **** }
 1983               		.loc 1 274 3 view .LVU480
 274:quantum/rgblight.c **** }
 1984               		.loc 1 274 32 is_stmt 0 view .LVU481
 1985 001a 8881      		ld r24,Y
 1986 001c 8695      		lsr r24
 274:quantum/rgblight.c **** }
 1987               		.loc 1 274 3 view .LVU482
 1988 001e 8F73      		andi r24,lo8(63)
 1989               	/* epilogue start */
 275:quantum/rgblight.c **** 
 1990               		.loc 1 275 1 view .LVU483
 1991 0020 DF91      		pop r29
 1992 0022 CF91      		pop r28
 274:quantum/rgblight.c **** }
 1993               		.loc 1 274 3 view .LVU484
 1994 0024 0C94 0000 		jmp rgblight_mode
 1995               	.LVL120:
 1996               		.cfi_endproc
 1997               	.LFE22:
 1999               		.section	.text.rgblight_setrgb_at,"ax",@progbits
 2000               	.global	rgblight_setrgb_at
 2002               	rgblight_setrgb_at:
 2003               	.LVL121:
 2004               	.LFB40:
 430:quantum/rgblight.c ****   if (!rgblight_config.enable || index >= RGBLED_NUM) { return; }
 2005               		.loc 1 430 73 is_stmt 1 view -0
 2006               		.cfi_startproc
 2007               	/* prologue: function */
 2008               	/* frame size = 0 */
 2009               	/* stack size = 0 */
 2010               	.L__stack_usage = 0
 431:quantum/rgblight.c **** 
 2011               		.loc 1 431 3 view .LVU486
 431:quantum/rgblight.c **** 
 2012               		.loc 1 431 23 is_stmt 0 view .LVU487
 2013 0000 9091 0000 		lds r25,rgblight_config
 431:quantum/rgblight.c **** 
 2014               		.loc 1 431 6 view .LVU488
 2015 0004 90FF      		sbrs r25,0
 2016 0006 00C0      		rjmp .L100
 431:quantum/rgblight.c **** 
 2017               		.loc 1 431 31 discriminator 2 view .LVU489
 2018 0008 2031      		cpi r18,lo8(16)
 2019 000a 00F4      		brsh .L100
 433:quantum/rgblight.c ****   led[index].g = g;
 2020               		.loc 1 433 3 is_stmt 1 view .LVU490
 433:quantum/rgblight.c ****   led[index].g = g;
 2021               		.loc 1 433 13 is_stmt 0 view .LVU491
 2022 000c 30E0      		ldi r19,0
 433:quantum/rgblight.c ****   led[index].g = g;
 2023               		.loc 1 433 16 view .LVU492
 2024 000e F901      		movw r30,r18
 2025 0010 EE0F      		lsl r30
 2026 0012 FF1F      		rol r31
 2027 0014 E20F      		add r30,r18
 2028 0016 F31F      		adc r31,r19
 2029 0018 E050      		subi r30,lo8(-(led))
 2030 001a F040      		sbci r31,hi8(-(led))
 2031 001c 8183      		std Z+1,r24
 434:quantum/rgblight.c ****   led[index].b = b;
 2032               		.loc 1 434 3 is_stmt 1 view .LVU493
 434:quantum/rgblight.c ****   led[index].b = b;
 2033               		.loc 1 434 16 is_stmt 0 view .LVU494
 2034 001e 6083      		st Z,r22
 435:quantum/rgblight.c ****   rgblight_set();
 2035               		.loc 1 435 3 is_stmt 1 view .LVU495
 435:quantum/rgblight.c ****   rgblight_set();
 2036               		.loc 1 435 16 is_stmt 0 view .LVU496
 2037 0020 4283      		std Z+2,r20
 436:quantum/rgblight.c **** }
 2038               		.loc 1 436 3 is_stmt 1 view .LVU497
 2039 0022 0C94 0000 		jmp rgblight_set
 2040               	.LVL122:
 2041               	.L100:
 2042               	/* epilogue start */
 437:quantum/rgblight.c **** 
 2043               		.loc 1 437 1 is_stmt 0 view .LVU498
 2044 0026 0895      		ret
 2045               		.cfi_endproc
 2046               	.LFE40:
 2048               		.section	.text.rgblight_sethsv_at,"ax",@progbits
 2049               	.global	rgblight_sethsv_at
 2051               	rgblight_sethsv_at:
 2052               	.LVL123:
 2053               	.LFB41:
 439:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2054               		.loc 1 439 80 is_stmt 1 view -0
 2055               		.cfi_startproc
 439:quantum/rgblight.c ****   if (!rgblight_config.enable) { return; }
 2056               		.loc 1 439 80 is_stmt 0 view .LVU500
 2057 0000 1F93      		push r17
 2058               	.LCFI32:
 2059               		.cfi_def_cfa_offset 3
 2060               		.cfi_offset 17, -2
 2061 0002 CF93      		push r28
 2062               	.LCFI33:
 2063               		.cfi_def_cfa_offset 4
 2064               		.cfi_offset 28, -3
 2065 0004 DF93      		push r29
 2066               	.LCFI34:
 2067               		.cfi_def_cfa_offset 5
 2068               		.cfi_offset 29, -4
 2069 0006 00D0      		rcall .
 2070 0008 0F92      		push __tmp_reg__
 2071               	.LCFI35:
 2072               		.cfi_def_cfa_offset 8
 2073 000a CDB7      		in r28,__SP_L__
 2074 000c DEB7      		in r29,__SP_H__
 2075               	.LCFI36:
 2076               		.cfi_def_cfa_register 28
 2077               	/* prologue: function */
 2078               	/* frame size = 3 */
 2079               	/* stack size = 6 */
 2080               	.L__stack_usage = 6
 2081 000e 122F      		mov r17,r18
 440:quantum/rgblight.c **** 
 2082               		.loc 1 440 3 is_stmt 1 view .LVU501
 440:quantum/rgblight.c **** 
 2083               		.loc 1 440 23 is_stmt 0 view .LVU502
 2084 0010 2091 0000 		lds r18,rgblight_config
 2085               	.LVL124:
 440:quantum/rgblight.c **** 
 2086               		.loc 1 440 6 view .LVU503
 2087 0014 20FF      		sbrs r18,0
 2088 0016 00C0      		rjmp .L105
 442:quantum/rgblight.c ****   sethsv(hue, sat, val, &tmp_led);
 2089               		.loc 1 442 3 is_stmt 1 view .LVU504
 443:quantum/rgblight.c ****   rgblight_setrgb_at(tmp_led.r, tmp_led.g, tmp_led.b, index);
 2090               		.loc 1 443 3 view .LVU505
 2091 0018 9E01      		movw r18,r28
 2092 001a 2F5F      		subi r18,-1
 2093 001c 3F4F      		sbci r19,-1
 2094 001e 0E94 0000 		call sethsv
 2095               	.LVL125:
 444:quantum/rgblight.c **** }
 2096               		.loc 1 444 3 view .LVU506
 2097 0022 212F      		mov r18,r17
 2098 0024 4B81      		ldd r20,Y+3
 2099 0026 6981      		ldd r22,Y+1
 2100 0028 8A81      		ldd r24,Y+2
 2101 002a 0E94 0000 		call rgblight_setrgb_at
 2102               	.LVL126:
 2103               	.L105:
 2104               	/* epilogue start */
 445:quantum/rgblight.c **** 
 2105               		.loc 1 445 1 is_stmt 0 view .LVU507
 2106 002e 0F90      		pop __tmp_reg__
 2107 0030 0F90      		pop __tmp_reg__
 2108 0032 0F90      		pop __tmp_reg__
 2109 0034 DF91      		pop r29
 2110 0036 CF91      		pop r28
 2111 0038 1F91      		pop r17
 2112               	.LVL127:
 445:quantum/rgblight.c **** 
 2113               		.loc 1 445 1 view .LVU508
 2114 003a 0895      		ret
 2115               		.cfi_endproc
 2116               	.LFE41:
 2118               		.section	.text.rgblight_update_dword,"ax",@progbits
 2119               	.global	rgblight_update_dword
 2121               	rgblight_update_dword:
 2122               	.LVL128:
 2123               	.LFB14:
 168:quantum/rgblight.c ****   rgblight_config.raw = dword;
 2124               		.loc 1 168 44 is_stmt 1 view -0
 2125               		.cfi_startproc
 2126               	/* prologue: function */
 2127               	/* frame size = 0 */
 2128               	/* stack size = 0 */
 2129               	.L__stack_usage = 0
 169:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 2130               		.loc 1 169 3 view .LVU510
 169:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 2131               		.loc 1 169 23 is_stmt 0 view .LVU511
 2132 0000 6093 0000 		sts rgblight_config,r22
 2133 0004 7093 0000 		sts rgblight_config+1,r23
 2134 0008 8093 0000 		sts rgblight_config+2,r24
 2135 000c 9093 0000 		sts rgblight_config+3,r25
 170:quantum/rgblight.c ****   if (rgblight_config.enable)
 2136               		.loc 1 170 3 is_stmt 1 view .LVU512
 2137 0010 0E94 0000 		call eeconfig_update_rgblight
 2138               	.LVL129:
 171:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 2139               		.loc 1 171 3 view .LVU513
 171:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 2140               		.loc 1 171 7 is_stmt 0 view .LVU514
 2141 0014 8091 0000 		lds r24,rgblight_config
 171:quantum/rgblight.c ****     rgblight_mode(rgblight_config.mode);
 2142               		.loc 1 171 6 view .LVU515
 2143 0018 80FF      		sbrs r24,0
 2144 001a 00C0      		rjmp .L109
 172:quantum/rgblight.c ****   else {
 2145               		.loc 1 172 5 is_stmt 1 view .LVU516
 172:quantum/rgblight.c ****   else {
 2146               		.loc 1 172 34 is_stmt 0 view .LVU517
 2147 001c 8695      		lsr r24
 172:quantum/rgblight.c ****   else {
 2148               		.loc 1 172 5 view .LVU518
 2149 001e 8F73      		andi r24,lo8(63)
 2150 0020 0C94 0000 		jmp rgblight_mode
 2151               	.LVL130:
 2152               	.L109:
 175:quantum/rgblight.c ****     #endif
 2153               		.loc 1 175 7 is_stmt 1 view .LVU519
 2154               	.LBB44:
 2155               	.LBI44:
 495:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 2156               		.loc 1 495 6 view .LVU520
 2157               	.LBB45:
 496:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 2158               		.loc 1 496 3 view .LVU521
 496:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 2159               		.loc 1 496 26 is_stmt 0 view .LVU522
 2160 0024 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 2161               		.loc 1 497 32 is_stmt 1 view .LVU523
 2162               	.LBE45:
 2163               	.LBE44:
 177:quantum/rgblight.c ****   }
 2164               		.loc 1 177 7 view .LVU524
 2165 0028 0C94 0000 		jmp rgblight_set
 2166               	.LVL131:
 2167               		.cfi_endproc
 2168               	.LFE14:
 2170               		.section	.text.rgblight_disable,"ax",@progbits
 2171               	.global	rgblight_disable
 2173               	rgblight_disable:
 2174               	.LFB23:
 277:quantum/rgblight.c ****   rgblight_config.enable = 0;
 2175               		.loc 1 277 29 view -0
 2176               		.cfi_startproc
 2177               	/* prologue: function */
 2178               	/* frame size = 0 */
 2179               	/* stack size = 0 */
 2180               	.L__stack_usage = 0
 278:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 2181               		.loc 1 278 3 view .LVU526
 278:quantum/rgblight.c ****   eeconfig_update_rgblight(rgblight_config.raw);
 2182               		.loc 1 278 26 is_stmt 0 view .LVU527
 2183 0000 E0E0      		ldi r30,lo8(rgblight_config)
 2184 0002 F0E0      		ldi r31,hi8(rgblight_config)
 2185 0004 8081      		ld r24,Z
 2186 0006 8E7F      		andi r24,lo8(~(1<<0))
 2187 0008 8083      		st Z,r24
 279:quantum/rgblight.c ****   xprintf("rgblight disable: rgblight_config.enable = %u\n", rgblight_config.enable);
 2188               		.loc 1 279 3 is_stmt 1 view .LVU528
 2189 000a 6081      		ld r22,Z
 2190 000c 7181      		ldd r23,Z+1
 2191 000e 8281      		ldd r24,Z+2
 2192 0010 9381      		ldd r25,Z+3
 2193 0012 0E94 0000 		call eeconfig_update_rgblight
 2194               	.LVL132:
 280:quantum/rgblight.c ****   #ifdef RGBLIGHT_ANIMATIONS
 2195               		.loc 1 280 85 view .LVU529
 282:quantum/rgblight.c ****   #endif
 2196               		.loc 1 282 5 view .LVU530
 2197               	.LBB50:
 2198               	.LBI50:
 495:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 2199               		.loc 1 495 6 view .LVU531
 2200               	.LBB51:
 496:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 2201               		.loc 1 496 3 view .LVU532
 496:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 2202               		.loc 1 496 26 is_stmt 0 view .LVU533
 2203 0016 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 2204               		.loc 1 497 32 is_stmt 1 view .LVU534
 2205               	.LBE51:
 2206               	.LBE50:
 284:quantum/rgblight.c ****   rgblight_set();
 2207               		.loc 1 284 3 view .LVU535
 2208               	.LVL133:
 2209               	.LBB52:
 2210               	.LBI52:
 2211               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 2212               		.loc 2 166 1 view .LVU536
 2213               	.LBB53:
 167:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	double __tmp ;
 2214               		.loc 2 168 2 view .LVU537
 169:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 2215               		.loc 2 172 2 view .LVU538
 173:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2216               		.loc 2 173 2 view .LVU539
 174:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2217               		.loc 2 174 2 view .LVU540
 175:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 2218               		.loc 2 184 3 view .LVU541
 185:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2219               		.loc 2 187 2 view .LVU542
 2220 001a 2FEF      		ldi r18,lo8(159999)
 2221 001c 80E7      		ldi r24,hi8(159999)
 2222 001e 92E0      		ldi r25,hlo8(159999)
 2223 0020 2150      	1:	subi r18,1
 2224 0022 8040      		sbci r24,0
 2225 0024 9040      		sbci r25,0
 2226 0026 01F4      		brne 1b
 2227 0028 00C0      		rjmp .
 2228 002a 0000      		nop
 2229               	.LVL134:
 2230               		.loc 2 187 2 is_stmt 0 view .LVU543
 2231               	.LBE53:
 2232               	.LBE52:
 285:quantum/rgblight.c **** }
 2233               		.loc 1 285 3 is_stmt 1 view .LVU544
 2234 002c 0C94 0000 		jmp rgblight_set
 2235               	.LVL135:
 2236               		.cfi_endproc
 2237               	.LFE23:
 2239               		.section	.text.rgblight_toggle,"ax",@progbits
 2240               	.global	rgblight_toggle
 2242               	rgblight_toggle:
 2243               	.LFB21:
 260:quantum/rgblight.c ****   xprintf("rgblight toggle: rgblight_config.enable = %u\n", !rgblight_config.enable);
 2244               		.loc 1 260 28 view -0
 2245               		.cfi_startproc
 2246               	/* prologue: function */
 2247               	/* frame size = 0 */
 2248               	/* stack size = 0 */
 2249               	.L__stack_usage = 0
 261:quantum/rgblight.c ****   if (rgblight_config.enable) {
 2250               		.loc 1 261 85 view .LVU546
 262:quantum/rgblight.c ****     rgblight_disable();
 2251               		.loc 1 262 3 view .LVU547
 262:quantum/rgblight.c ****     rgblight_disable();
 2252               		.loc 1 262 7 is_stmt 0 view .LVU548
 2253 0000 8091 0000 		lds r24,rgblight_config
 262:quantum/rgblight.c ****     rgblight_disable();
 2254               		.loc 1 262 6 view .LVU549
 2255 0004 80FD      		sbrc r24,0
 263:quantum/rgblight.c ****   }
 2256               		.loc 1 263 5 is_stmt 1 view .LVU550
 2257 0006 0C94 0000 		jmp rgblight_disable
 2258               	.LVL136:
 2259               	.L112:
 266:quantum/rgblight.c ****   }
 2260               		.loc 1 266 5 view .LVU551
 2261 000a 0C94 0000 		jmp rgblight_enable
 2262               	.LVL137:
 2263               		.cfi_endproc
 2264               	.LFE21:
 2266               		.section	.text.rgblight_timer_init,"ax",@progbits
 2267               	.global	rgblight_timer_init
 2269               	rgblight_timer_init:
 2270               	.LFB43:
 473:quantum/rgblight.c ****   // static uint8_t rgblight_timer_is_init = 0;
 2271               		.loc 1 473 32 view -0
 2272               		.cfi_startproc
 2273               	/* prologue: function */
 2274               	/* frame size = 0 */
 2275               	/* stack size = 0 */
 2276               	.L__stack_usage = 0
 489:quantum/rgblight.c **** }
 2277               		.loc 1 489 3 view .LVU553
 489:quantum/rgblight.c **** }
 2278               		.loc 1 489 26 is_stmt 0 view .LVU554
 2279 0000 81E0      		ldi r24,lo8(1)
 2280 0002 8093 0000 		sts rgblight_timer_enabled,r24
 2281               	/* epilogue start */
 490:quantum/rgblight.c **** void rgblight_timer_enable(void) {
 2282               		.loc 1 490 1 view .LVU555
 2283 0006 0895      		ret
 2284               		.cfi_endproc
 2285               	.LFE43:
 2287               		.section	.text.rgblight_timer_enable,"ax",@progbits
 2288               	.global	rgblight_timer_enable
 2290               	rgblight_timer_enable:
 2291               	.LFB56:
 2292               		.cfi_startproc
 2293               	/* prologue: function */
 2294               	/* frame size = 0 */
 2295               	/* stack size = 0 */
 2296               	.L__stack_usage = 0
 2297 0000 81E0      		ldi r24,lo8(1)
 2298 0002 8093 0000 		sts rgblight_timer_enabled,r24
 2299               	/* epilogue start */
 2300 0006 0895      		ret
 2301               		.cfi_endproc
 2302               	.LFE56:
 2304               		.section	.text.rgblight_timer_disable,"ax",@progbits
 2305               	.global	rgblight_timer_disable
 2307               	rgblight_timer_disable:
 2308               	.LFB45:
 495:quantum/rgblight.c ****   rgblight_timer_enabled = false;
 2309               		.loc 1 495 35 is_stmt 1 view -0
 2310               		.cfi_startproc
 2311               	/* prologue: function */
 2312               	/* frame size = 0 */
 2313               	/* stack size = 0 */
 2314               	.L__stack_usage = 0
 496:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 2315               		.loc 1 496 3 view .LVU557
 496:quantum/rgblight.c ****   dprintf("TIMER3 disabled.\n");
 2316               		.loc 1 496 26 is_stmt 0 view .LVU558
 2317 0000 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 2318               		.loc 1 497 32 is_stmt 1 view .LVU559
 2319               	/* epilogue start */
 498:quantum/rgblight.c **** }
 2320               		.loc 1 498 1 is_stmt 0 view .LVU560
 2321 0004 0895      		ret
 2322               		.cfi_endproc
 2323               	.LFE45:
 2325               		.section	.text.rgblight_timer_toggle,"ax",@progbits
 2326               	.global	rgblight_timer_toggle
 2328               	rgblight_timer_toggle:
 2329               	.LFB58:
 2330               		.cfi_startproc
 2331               	/* prologue: function */
 2332               	/* frame size = 0 */
 2333               	/* stack size = 0 */
 2334               	.L__stack_usage = 0
 2335 0000 1092 0000 		sts rgblight_timer_enabled,__zero_reg__
 2336               	/* epilogue start */
 2337 0004 0895      		ret
 2338               		.cfi_endproc
 2339               	.LFE58:
 2341               		.section	.text.rgblight_show_solid_color,"ax",@progbits
 2342               	.global	rgblight_show_solid_color
 2344               	rgblight_show_solid_color:
 2345               	.LVL138:
 2346               	.LFB47:
 499:quantum/rgblight.c **** void rgblight_timer_toggle(void) {
 500:quantum/rgblight.c ****   rgblight_timer_enabled ^= rgblight_timer_enabled;
 501:quantum/rgblight.c ****   dprintf("TIMER3 toggled.\n");
 502:quantum/rgblight.c **** }
 503:quantum/rgblight.c **** 
 504:quantum/rgblight.c **** void rgblight_show_solid_color(uint8_t r, uint8_t g, uint8_t b) {
 2347               		.loc 1 504 65 is_stmt 1 view -0
 2348               		.cfi_startproc
 2349               		.loc 1 504 65 is_stmt 0 view .LVU562
 2350 0000 1F93      		push r17
 2351               	.LCFI37:
 2352               		.cfi_def_cfa_offset 3
 2353               		.cfi_offset 17, -2
 2354 0002 CF93      		push r28
 2355               	.LCFI38:
 2356               		.cfi_def_cfa_offset 4
 2357               		.cfi_offset 28, -3
 2358 0004 DF93      		push r29
 2359               	.LCFI39:
 2360               		.cfi_def_cfa_offset 5
 2361               		.cfi_offset 29, -4
 2362               	/* prologue: function */
 2363               	/* frame size = 0 */
 2364               	/* stack size = 3 */
 2365               	.L__stack_usage = 3
 2366 0006 C82F      		mov r28,r24
 2367 0008 D62F      		mov r29,r22
 2368 000a 142F      		mov r17,r20
 505:quantum/rgblight.c ****   rgblight_enable();
 2369               		.loc 1 505 3 is_stmt 1 view .LVU563
 2370 000c 0E94 0000 		call rgblight_enable
 2371               	.LVL139:
 506:quantum/rgblight.c ****   rgblight_mode(1);
 2372               		.loc 1 506 3 view .LVU564
 2373 0010 81E0      		ldi r24,lo8(1)
 2374 0012 0E94 0000 		call rgblight_mode
 2375               	.LVL140:
 507:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 2376               		.loc 1 507 3 view .LVU565
 2377 0016 412F      		mov r20,r17
 2378 0018 6D2F      		mov r22,r29
 2379 001a 8C2F      		mov r24,r28
 2380               	/* epilogue start */
 508:quantum/rgblight.c **** }
 2381               		.loc 1 508 1 is_stmt 0 view .LVU566
 2382 001c DF91      		pop r29
 2383               	.LVL141:
 2384               		.loc 1 508 1 view .LVU567
 2385 001e CF91      		pop r28
 2386               	.LVL142:
 2387               		.loc 1 508 1 view .LVU568
 2388 0020 1F91      		pop r17
 2389               	.LVL143:
 507:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 2390               		.loc 1 507 3 view .LVU569
 2391 0022 0C94 0000 		jmp rgblight_setrgb
 2392               	.LVL144:
 507:quantum/rgblight.c ****   rgblight_setrgb(r, g, b);
 2393               		.loc 1 507 3 view .LVU570
 2394               		.cfi_endproc
 2395               	.LFE47:
 2397               	.global	__floatsisf
 2398               	.global	__divsf3
 2399               	.global	__mulsf3
 2400               	.global	__subsf3
 2401               	.global	__fixunssfsi
 2402               		.section	.text.rgblight_effect_breathing,"ax",@progbits
 2403               	.global	rgblight_effect_breathing
 2405               	rgblight_effect_breathing:
 2406               	.LVL145:
 2407               	.LFB49:
 509:quantum/rgblight.c **** 
 510:quantum/rgblight.c **** void rgblight_task(void) {
 511:quantum/rgblight.c ****   if (rgblight_timer_enabled) {
 512:quantum/rgblight.c ****     // mode = 1, static light, do nothing here
 513:quantum/rgblight.c ****     if (rgblight_config.mode >= 2 && rgblight_config.mode <= 5) {
 514:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 515:quantum/rgblight.c ****       rgblight_effect_breathing(rgblight_config.mode - 2);
 516:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 8) {
 517:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 518:quantum/rgblight.c ****       rgblight_effect_rainbow_mood(rgblight_config.mode - 6);
 519:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 9 && rgblight_config.mode <= 14) {
 520:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 521:quantum/rgblight.c ****       rgblight_effect_rainbow_swirl(rgblight_config.mode - 9);
 522:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 15 && rgblight_config.mode <= 20) {
 523:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 524:quantum/rgblight.c ****       rgblight_effect_snake(rgblight_config.mode - 15);
 525:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 21 && rgblight_config.mode <= 23) {
 526:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 527:quantum/rgblight.c ****       rgblight_effect_knight(rgblight_config.mode - 21);
 528:quantum/rgblight.c ****     } else if (rgblight_config.mode == 24) {
 529:quantum/rgblight.c ****       // mode = 24, christmas mode
 530:quantum/rgblight.c ****       rgblight_effect_christmas();
 531:quantum/rgblight.c ****     }
 532:quantum/rgblight.c ****   }
 533:quantum/rgblight.c **** }
 534:quantum/rgblight.c **** 
 535:quantum/rgblight.c **** // Effects
 536:quantum/rgblight.c **** void rgblight_effect_breathing(uint8_t interval) {
 2408               		.loc 1 536 50 is_stmt 1 view -0
 2409               		.cfi_startproc
 2410               		.loc 1 536 50 is_stmt 0 view .LVU572
 2411 0000 CF93      		push r28
 2412               	.LCFI40:
 2413               		.cfi_def_cfa_offset 3
 2414               		.cfi_offset 28, -2
 2415               	/* prologue: function */
 2416               	/* frame size = 0 */
 2417               	/* stack size = 1 */
 2418               	.L__stack_usage = 1
 2419 0002 C82F      		mov r28,r24
 537:quantum/rgblight.c ****   static uint8_t pos = 0;
 2420               		.loc 1 537 3 is_stmt 1 view .LVU573
 538:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2421               		.loc 1 538 3 view .LVU574
 539:quantum/rgblight.c ****   float val;
 2422               		.loc 1 539 3 view .LVU575
 540:quantum/rgblight.c **** 
 541:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_BREATHING_INTERVALS[interval])) {
 2423               		.loc 1 541 3 view .LVU576
 2424               		.loc 1 541 7 is_stmt 0 view .LVU577
 2425 0004 8091 0000 		lds r24,last_timer.2321
 2426 0008 9091 0000 		lds r25,last_timer.2321+1
 2427               	.LVL146:
 2428               		.loc 1 541 7 view .LVU578
 2429 000c 0E94 0000 		call timer_elapsed
 2430               	.LVL147:
 2431               	.LBB54:
 2432               		.loc 1 541 35 is_stmt 1 view .LVU579
 2433               		.loc 1 541 35 view .LVU580
 2434               		.loc 1 541 35 view .LVU581
 2435 0010 EC2F      		mov r30,r28
 2436 0012 F0E0      		ldi r31,0
 2437 0014 E050      		subi r30,lo8(-(RGBLED_BREATHING_INTERVALS))
 2438 0016 F040      		sbci r31,hi8(-(RGBLED_BREATHING_INTERVALS))
 2439               	/* #APP */
 2440               	 ;  541 "quantum/rgblight.c" 1
 2441 0018 E491      		lpm r30, Z
 2442               		
 2443               	 ;  0 "" 2
 2444               	.LVL148:
 2445               		.loc 1 541 35 view .LVU582
 2446               	/* #NOAPP */
 2447               	.LBE54:
 2448               		.loc 1 541 6 is_stmt 0 view .LVU583
 2449 001a E817      		cp r30,r24
 2450 001c 1906      		cpc __zero_reg__,r25
 2451 001e 01F0      		breq .+4
 2452 0020 00F0      		brlo .+2
 2453 0022 00C0      		rjmp .L118
 542:quantum/rgblight.c ****     return;
 543:quantum/rgblight.c ****   }
 544:quantum/rgblight.c ****   last_timer = timer_read();
 2454               		.loc 1 544 3 is_stmt 1 view .LVU584
 2455               		.loc 1 544 16 is_stmt 0 view .LVU585
 2456 0024 0E94 0000 		call timer_read
 2457               	.LVL149:
 2458               		.loc 1 544 14 view .LVU586
 2459 0028 9093 0000 		sts last_timer.2321+1,r25
 2460 002c 8093 0000 		sts last_timer.2321,r24
 545:quantum/rgblight.c **** 
 546:quantum/rgblight.c **** 
 547:quantum/rgblight.c ****   // http://sean.voisen.org/blog/2011/10/breathing-led-with-arduino/
 548:quantum/rgblight.c ****   val = (exp(sin((pos/255.0)*M_PI)) - RGBLIGHT_EFFECT_BREATHE_CENTER/M_E)*(RGBLIGHT_EFFECT_BREATHE_
 2461               		.loc 1 548 3 is_stmt 1 view .LVU587
 2462               		.loc 1 548 22 is_stmt 0 view .LVU588
 2463 0030 6091 0000 		lds r22,pos.2320
 2464 0034 70E0      		ldi r23,0
 2465 0036 90E0      		ldi r25,0
 2466 0038 80E0      		ldi r24,0
 2467 003a 0E94 0000 		call __floatsisf
 2468               	.LVL150:
 2469 003e 20E0      		ldi r18,0
 2470 0040 30E0      		ldi r19,0
 2471 0042 4FE7      		ldi r20,lo8(127)
 2472 0044 53E4      		ldi r21,lo8(67)
 2473 0046 0E94 0000 		call __divsf3
 2474               	.LVL151:
 2475               		.loc 1 548 10 view .LVU589
 2476 004a 2BED      		ldi r18,lo8(-37)
 2477 004c 3FE0      		ldi r19,lo8(15)
 2478 004e 49E4      		ldi r20,lo8(73)
 2479 0050 50E4      		ldi r21,lo8(64)
 2480 0052 0E94 0000 		call __mulsf3
 2481               	.LVL152:
 2482 0056 0E94 0000 		call sin
 2483               	.LVL153:
 2484 005a 0E94 0000 		call exp
 2485               	.LVL154:
 549:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, val);
 2486               		.loc 1 549 3 is_stmt 1 view .LVU590
 548:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, val);
 2487               		.loc 1 548 37 is_stmt 0 view .LVU591
 2488 005e 2BE4      		ldi r18,lo8(75)
 2489 0060 3AE3      		ldi r19,lo8(58)
 2490 0062 4EE2      		ldi r20,lo8(46)
 2491 0064 5FE3      		ldi r21,lo8(63)
 2492 0066 0E94 0000 		call __subsf3
 2493               	.LVL155:
 548:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(rgblight_config.hue, rgblight_config.sat, val);
 2494               		.loc 1 548 7 view .LVU592
 2495 006a 20EF      		ldi r18,lo8(-16)
 2496 006c 3BEF      		ldi r19,lo8(-5)
 2497 006e 48ED      		ldi r20,lo8(-40)
 2498 0070 52E4      		ldi r21,lo8(66)
 2499 0072 0E94 0000 		call __mulsf3
 2500               	.LVL156:
 2501               		.loc 1 549 3 view .LVU593
 2502 0076 0E94 0000 		call __fixunssfsi
 2503               	.LVL157:
 2504 007a 462F      		mov r20,r22
 2505               		.loc 1 549 43 view .LVU594
 2506 007c 8091 0000 		lds r24,rgblight_config
 2507 0080 881F      		rol r24
 2508 0082 8827      		clr r24
 2509 0084 881F      		rol r24
 2510 0086 9091 0000 		lds r25,rgblight_config+1
 2511 008a 292F      		mov r18,r25
 2512 008c 220F      		lsl r18
 2513 008e 97FB      		bst r25,7
 2514 0090 9927      		clr r25
 2515 0092 90F9      		bld r25,0
 2516               		.loc 1 549 3 view .LVU595
 2517 0094 6091 0000 		lds r22,rgblight_config+2
 2518 0098 822B      		or r24,r18
 2519 009a 0E94 0000 		call rgblight_sethsv_noeeprom
 2520               	.LVL158:
 550:quantum/rgblight.c ****   pos = (pos + 1) % 256;
 2521               		.loc 1 550 3 is_stmt 1 view .LVU596
 2522               		.loc 1 550 7 is_stmt 0 view .LVU597
 2523 009e 8091 0000 		lds r24,pos.2320
 2524 00a2 8F5F      		subi r24,lo8(-(1))
 2525 00a4 8093 0000 		sts pos.2320,r24
 2526               	.L118:
 2527               	/* epilogue start */
 551:quantum/rgblight.c **** }
 2528               		.loc 1 551 1 view .LVU598
 2529 00a8 CF91      		pop r28
 2530               	.LVL159:
 2531               		.loc 1 551 1 view .LVU599
 2532 00aa 0895      		ret
 2533               		.cfi_endproc
 2534               	.LFE49:
 2536               		.section	.text.rgblight_effect_rainbow_mood,"ax",@progbits
 2537               	.global	rgblight_effect_rainbow_mood
 2539               	rgblight_effect_rainbow_mood:
 2540               	.LVL160:
 2541               	.LFB50:
 552:quantum/rgblight.c **** void rgblight_effect_rainbow_mood(uint8_t interval) {
 2542               		.loc 1 552 53 is_stmt 1 view -0
 2543               		.cfi_startproc
 2544               		.loc 1 552 53 is_stmt 0 view .LVU601
 2545 0000 CF93      		push r28
 2546               	.LCFI41:
 2547               		.cfi_def_cfa_offset 3
 2548               		.cfi_offset 28, -2
 2549               	/* prologue: function */
 2550               	/* frame size = 0 */
 2551               	/* stack size = 1 */
 2552               	.L__stack_usage = 1
 2553 0002 C82F      		mov r28,r24
 553:quantum/rgblight.c ****   static uint16_t current_hue = 0;
 2554               		.loc 1 553 3 is_stmt 1 view .LVU602
 554:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2555               		.loc 1 554 3 view .LVU603
 555:quantum/rgblight.c **** 
 556:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_RAINBOW_MOOD_INTERVALS[interval])) {
 2556               		.loc 1 556 3 view .LVU604
 2557               		.loc 1 556 7 is_stmt 0 view .LVU605
 2558 0004 8091 0000 		lds r24,last_timer.2330
 2559 0008 9091 0000 		lds r25,last_timer.2330+1
 2560               	.LVL161:
 2561               		.loc 1 556 7 view .LVU606
 2562 000c 0E94 0000 		call timer_elapsed
 2563               	.LVL162:
 2564               	.LBB55:
 2565               		.loc 1 556 35 is_stmt 1 view .LVU607
 2566               		.loc 1 556 35 view .LVU608
 2567               		.loc 1 556 35 view .LVU609
 2568 0010 EC2F      		mov r30,r28
 2569 0012 F0E0      		ldi r31,0
 2570 0014 E050      		subi r30,lo8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 2571 0016 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_MOOD_INTERVALS))
 2572               	/* #APP */
 2573               	 ;  556 "quantum/rgblight.c" 1
 2574 0018 E491      		lpm r30, Z
 2575               		
 2576               	 ;  0 "" 2
 2577               	.LVL163:
 2578               		.loc 1 556 35 view .LVU610
 2579               	/* #NOAPP */
 2580               	.LBE55:
 2581               		.loc 1 556 6 is_stmt 0 view .LVU611
 2582 001a E817      		cp r30,r24
 2583 001c 1906      		cpc __zero_reg__,r25
 2584 001e 01F0      		breq .+2
 2585 0020 00F4      		brsh .L120
 557:quantum/rgblight.c ****     return;
 558:quantum/rgblight.c ****   }
 559:quantum/rgblight.c ****   last_timer = timer_read();
 2586               		.loc 1 559 3 is_stmt 1 view .LVU612
 2587               		.loc 1 559 16 is_stmt 0 view .LVU613
 2588 0022 0E94 0000 		call timer_read
 2589               	.LVL164:
 2590               		.loc 1 559 14 view .LVU614
 2591 0026 9093 0000 		sts last_timer.2330+1,r25
 2592 002a 8093 0000 		sts last_timer.2330,r24
 560:quantum/rgblight.c ****   rgblight_sethsv_noeeprom(current_hue, rgblight_config.sat, rgblight_config.val);
 2593               		.loc 1 560 3 is_stmt 1 view .LVU615
 2594 002e 4091 0000 		lds r20,rgblight_config+3
 2595 0032 6091 0000 		lds r22,rgblight_config+2
 2596 0036 8091 0000 		lds r24,current_hue.2329
 2597 003a 9091 0000 		lds r25,current_hue.2329+1
 2598 003e 0E94 0000 		call rgblight_sethsv_noeeprom
 2599               	.LVL165:
 561:quantum/rgblight.c ****   current_hue = (current_hue + 1) % 360;
 2600               		.loc 1 561 3 view .LVU616
 2601               		.loc 1 561 30 is_stmt 0 view .LVU617
 2602 0042 8091 0000 		lds r24,current_hue.2329
 2603 0046 9091 0000 		lds r25,current_hue.2329+1
 2604 004a 0196      		adiw r24,1
 2605               		.loc 1 561 35 view .LVU618
 2606 004c 68E6      		ldi r22,lo8(104)
 2607 004e 71E0      		ldi r23,lo8(1)
 2608 0050 0E94 0000 		call __udivmodhi4
 2609               		.loc 1 561 15 view .LVU619
 2610 0054 9093 0000 		sts current_hue.2329+1,r25
 2611 0058 8093 0000 		sts current_hue.2329,r24
 2612               	.L120:
 2613               	/* epilogue start */
 562:quantum/rgblight.c **** }
 2614               		.loc 1 562 1 view .LVU620
 2615 005c CF91      		pop r28
 2616               	.LVL166:
 2617               		.loc 1 562 1 view .LVU621
 2618 005e 0895      		ret
 2619               		.cfi_endproc
 2620               	.LFE50:
 2622               		.section	.text.rgblight_effect_rainbow_swirl,"ax",@progbits
 2623               	.global	rgblight_effect_rainbow_swirl
 2625               	rgblight_effect_rainbow_swirl:
 2626               	.LVL167:
 2627               	.LFB51:
 563:quantum/rgblight.c **** void rgblight_effect_rainbow_swirl(uint8_t interval) {
 2628               		.loc 1 563 54 is_stmt 1 view -0
 2629               		.cfi_startproc
 2630               		.loc 1 563 54 is_stmt 0 view .LVU623
 2631 0000 DF92      		push r13
 2632               	.LCFI42:
 2633               		.cfi_def_cfa_offset 3
 2634               		.cfi_offset 13, -2
 2635 0002 EF92      		push r14
 2636               	.LCFI43:
 2637               		.cfi_def_cfa_offset 4
 2638               		.cfi_offset 14, -3
 2639 0004 FF92      		push r15
 2640               	.LCFI44:
 2641               		.cfi_def_cfa_offset 5
 2642               		.cfi_offset 15, -4
 2643 0006 0F93      		push r16
 2644               	.LCFI45:
 2645               		.cfi_def_cfa_offset 6
 2646               		.cfi_offset 16, -5
 2647 0008 1F93      		push r17
 2648               	.LCFI46:
 2649               		.cfi_def_cfa_offset 7
 2650               		.cfi_offset 17, -6
 2651 000a CF93      		push r28
 2652               	.LCFI47:
 2653               		.cfi_def_cfa_offset 8
 2654               		.cfi_offset 28, -7
 2655 000c DF93      		push r29
 2656               	.LCFI48:
 2657               		.cfi_def_cfa_offset 9
 2658               		.cfi_offset 29, -8
 2659               	/* prologue: function */
 2660               	/* frame size = 0 */
 2661               	/* stack size = 7 */
 2662               	.L__stack_usage = 7
 2663 000e D82E      		mov r13,r24
 564:quantum/rgblight.c ****   static uint16_t current_hue = 0;
 2664               		.loc 1 564 3 is_stmt 1 view .LVU624
 565:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2665               		.loc 1 565 3 view .LVU625
 566:quantum/rgblight.c ****   uint16_t hue;
 2666               		.loc 1 566 3 view .LVU626
 567:quantum/rgblight.c ****   uint8_t i;
 2667               		.loc 1 567 3 view .LVU627
 568:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_RAINBOW_SWIRL_INTERVALS[interval / 2])) {
 2668               		.loc 1 568 3 view .LVU628
 2669               		.loc 1 568 7 is_stmt 0 view .LVU629
 2670 0010 8091 0000 		lds r24,last_timer.2338
 2671 0014 9091 0000 		lds r25,last_timer.2338+1
 2672               	.LVL168:
 2673               		.loc 1 568 7 view .LVU630
 2674 0018 0E94 0000 		call timer_elapsed
 2675               	.LVL169:
 2676               	.LBB56:
 2677               		.loc 1 568 35 is_stmt 1 view .LVU631
 2678               		.loc 1 568 35 view .LVU632
 2679               		.loc 1 568 35 view .LVU633
 2680 001c ED2D      		mov r30,r13
 2681 001e E695      		lsr r30
 2682 0020 F0E0      		ldi r31,0
 2683 0022 E050      		subi r30,lo8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 2684 0024 F040      		sbci r31,hi8(-(RGBLED_RAINBOW_SWIRL_INTERVALS))
 2685               	/* #APP */
 2686               	 ;  568 "quantum/rgblight.c" 1
 2687 0026 E491      		lpm r30, Z
 2688               		
 2689               	 ;  0 "" 2
 2690               	.LVL170:
 2691               		.loc 1 568 35 view .LVU634
 2692               	/* #NOAPP */
 2693               	.LBE56:
 2694               		.loc 1 568 6 is_stmt 0 view .LVU635
 2695 0028 E817      		cp r30,r24
 2696 002a 1906      		cpc __zero_reg__,r25
 2697 002c 01F0      		breq .+2
 2698 002e 00F4      		brsh .L122
 569:quantum/rgblight.c ****     return;
 570:quantum/rgblight.c ****   }
 571:quantum/rgblight.c ****   last_timer = timer_read();
 2699               		.loc 1 571 3 is_stmt 1 view .LVU636
 2700               		.loc 1 571 16 is_stmt 0 view .LVU637
 2701 0030 0E94 0000 		call timer_read
 2702               	.LVL171:
 2703               		.loc 1 571 14 view .LVU638
 2704 0034 9093 0000 		sts last_timer.2338+1,r25
 2705 0038 8093 0000 		sts last_timer.2338,r24
 572:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2706               		.loc 1 572 3 is_stmt 1 view .LVU639
 2707               	.LVL172:
 2708               		.loc 1 572 3 is_stmt 0 view .LVU640
 2709 003c 00E0      		ldi r16,lo8(led)
 2710 003e 10E0      		ldi r17,hi8(led)
 571:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2711               		.loc 1 571 14 view .LVU641
 2712 0040 D0E0      		ldi r29,0
 2713 0042 C0E0      		ldi r28,0
 573:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2714               		.loc 1 573 9 view .LVU642
 2715 0044 88E6      		ldi r24,lo8(104)
 2716 0046 E82E      		mov r14,r24
 2717 0048 FF24      		clr r15
 2718 004a F394      		inc r15
 2719               	.LVL173:
 2720               	.L124:
 2721               		.loc 1 573 5 is_stmt 1 discriminator 3 view .LVU643
 574:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 2722               		.loc 1 574 5 discriminator 3 view .LVU644
 573:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2723               		.loc 1 573 33 is_stmt 0 discriminator 3 view .LVU645
 2724 004c 8091 0000 		lds r24,current_hue.2337
 2725 0050 9091 0000 		lds r25,current_hue.2337+1
 2726 0054 8C0F      		add r24,r28
 2727 0056 9D1F      		adc r25,r29
 573:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2728               		.loc 1 573 9 discriminator 3 view .LVU646
 2729 0058 B701      		movw r22,r14
 2730 005a 0E94 0000 		call __udivmodhi4
 2731               		.loc 1 574 5 discriminator 3 view .LVU647
 2732 005e 9801      		movw r18,r16
 2733 0060 4091 0000 		lds r20,rgblight_config+3
 2734 0064 6091 0000 		lds r22,rgblight_config+2
 2735 0068 0E94 0000 		call sethsv
 2736               	.LVL174:
 2737               		.loc 1 574 5 discriminator 3 view .LVU648
 2738 006c 6696      		adiw r28,22
 2739 006e 0D5F      		subi r16,-3
 2740 0070 1F4F      		sbci r17,-1
 572:quantum/rgblight.c ****     hue = (360 / RGBLED_NUM * i + current_hue) % 360;
 2741               		.loc 1 572 3 discriminator 3 view .LVU649
 2742 0072 C036      		cpi r28,96
 2743 0074 81E0      		ldi r24,1
 2744 0076 D807      		cpc r29,r24
 2745 0078 01F4      		brne .L124
 575:quantum/rgblight.c ****   }
 576:quantum/rgblight.c ****   rgblight_set();
 2746               		.loc 1 576 3 is_stmt 1 view .LVU650
 2747 007a 0E94 0000 		call rgblight_set
 2748               	.LVL175:
 577:quantum/rgblight.c **** 
 578:quantum/rgblight.c ****   if (interval % 2) {
 2749               		.loc 1 578 3 view .LVU651
 2750 007e 8091 0000 		lds r24,current_hue.2337
 2751 0082 9091 0000 		lds r25,current_hue.2337+1
 2752               		.loc 1 578 6 is_stmt 0 view .LVU652
 2753 0086 D0FE      		sbrs r13,0
 2754 0088 00C0      		rjmp .L125
 579:quantum/rgblight.c ****     current_hue = (current_hue + 1) % 360;
 2755               		.loc 1 579 5 is_stmt 1 view .LVU653
 2756               		.loc 1 579 32 is_stmt 0 view .LVU654
 2757 008a 0196      		adiw r24,1
 2758               		.loc 1 579 37 view .LVU655
 2759 008c B701      		movw r22,r14
 2760 008e 0E94 0000 		call __udivmodhi4
 2761               	.L127:
 580:quantum/rgblight.c ****   } else {
 581:quantum/rgblight.c ****     if (current_hue - 1 < 0) {
 582:quantum/rgblight.c ****       current_hue = 359;
 583:quantum/rgblight.c ****     } else {
 584:quantum/rgblight.c ****       current_hue = current_hue - 1;
 2762               		.loc 1 584 19 view .LVU656
 2763 0092 9093 0000 		sts current_hue.2337+1,r25
 2764 0096 8093 0000 		sts current_hue.2337,r24
 2765               	.L122:
 2766               	/* epilogue start */
 585:quantum/rgblight.c ****     }
 586:quantum/rgblight.c ****   }
 587:quantum/rgblight.c **** }
 2767               		.loc 1 587 1 view .LVU657
 2768 009a DF91      		pop r29
 2769 009c CF91      		pop r28
 2770 009e 1F91      		pop r17
 2771 00a0 0F91      		pop r16
 2772 00a2 FF90      		pop r15
 2773 00a4 EF90      		pop r14
 2774 00a6 DF90      		pop r13
 2775               	.LVL176:
 2776               		.loc 1 587 1 view .LVU658
 2777 00a8 0895      		ret
 2778               	.LVL177:
 2779               	.L125:
 581:quantum/rgblight.c ****       current_hue = 359;
 2780               		.loc 1 581 5 is_stmt 1 view .LVU659
 584:quantum/rgblight.c ****     }
 2781               		.loc 1 584 7 view .LVU660
 584:quantum/rgblight.c ****     }
 2782               		.loc 1 584 33 is_stmt 0 view .LVU661
 2783 00aa 0197      		sbiw r24,1
 2784 00ac 00C0      		rjmp .L127
 2785               		.cfi_endproc
 2786               	.LFE51:
 2788               		.section	.text.rgblight_effect_snake,"ax",@progbits
 2789               	.global	rgblight_effect_snake
 2791               	rgblight_effect_snake:
 2792               	.LVL178:
 2793               	.LFB52:
 588:quantum/rgblight.c **** void rgblight_effect_snake(uint8_t interval) {
 2794               		.loc 1 588 46 is_stmt 1 view -0
 2795               		.cfi_startproc
 2796               		.loc 1 588 46 is_stmt 0 view .LVU663
 2797 0000 CF92      		push r12
 2798               	.LCFI49:
 2799               		.cfi_def_cfa_offset 3
 2800               		.cfi_offset 12, -2
 2801 0002 DF92      		push r13
 2802               	.LCFI50:
 2803               		.cfi_def_cfa_offset 4
 2804               		.cfi_offset 13, -3
 2805 0004 EF92      		push r14
 2806               	.LCFI51:
 2807               		.cfi_def_cfa_offset 5
 2808               		.cfi_offset 14, -4
 2809 0006 FF92      		push r15
 2810               	.LCFI52:
 2811               		.cfi_def_cfa_offset 6
 2812               		.cfi_offset 15, -5
 2813 0008 0F93      		push r16
 2814               	.LCFI53:
 2815               		.cfi_def_cfa_offset 7
 2816               		.cfi_offset 16, -6
 2817 000a 1F93      		push r17
 2818               	.LCFI54:
 2819               		.cfi_def_cfa_offset 8
 2820               		.cfi_offset 17, -7
 2821 000c CF93      		push r28
 2822               	.LCFI55:
 2823               		.cfi_def_cfa_offset 9
 2824               		.cfi_offset 28, -8
 2825 000e DF93      		push r29
 2826               	.LCFI56:
 2827               		.cfi_def_cfa_offset 10
 2828               		.cfi_offset 29, -9
 2829               	/* prologue: function */
 2830               	/* frame size = 0 */
 2831               	/* stack size = 8 */
 2832               	.L__stack_usage = 8
 2833 0010 C82F      		mov r28,r24
 589:quantum/rgblight.c ****   static uint8_t pos = 0;
 2834               		.loc 1 589 3 is_stmt 1 view .LVU664
 590:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 2835               		.loc 1 590 3 view .LVU665
 591:quantum/rgblight.c ****   uint8_t i, j;
 2836               		.loc 1 591 3 view .LVU666
 592:quantum/rgblight.c ****   int8_t k;
 2837               		.loc 1 592 3 view .LVU667
 593:quantum/rgblight.c ****   int8_t increment = 1;
 2838               		.loc 1 593 3 view .LVU668
 2839               	.LVL179:
 594:quantum/rgblight.c ****   if (interval % 2) {
 2840               		.loc 1 594 3 view .LVU669
 595:quantum/rgblight.c ****     increment = -1;
 2841               		.loc 1 595 15 is_stmt 0 view .LVU670
 2842 0012 FF24      		clr r15
 2843 0014 FA94      		dec r15
 594:quantum/rgblight.c ****   if (interval % 2) {
 2844               		.loc 1 594 6 view .LVU671
 2845 0016 80FD      		sbrc r24,0
 2846 0018 00C0      		rjmp .L129
 593:quantum/rgblight.c ****   int8_t increment = 1;
 2847               		.loc 1 593 10 view .LVU672
 2848 001a FF24      		clr r15
 2849 001c F394      		inc r15
 2850               	.L129:
 2851               	.LVL180:
 596:quantum/rgblight.c ****   }
 597:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_SNAKE_INTERVALS[interval / 2])) {
 2852               		.loc 1 597 3 is_stmt 1 view .LVU673
 2853               		.loc 1 597 7 is_stmt 0 view .LVU674
 2854 001e 8091 0000 		lds r24,last_timer.2351
 2855 0022 9091 0000 		lds r25,last_timer.2351+1
 2856               	.LVL181:
 2857               		.loc 1 597 7 view .LVU675
 2858 0026 0E94 0000 		call timer_elapsed
 2859               	.LVL182:
 2860               	.LBB57:
 2861               		.loc 1 597 35 is_stmt 1 view .LVU676
 2862               		.loc 1 597 35 view .LVU677
 2863               		.loc 1 597 35 view .LVU678
 2864 002a C695      		lsr r28
 2865               	.LVL183:
 2866               		.loc 1 597 35 is_stmt 0 view .LVU679
 2867 002c EC2F      		mov r30,r28
 2868 002e F0E0      		ldi r31,0
 2869 0030 E050      		subi r30,lo8(-(RGBLED_SNAKE_INTERVALS))
 2870 0032 F040      		sbci r31,hi8(-(RGBLED_SNAKE_INTERVALS))
 2871               	/* #APP */
 2872               	 ;  597 "quantum/rgblight.c" 1
 2873 0034 E491      		lpm r30, Z
 2874               		
 2875               	 ;  0 "" 2
 2876               	.LVL184:
 2877               		.loc 1 597 35 is_stmt 1 view .LVU680
 2878               	/* #NOAPP */
 2879               	.LBE57:
 2880               		.loc 1 597 6 is_stmt 0 view .LVU681
 2881 0036 E817      		cp r30,r24
 2882 0038 1906      		cpc __zero_reg__,r25
 2883 003a 01F0      		breq .+4
 2884 003c 00F0      		brlo .+2
 2885 003e 00C0      		rjmp .L128
 598:quantum/rgblight.c ****     return;
 599:quantum/rgblight.c ****   }
 600:quantum/rgblight.c ****   last_timer = timer_read();
 2886               		.loc 1 600 3 is_stmt 1 view .LVU682
 2887               		.loc 1 600 16 is_stmt 0 view .LVU683
 2888 0040 0E94 0000 		call timer_read
 2889               	.LVL185:
 2890               		.loc 1 600 14 view .LVU684
 2891 0044 9093 0000 		sts last_timer.2351+1,r25
 2892 0048 8093 0000 		sts last_timer.2351,r24
 601:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2893               		.loc 1 601 3 is_stmt 1 view .LVU685
 2894               	.LVL186:
 2895               		.loc 1 601 3 is_stmt 0 view .LVU686
 2896 004c C0E0      		ldi r28,lo8(led)
 2897 004e D0E0      		ldi r29,hi8(led)
 600:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 2898               		.loc 1 600 14 view .LVU687
 2899 0050 10E0      		ldi r17,0
 2900 0052 00E0      		ldi r16,0
 2901               	.LVL187:
 2902               	.L134:
 602:quantum/rgblight.c ****     led[i].r = 0;
 2903               		.loc 1 602 5 is_stmt 1 view .LVU688
 2904               		.loc 1 602 14 is_stmt 0 view .LVU689
 2905 0054 1982      		std Y+1,__zero_reg__
 603:quantum/rgblight.c ****     led[i].g = 0;
 2906               		.loc 1 603 5 is_stmt 1 view .LVU690
 2907               		.loc 1 603 14 is_stmt 0 view .LVU691
 2908 0056 1882      		st Y,__zero_reg__
 604:quantum/rgblight.c ****     led[i].b = 0;
 2909               		.loc 1 604 5 is_stmt 1 view .LVU692
 2910               		.loc 1 604 14 is_stmt 0 view .LVU693
 2911 0058 1A82      		std Y+2,__zero_reg__
 605:quantum/rgblight.c ****     for (j = 0; j < RGBLIGHT_EFFECT_SNAKE_LENGTH; j++) {
 2912               		.loc 1 605 5 is_stmt 1 view .LVU694
 2913               	.LVL188:
 604:quantum/rgblight.c ****     led[i].b = 0;
 2914               		.loc 1 604 14 is_stmt 0 view .LVU695
 2915 005a 94E0      		ldi r25,lo8(4)
 2916 005c C92E      		mov r12,r25
 2917 005e D12C      		mov r13,__zero_reg__
 2918 0060 E12C      		mov r14,__zero_reg__
 2919               	.LVL189:
 2920               	.L133:
 606:quantum/rgblight.c ****       k = pos + j * increment;
 2921               		.loc 1 606 7 is_stmt 1 view .LVU696
 2922               		.loc 1 606 15 is_stmt 0 view .LVU697
 2923 0062 8091 0000 		lds r24,pos.2350
 2924 0066 8E0D      		add r24,r14
 2925               	.LVL190:
 607:quantum/rgblight.c ****       if (k < 0) {
 2926               		.loc 1 607 7 is_stmt 1 view .LVU698
 2927               		.loc 1 607 10 is_stmt 0 view .LVU699
 2928 0068 87FD      		sbrc r24,7
 608:quantum/rgblight.c ****         k = k + RGBLED_NUM;
 2929               		.loc 1 608 9 is_stmt 1 view .LVU700
 2930               		.loc 1 608 15 is_stmt 0 view .LVU701
 2931 006a 805F      		subi r24,lo8(-(16))
 2932               	.LVL191:
 2933               	.L131:
 609:quantum/rgblight.c ****       }
 610:quantum/rgblight.c ****       if (i == k) {
 2934               		.loc 1 610 7 is_stmt 1 view .LVU702
 2935               		.loc 1 610 13 is_stmt 0 view .LVU703
 2936 006c 082E      		mov __tmp_reg__,r24
 2937 006e 000C      		lsl r0
 2938 0070 990B      		sbc r25,r25
 2939               		.loc 1 610 10 view .LVU704
 2940 0072 8017      		cp r24,r16
 2941 0074 9107      		cpc r25,r17
 2942 0076 01F4      		brne .L132
 611:quantum/rgblight.c ****         sethsv(rgblight_config.hue, rgblight_config.sat, (uint8_t)(rgblight_config.val*(RGBLIGHT_EF
 2943               		.loc 1 611 9 is_stmt 1 view .LVU705
 2944               		.loc 1 611 83 is_stmt 0 view .LVU706
 2945 0078 8091 0000 		lds r24,rgblight_config+3
 2946               	.LVL192:
 2947               		.loc 1 611 87 view .LVU707
 2948 007c 8C9D      		mul r24,r12
 2949 007e A001      		movw r20,r0
 2950 0080 8D9D      		mul r24,r13
 2951 0082 500D      		add r21,r0
 2952 0084 1124      		clr __zero_reg__
 2953               		.loc 1 611 120 view .LVU708
 2954 0086 5595      		asr r21
 2955 0088 4795      		ror r20
 2956 008a 5595      		asr r21
 2957 008c 4795      		ror r20
 2958               		.loc 1 611 31 view .LVU709
 2959 008e 8091 0000 		lds r24,rgblight_config
 2960 0092 881F      		rol r24
 2961 0094 8827      		clr r24
 2962 0096 881F      		rol r24
 2963 0098 9091 0000 		lds r25,rgblight_config+1
 2964 009c 592F      		mov r21,r25
 2965 009e 550F      		lsl r21
 2966 00a0 97FB      		bst r25,7
 2967 00a2 9927      		clr r25
 2968 00a4 90F9      		bld r25,0
 2969               		.loc 1 611 9 view .LVU710
 2970 00a6 9E01      		movw r18,r28
 2971 00a8 6091 0000 		lds r22,rgblight_config+2
 2972 00ac 852B      		or r24,r21
 2973 00ae 0E94 0000 		call sethsv
 2974               	.LVL193:
 2975               	.L132:
 2976               		.loc 1 611 9 view .LVU711
 2977 00b2 EF0C      		add r14,r15
 2978 00b4 81E0      		ldi r24,1
 2979 00b6 C81A      		sub r12,r24
 2980 00b8 D108      		sbc r13,__zero_reg__
 605:quantum/rgblight.c ****       k = pos + j * increment;
 2981               		.loc 1 605 5 discriminator 2 view .LVU712
 2982 00ba 01F4      		brne .L133
 2983               	.LVL194:
 605:quantum/rgblight.c ****       k = pos + j * increment;
 2984               		.loc 1 605 5 discriminator 2 view .LVU713
 2985 00bc 0F5F      		subi r16,-1
 2986 00be 1F4F      		sbci r17,-1
 2987               	.LVL195:
 605:quantum/rgblight.c ****       k = pos + j * increment;
 2988               		.loc 1 605 5 discriminator 2 view .LVU714
 2989 00c0 2396      		adiw r28,3
 601:quantum/rgblight.c ****     led[i].r = 0;
 2990               		.loc 1 601 3 discriminator 2 view .LVU715
 2991 00c2 0031      		cpi r16,16
 2992 00c4 1105      		cpc r17,__zero_reg__
 2993 00c6 01F4      		brne .L134
 612:quantum/rgblight.c ****       }
 613:quantum/rgblight.c ****     }
 614:quantum/rgblight.c ****   }
 615:quantum/rgblight.c ****   rgblight_set();
 2994               		.loc 1 615 3 is_stmt 1 view .LVU716
 2995 00c8 0E94 0000 		call rgblight_set
 2996               	.LVL196:
 616:quantum/rgblight.c ****   if (increment == 1) {
 2997               		.loc 1 616 3 view .LVU717
 2998 00cc 8091 0000 		lds r24,pos.2350
 2999               		.loc 1 616 6 is_stmt 0 view .LVU718
 3000 00d0 91E0      		ldi r25,lo8(1)
 3001 00d2 F912      		cpse r15,r25
 3002 00d4 00C0      		rjmp .L135
 617:quantum/rgblight.c ****     if (pos - 1 < 0) {
 3003               		.loc 1 617 5 is_stmt 1 view .LVU719
 3004               		.loc 1 617 8 is_stmt 0 view .LVU720
 3005 00d6 8111      		cpse r24,__zero_reg__
 3006 00d8 00C0      		rjmp .L136
 618:quantum/rgblight.c ****       pos = RGBLED_NUM - 1;
 3007               		.loc 1 618 7 is_stmt 1 view .LVU721
 3008               		.loc 1 618 11 is_stmt 0 view .LVU722
 3009 00da 8FE0      		ldi r24,lo8(15)
 3010               	.L140:
 619:quantum/rgblight.c ****     } else {
 620:quantum/rgblight.c ****       pos -= 1;
 621:quantum/rgblight.c ****     }
 622:quantum/rgblight.c ****   } else {
 623:quantum/rgblight.c ****     pos = (pos + 1) % RGBLED_NUM;
 3011               		.loc 1 623 9 view .LVU723
 3012 00dc 8093 0000 		sts pos.2350,r24
 3013               	.LVL197:
 3014               	.L128:
 3015               	/* epilogue start */
 624:quantum/rgblight.c ****   }
 625:quantum/rgblight.c **** }
 3016               		.loc 1 625 1 view .LVU724
 3017 00e0 DF91      		pop r29
 3018 00e2 CF91      		pop r28
 3019 00e4 1F91      		pop r17
 3020 00e6 0F91      		pop r16
 3021 00e8 FF90      		pop r15
 3022               	.LVL198:
 3023               		.loc 1 625 1 view .LVU725
 3024 00ea EF90      		pop r14
 3025 00ec DF90      		pop r13
 3026 00ee CF90      		pop r12
 3027 00f0 0895      		ret
 3028               	.LVL199:
 3029               	.L136:
 620:quantum/rgblight.c ****     }
 3030               		.loc 1 620 7 is_stmt 1 view .LVU726
 620:quantum/rgblight.c ****     }
 3031               		.loc 1 620 11 is_stmt 0 view .LVU727
 3032 00f2 8150      		subi r24,lo8(-(-1))
 3033 00f4 00C0      		rjmp .L140
 3034               	.L135:
 623:quantum/rgblight.c ****   }
 3035               		.loc 1 623 5 is_stmt 1 view .LVU728
 623:quantum/rgblight.c ****   }
 3036               		.loc 1 623 16 is_stmt 0 view .LVU729
 3037 00f6 90E0      		ldi r25,0
 3038 00f8 0196      		adiw r24,1
 623:quantum/rgblight.c ****   }
 3039               		.loc 1 623 21 view .LVU730
 3040 00fa 8F70      		andi r24,15
 3041 00fc 9927      		clr r25
 3042 00fe 00C0      		rjmp .L140
 3043               		.cfi_endproc
 3044               	.LFE52:
 3046               		.section	.text.rgblight_effect_knight,"ax",@progbits
 3047               	.global	rgblight_effect_knight
 3049               	rgblight_effect_knight:
 3050               	.LVL200:
 3051               	.LFB53:
 626:quantum/rgblight.c **** void rgblight_effect_knight(uint8_t interval) {
 3052               		.loc 1 626 47 is_stmt 1 view -0
 3053               		.cfi_startproc
 3054               		.loc 1 626 47 is_stmt 0 view .LVU732
 3055 0000 0F93      		push r16
 3056               	.LCFI57:
 3057               		.cfi_def_cfa_offset 3
 3058               		.cfi_offset 16, -2
 3059 0002 1F93      		push r17
 3060               	.LCFI58:
 3061               		.cfi_def_cfa_offset 4
 3062               		.cfi_offset 17, -3
 3063 0004 CF93      		push r28
 3064               	.LCFI59:
 3065               		.cfi_def_cfa_offset 5
 3066               		.cfi_offset 28, -4
 3067 0006 DF93      		push r29
 3068               	.LCFI60:
 3069               		.cfi_def_cfa_offset 6
 3070               		.cfi_offset 29, -5
 3071               	/* prologue: function */
 3072               	/* frame size = 0 */
 3073               	/* stack size = 4 */
 3074               	.L__stack_usage = 4
 3075 0008 C82F      		mov r28,r24
 627:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 3076               		.loc 1 627 3 is_stmt 1 view .LVU733
 628:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < pgm_read_byte(&RGBLED_KNIGHT_INTERVALS[interval])) {
 3077               		.loc 1 628 3 view .LVU734
 3078               		.loc 1 628 7 is_stmt 0 view .LVU735
 3079 000a 8091 0000 		lds r24,last_timer.2368
 3080 000e 9091 0000 		lds r25,last_timer.2368+1
 3081               	.LVL201:
 3082               		.loc 1 628 7 view .LVU736
 3083 0012 0E94 0000 		call timer_elapsed
 3084               	.LVL202:
 3085               	.LBB58:
 3086               		.loc 1 628 35 is_stmt 1 view .LVU737
 3087               		.loc 1 628 35 view .LVU738
 3088               		.loc 1 628 35 view .LVU739
 3089 0016 EC2F      		mov r30,r28
 3090 0018 F0E0      		ldi r31,0
 3091 001a E050      		subi r30,lo8(-(RGBLED_KNIGHT_INTERVALS))
 3092 001c F040      		sbci r31,hi8(-(RGBLED_KNIGHT_INTERVALS))
 3093               	/* #APP */
 3094               	 ;  628 "quantum/rgblight.c" 1
 3095 001e E491      		lpm r30, Z
 3096               		
 3097               	 ;  0 "" 2
 3098               	.LVL203:
 3099               		.loc 1 628 35 view .LVU740
 3100               	/* #NOAPP */
 3101               	.LBE58:
 3102               		.loc 1 628 6 is_stmt 0 view .LVU741
 3103 0020 E817      		cp r30,r24
 3104 0022 1906      		cpc __zero_reg__,r25
 3105 0024 01F0      		breq .+4
 3106 0026 00F0      		brlo .+2
 3107 0028 00C0      		rjmp .L141
 629:quantum/rgblight.c ****     return;
 630:quantum/rgblight.c ****   }
 631:quantum/rgblight.c ****   last_timer = timer_read();
 3108               		.loc 1 631 3 is_stmt 1 view .LVU742
 3109               		.loc 1 631 16 is_stmt 0 view .LVU743
 3110 002a 0E94 0000 		call timer_read
 3111               	.LVL204:
 3112               		.loc 1 631 14 view .LVU744
 3113 002e 9093 0000 		sts last_timer.2368+1,r25
 3114 0032 8093 0000 		sts last_timer.2368,r24
 632:quantum/rgblight.c **** 
 633:quantum/rgblight.c ****   static int8_t low_bound = 0;
 3115               		.loc 1 633 3 is_stmt 1 view .LVU745
 634:quantum/rgblight.c ****   static int8_t high_bound = RGBLIGHT_EFFECT_KNIGHT_LENGTH - 1;
 3116               		.loc 1 634 3 view .LVU746
 635:quantum/rgblight.c ****   static int8_t increment = 1;
 3117               		.loc 1 635 3 view .LVU747
 636:quantum/rgblight.c ****   uint8_t i, cur;
 3118               		.loc 1 636 3 view .LVU748
 637:quantum/rgblight.c **** 
 638:quantum/rgblight.c ****   // Set all the LEDs to 0
 639:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 3119               		.loc 1 639 3 view .LVU749
 3120               	.LVL205:
 3121               		.loc 1 639 3 is_stmt 0 view .LVU750
 3122 0036 C0E0      		ldi r28,lo8(led)
 3123 0038 D0E0      		ldi r29,hi8(led)
 3124               	.LVL206:
 631:quantum/rgblight.c **** 
 3125               		.loc 1 631 14 view .LVU751
 3126 003a FE01      		movw r30,r28
 3127               	.LVL207:
 3128               	.L144:
 640:quantum/rgblight.c ****     led[i].r = 0;
 3129               		.loc 1 640 5 is_stmt 1 discriminator 3 view .LVU752
 3130               		.loc 1 640 14 is_stmt 0 discriminator 3 view .LVU753
 3131 003c 1182      		std Z+1,__zero_reg__
 641:quantum/rgblight.c ****     led[i].g = 0;
 3132               		.loc 1 641 5 is_stmt 1 discriminator 3 view .LVU754
 3133               		.loc 1 641 14 is_stmt 0 discriminator 3 view .LVU755
 3134 003e 1082      		st Z,__zero_reg__
 642:quantum/rgblight.c ****     led[i].b = 0;
 3135               		.loc 1 642 5 is_stmt 1 discriminator 3 view .LVU756
 3136               		.loc 1 642 14 is_stmt 0 discriminator 3 view .LVU757
 3137 0040 1282      		std Z+2,__zero_reg__
 3138               		.loc 1 642 14 discriminator 3 view .LVU758
 3139 0042 3396      		adiw r30,3
 639:quantum/rgblight.c ****     led[i].r = 0;
 3140               		.loc 1 639 3 discriminator 3 view .LVU759
 3141 0044 80E0      		ldi r24,hi8(led+48)
 3142 0046 E030      		cpi r30,lo8(led+48)
 3143 0048 F807      		cpc r31,r24
 3144 004a 01F4      		brne .L144
 3145 004c 10E0      		ldi r17,0
 3146 004e 00E0      		ldi r16,0
 3147               	.L147:
 3148               	.LVL208:
 643:quantum/rgblight.c ****   }
 644:quantum/rgblight.c ****   // Determine which LEDs should be lit up
 645:quantum/rgblight.c ****   for (i = 0; i < RGBLIGHT_EFFECT_KNIGHT_LED_NUM; i++) {
 646:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % RGBLED_NUM;
 3149               		.loc 1 646 5 is_stmt 1 view .LVU760
 647:quantum/rgblight.c **** 
 648:quantum/rgblight.c ****     if (i >= low_bound && i <= high_bound) {
 3150               		.loc 1 648 5 view .LVU761
 3151               		.loc 1 648 11 is_stmt 0 view .LVU762
 3152 0050 8091 0000 		lds r24,low_bound.2372
 3153 0054 082E      		mov __tmp_reg__,r24
 3154 0056 000C      		lsl r0
 3155 0058 990B      		sbc r25,r25
 3156               		.loc 1 648 8 view .LVU763
 3157 005a 0817      		cp r16,r24
 3158 005c 1907      		cpc r17,r25
 3159 005e 04F0      		brlt .L145
 3160               		.loc 1 648 29 discriminator 1 view .LVU764
 3161 0060 8091 0000 		lds r24,high_bound.2373
 3162 0064 082E      		mov __tmp_reg__,r24
 3163 0066 000C      		lsl r0
 3164 0068 990B      		sbc r25,r25
 3165               		.loc 1 648 24 discriminator 1 view .LVU765
 3166 006a 8017      		cp r24,r16
 3167 006c 9107      		cpc r25,r17
 3168 006e 04F0      		brlt .L145
 649:quantum/rgblight.c ****       sethsv(rgblight_config.hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[cur]);
 3169               		.loc 1 649 7 is_stmt 1 view .LVU766
 3170               		.loc 1 649 29 is_stmt 0 view .LVU767
 3171 0070 8091 0000 		lds r24,rgblight_config
 3172 0074 881F      		rol r24
 3173 0076 8827      		clr r24
 3174 0078 881F      		rol r24
 3175 007a 9091 0000 		lds r25,rgblight_config+1
 3176 007e 592F      		mov r21,r25
 3177 0080 550F      		lsl r21
 3178 0082 97FB      		bst r25,7
 3179 0084 9927      		clr r25
 3180 0086 90F9      		bld r25,0
 3181               		.loc 1 649 7 view .LVU768
 3182 0088 9E01      		movw r18,r28
 3183 008a 4091 0000 		lds r20,rgblight_config+3
 3184 008e 6091 0000 		lds r22,rgblight_config+2
 3185 0092 852B      		or r24,r21
 3186 0094 0E94 0000 		call sethsv
 3187               	.LVL209:
 3188               	.L146:
 3189               		.loc 1 649 7 view .LVU769
 3190 0098 0F5F      		subi r16,-1
 3191 009a 1F4F      		sbci r17,-1
 3192               	.LVL210:
 3193               		.loc 1 649 7 view .LVU770
 3194 009c 2396      		adiw r28,3
 645:quantum/rgblight.c ****     cur = (i + RGBLIGHT_EFFECT_KNIGHT_OFFSET) % RGBLED_NUM;
 3195               		.loc 1 645 3 discriminator 2 view .LVU771
 3196 009e 0031      		cpi r16,16
 3197 00a0 1105      		cpc r17,__zero_reg__
 3198 00a2 01F4      		brne .L147
 650:quantum/rgblight.c ****     } else {
 651:quantum/rgblight.c ****       led[cur].r = 0;
 652:quantum/rgblight.c ****       led[cur].g = 0;
 653:quantum/rgblight.c ****       led[cur].b = 0;
 654:quantum/rgblight.c ****     }
 655:quantum/rgblight.c ****   }
 656:quantum/rgblight.c ****   rgblight_set();
 3199               		.loc 1 656 3 is_stmt 1 view .LVU772
 3200 00a4 0E94 0000 		call rgblight_set
 3201               	.LVL211:
 657:quantum/rgblight.c **** 
 658:quantum/rgblight.c ****   // Move from low_bound to high_bound changing the direction we increment each
 659:quantum/rgblight.c ****   // time a boundary is hit.
 660:quantum/rgblight.c ****   low_bound += increment;
 3202               		.loc 1 660 3 view .LVU773
 3203               		.loc 1 660 13 is_stmt 0 view .LVU774
 3204 00a8 8091 0000 		lds r24,increment.2374
 3205 00ac 9091 0000 		lds r25,low_bound.2372
 3206 00b0 980F      		add r25,r24
 3207 00b2 9093 0000 		sts low_bound.2372,r25
 661:quantum/rgblight.c ****   high_bound += increment;
 3208               		.loc 1 661 3 is_stmt 1 view .LVU775
 3209               		.loc 1 661 14 is_stmt 0 view .LVU776
 3210 00b6 2091 0000 		lds r18,high_bound.2373
 3211 00ba 280F      		add r18,r24
 3212 00bc 2093 0000 		sts high_bound.2373,r18
 662:quantum/rgblight.c **** 
 663:quantum/rgblight.c ****   if (high_bound <= 0 || low_bound >= RGBLIGHT_EFFECT_KNIGHT_LED_NUM - 1) {
 3213               		.loc 1 663 3 is_stmt 1 view .LVU777
 3214               		.loc 1 663 6 is_stmt 0 view .LVU778
 3215 00c0 1216      		cp __zero_reg__,r18
 3216 00c2 04F4      		brge .L148
 3217               		.loc 1 663 23 discriminator 1 view .LVU779
 3218 00c4 9F30      		cpi r25,lo8(15)
 3219 00c6 04F0      		brlt .L141
 3220               	.L148:
 664:quantum/rgblight.c ****     increment = -increment;
 3221               		.loc 1 664 5 is_stmt 1 view .LVU780
 3222               		.loc 1 664 15 is_stmt 0 view .LVU781
 3223 00c8 8195      		neg r24
 3224 00ca 8093 0000 		sts increment.2374,r24
 3225               	.LVL212:
 3226               	.L141:
 3227               	/* epilogue start */
 665:quantum/rgblight.c ****   }
 666:quantum/rgblight.c **** }
 3228               		.loc 1 666 1 view .LVU782
 3229 00ce DF91      		pop r29
 3230 00d0 CF91      		pop r28
 3231 00d2 1F91      		pop r17
 3232 00d4 0F91      		pop r16
 3233 00d6 0895      		ret
 3234               	.LVL213:
 3235               	.L145:
 651:quantum/rgblight.c ****       led[cur].g = 0;
 3236               		.loc 1 651 7 is_stmt 1 view .LVU783
 651:quantum/rgblight.c ****       led[cur].g = 0;
 3237               		.loc 1 651 18 is_stmt 0 view .LVU784
 3238 00d8 1982      		std Y+1,__zero_reg__
 652:quantum/rgblight.c ****       led[cur].b = 0;
 3239               		.loc 1 652 7 is_stmt 1 view .LVU785
 652:quantum/rgblight.c ****       led[cur].b = 0;
 3240               		.loc 1 652 18 is_stmt 0 view .LVU786
 3241 00da 1882      		st Y,__zero_reg__
 653:quantum/rgblight.c ****     }
 3242               		.loc 1 653 7 is_stmt 1 view .LVU787
 653:quantum/rgblight.c ****     }
 3243               		.loc 1 653 18 is_stmt 0 view .LVU788
 3244 00dc 1A82      		std Y+2,__zero_reg__
 3245 00de 00C0      		rjmp .L146
 3246               		.cfi_endproc
 3247               	.LFE53:
 3249               		.section	.text.rgblight_effect_christmas,"ax",@progbits
 3250               	.global	rgblight_effect_christmas
 3252               	rgblight_effect_christmas:
 3253               	.LFB54:
 667:quantum/rgblight.c **** 
 668:quantum/rgblight.c **** 
 669:quantum/rgblight.c **** void rgblight_effect_christmas(void) {
 3254               		.loc 1 669 38 is_stmt 1 view -0
 3255               		.cfi_startproc
 3256 0000 EF92      		push r14
 3257               	.LCFI61:
 3258               		.cfi_def_cfa_offset 3
 3259               		.cfi_offset 14, -2
 3260 0002 FF92      		push r15
 3261               	.LCFI62:
 3262               		.cfi_def_cfa_offset 4
 3263               		.cfi_offset 15, -3
 3264 0004 0F93      		push r16
 3265               	.LCFI63:
 3266               		.cfi_def_cfa_offset 5
 3267               		.cfi_offset 16, -4
 3268 0006 1F93      		push r17
 3269               	.LCFI64:
 3270               		.cfi_def_cfa_offset 6
 3271               		.cfi_offset 17, -5
 3272 0008 CF93      		push r28
 3273               	.LCFI65:
 3274               		.cfi_def_cfa_offset 7
 3275               		.cfi_offset 28, -6
 3276 000a DF93      		push r29
 3277               	.LCFI66:
 3278               		.cfi_def_cfa_offset 8
 3279               		.cfi_offset 29, -7
 3280               	/* prologue: function */
 3281               	/* frame size = 0 */
 3282               	/* stack size = 6 */
 3283               	.L__stack_usage = 6
 670:quantum/rgblight.c ****   static uint16_t current_offset = 0;
 3284               		.loc 1 670 3 view .LVU790
 671:quantum/rgblight.c ****   static uint16_t last_timer = 0;
 3285               		.loc 1 671 3 view .LVU791
 672:quantum/rgblight.c ****   uint16_t hue;
 3286               		.loc 1 672 3 view .LVU792
 673:quantum/rgblight.c ****   uint8_t i;
 3287               		.loc 1 673 3 view .LVU793
 674:quantum/rgblight.c ****   if (timer_elapsed(last_timer) < RGBLIGHT_EFFECT_CHRISTMAS_INTERVAL) {
 3288               		.loc 1 674 3 view .LVU794
 3289               		.loc 1 674 7 is_stmt 0 view .LVU795
 3290 000c 8091 0000 		lds r24,last_timer.2387
 3291 0010 9091 0000 		lds r25,last_timer.2387+1
 3292 0014 0E94 0000 		call timer_elapsed
 3293               	.LVL214:
 3294               		.loc 1 674 6 view .LVU796
 3295 0018 883E      		cpi r24,-24
 3296 001a 9340      		sbci r25,3
 3297 001c 00F0      		brlo .L152
 675:quantum/rgblight.c ****     return;
 676:quantum/rgblight.c ****   }
 677:quantum/rgblight.c ****   last_timer = timer_read();
 3298               		.loc 1 677 3 is_stmt 1 view .LVU797
 3299               		.loc 1 677 16 is_stmt 0 view .LVU798
 3300 001e 0E94 0000 		call timer_read
 3301               	.LVL215:
 3302               		.loc 1 677 14 view .LVU799
 3303 0022 9093 0000 		sts last_timer.2387+1,r25
 3304 0026 8093 0000 		sts last_timer.2387,r24
 678:quantum/rgblight.c ****   current_offset = (current_offset + 1) % 2;
 3305               		.loc 1 678 3 is_stmt 1 view .LVU800
 3306               		.loc 1 678 36 is_stmt 0 view .LVU801
 3307 002a C091 0000 		lds r28,current_offset.2386
 3308 002e D091 0000 		lds r29,current_offset.2386+1
 3309 0032 2196      		adiw r28,1
 3310               		.loc 1 678 41 view .LVU802
 3311 0034 C170      		andi r28,1
 3312 0036 DD27      		clr r29
 3313               		.loc 1 678 18 view .LVU803
 3314 0038 D093 0000 		sts current_offset.2386+1,r29
 3315 003c C093 0000 		sts current_offset.2386,r28
 679:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 3316               		.loc 1 679 3 is_stmt 1 view .LVU804
 3317               	.LVL216:
 3318               		.loc 1 679 3 is_stmt 0 view .LVU805
 3319 0040 80E0      		ldi r24,lo8(led)
 3320 0042 E82E      		mov r14,r24
 3321 0044 80E0      		ldi r24,hi8(led)
 3322 0046 F82E      		mov r15,r24
 3323               		.loc 1 679 10 view .LVU806
 3324 0048 10E0      		ldi r17,0
 680:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + current_offset) % 2) * 120;
 3325               		.loc 1 680 9 view .LVU807
 3326 004a 08E7      		ldi r16,lo8(120)
 3327               	.LVL217:
 3328               	.L154:
 3329               		.loc 1 680 5 is_stmt 1 discriminator 3 view .LVU808
 681:quantum/rgblight.c ****     sethsv(hue, rgblight_config.sat, rgblight_config.val, (LED_TYPE *)&led[i]);
 3330               		.loc 1 681 5 discriminator 3 view .LVU809
 680:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + current_offset) % 2) * 120;
 3331               		.loc 1 680 18 is_stmt 0 discriminator 3 view .LVU810
 3332 004c 812F      		mov r24,r17
 3333 004e 8695      		lsr r24
 3334               	.LVL218:
 680:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + current_offset) % 2) * 120;
 3335               		.loc 1 680 50 discriminator 3 view .LVU811
 3336 0050 8C0F      		add r24,r28
 3337 0052 9D2F      		mov r25,r29
 3338 0054 911D      		adc r25,__zero_reg__
 3339               	.LVL219:
 680:quantum/rgblight.c ****     hue = 0 + ((i/RGBLIGHT_EFFECT_CHRISTMAS_STEP + current_offset) % 2) * 120;
 3340               		.loc 1 680 68 discriminator 3 view .LVU812
 3341 0056 8170      		andi r24,1
 3342 0058 9927      		clr r25
 3343               		.loc 1 681 5 discriminator 3 view .LVU813
 3344 005a 9701      		movw r18,r14
 3345 005c 4091 0000 		lds r20,rgblight_config+3
 3346 0060 6091 0000 		lds r22,rgblight_config+2
 3347 0064 FC01      		movw r30,r24
 3348 0066 0E9F      		mul r16,r30
 3349 0068 C001      		movw r24,r0
 3350 006a 0F9F      		mul r16,r31
 3351 006c 900D      		add r25,r0
 3352 006e 1124      		clr __zero_reg__
 3353 0070 0E94 0000 		call sethsv
 3354               	.LVL220:
 679:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 3355               		.loc 1 679 32 discriminator 3 view .LVU814
 3356 0074 1F5F      		subi r17,lo8(-(1))
 3357               	.LVL221:
 679:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 3358               		.loc 1 679 32 discriminator 3 view .LVU815
 3359 0076 F3E0      		ldi r31,3
 3360 0078 EF0E      		add r14,r31
 3361 007a F11C      		adc r15,__zero_reg__
 679:quantum/rgblight.c ****   for (i = 0; i < RGBLED_NUM; i++) {
 3362               		.loc 1 679 3 discriminator 3 view .LVU816
 3363 007c 1031      		cpi r17,lo8(16)
 3364 007e 01F4      		brne .L154
 682:quantum/rgblight.c ****   }
 683:quantum/rgblight.c ****   rgblight_set();
 3365               		.loc 1 683 3 is_stmt 1 view .LVU817
 3366               	/* epilogue start */
 684:quantum/rgblight.c **** }
 3367               		.loc 1 684 1 is_stmt 0 view .LVU818
 3368 0080 DF91      		pop r29
 3369 0082 CF91      		pop r28
 3370               	.LVL222:
 3371               		.loc 1 684 1 view .LVU819
 3372 0084 1F91      		pop r17
 3373               	.LVL223:
 3374               		.loc 1 684 1 view .LVU820
 3375 0086 0F91      		pop r16
 3376 0088 FF90      		pop r15
 3377 008a EF90      		pop r14
 683:quantum/rgblight.c **** }
 3378               		.loc 1 683 3 view .LVU821
 3379 008c 0C94 0000 		jmp rgblight_set
 3380               	.LVL224:
 3381               	.L152:
 3382               	/* epilogue start */
 3383               		.loc 1 684 1 view .LVU822
 3384 0090 DF91      		pop r29
 3385 0092 CF91      		pop r28
 3386 0094 1F91      		pop r17
 3387 0096 0F91      		pop r16
 3388 0098 FF90      		pop r15
 3389 009a EF90      		pop r14
 3390 009c 0895      		ret
 3391               		.cfi_endproc
 3392               	.LFE54:
 3394               		.section	.text.rgblight_task,"ax",@progbits
 3395               	.global	rgblight_task
 3397               	rgblight_task:
 3398               	.LFB48:
 510:quantum/rgblight.c ****   if (rgblight_timer_enabled) {
 3399               		.loc 1 510 26 is_stmt 1 view -0
 3400               		.cfi_startproc
 3401               	/* prologue: function */
 3402               	/* frame size = 0 */
 3403               	/* stack size = 0 */
 3404               	.L__stack_usage = 0
 511:quantum/rgblight.c ****     // mode = 1, static light, do nothing here
 3405               		.loc 1 511 3 view .LVU824
 511:quantum/rgblight.c ****     // mode = 1, static light, do nothing here
 3406               		.loc 1 511 6 is_stmt 0 view .LVU825
 3407 0000 8091 0000 		lds r24,rgblight_timer_enabled
 3408 0004 8823      		tst r24
 3409 0006 01F0      		breq .L156
 513:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 3410               		.loc 1 513 5 is_stmt 1 view .LVU826
 513:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 3411               		.loc 1 513 24 is_stmt 0 view .LVU827
 3412 0008 9091 0000 		lds r25,rgblight_config
 3413 000c 892F      		mov r24,r25
 3414 000e 8695      		lsr r24
 3415 0010 8F73      		andi r24,lo8(63)
 513:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 3416               		.loc 1 513 35 view .LVU828
 3417 0012 2EE3      		ldi r18,lo8(62)
 3418 0014 280F      		add r18,r24
 3419 0016 2F73      		andi r18,lo8(63)
 513:quantum/rgblight.c ****       // mode = 2 to 5, breathing mode
 3420               		.loc 1 513 8 view .LVU829
 3421 0018 2430      		cpi r18,lo8(4)
 3422 001a 00F4      		brsh .L158
 515:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 6 && rgblight_config.mode <= 8) {
 3423               		.loc 1 515 7 is_stmt 1 view .LVU830
 3424 001c 8250      		subi r24,lo8(-(-2))
 3425 001e 0C94 0000 		jmp rgblight_effect_breathing
 3426               	.LVL225:
 3427               	.L158:
 516:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 3428               		.loc 1 516 12 view .LVU831
 516:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 3429               		.loc 1 516 42 is_stmt 0 view .LVU832
 3430 0022 2AE3      		ldi r18,lo8(58)
 3431 0024 280F      		add r18,r24
 3432 0026 2F73      		andi r18,lo8(63)
 516:quantum/rgblight.c ****       // mode = 6 to 8, rainbow mood mod
 3433               		.loc 1 516 15 view .LVU833
 3434 0028 2330      		cpi r18,lo8(3)
 3435 002a 00F4      		brsh .L159
 518:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 9 && rgblight_config.mode <= 14) {
 3436               		.loc 1 518 7 is_stmt 1 view .LVU834
 3437 002c 8650      		subi r24,lo8(-(-6))
 3438 002e 0C94 0000 		jmp rgblight_effect_rainbow_mood
 3439               	.LVL226:
 3440               	.L159:
 519:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 3441               		.loc 1 519 12 view .LVU835
 519:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 3442               		.loc 1 519 42 is_stmt 0 view .LVU836
 3443 0032 27E3      		ldi r18,lo8(55)
 3444 0034 280F      		add r18,r24
 3445 0036 2F73      		andi r18,lo8(63)
 519:quantum/rgblight.c ****       // mode = 9 to 14, rainbow swirl mode
 3446               		.loc 1 519 15 view .LVU837
 3447 0038 2630      		cpi r18,lo8(6)
 3448 003a 00F4      		brsh .L160
 521:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 15 && rgblight_config.mode <= 20) {
 3449               		.loc 1 521 7 is_stmt 1 view .LVU838
 3450 003c 8950      		subi r24,lo8(-(-9))
 3451 003e 0C94 0000 		jmp rgblight_effect_rainbow_swirl
 3452               	.LVL227:
 3453               	.L160:
 522:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 3454               		.loc 1 522 12 view .LVU839
 522:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 3455               		.loc 1 522 43 is_stmt 0 view .LVU840
 3456 0042 21E3      		ldi r18,lo8(49)
 3457 0044 280F      		add r18,r24
 3458 0046 2F73      		andi r18,lo8(63)
 522:quantum/rgblight.c ****       // mode = 15 to 20, snake mode
 3459               		.loc 1 522 15 view .LVU841
 3460 0048 2630      		cpi r18,lo8(6)
 3461 004a 00F4      		brsh .L161
 524:quantum/rgblight.c ****     } else if (rgblight_config.mode >= 21 && rgblight_config.mode <= 23) {
 3462               		.loc 1 524 7 is_stmt 1 view .LVU842
 3463 004c 8F50      		subi r24,lo8(-(-15))
 3464 004e 0C94 0000 		jmp rgblight_effect_snake
 3465               	.LVL228:
 3466               	.L161:
 525:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 3467               		.loc 1 525 12 view .LVU843
 525:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 3468               		.loc 1 525 43 is_stmt 0 view .LVU844
 3469 0052 2BE2      		ldi r18,lo8(43)
 3470 0054 280F      		add r18,r24
 3471 0056 2F73      		andi r18,lo8(63)
 525:quantum/rgblight.c ****       // mode = 21 to 23, knight mode
 3472               		.loc 1 525 15 view .LVU845
 3473 0058 2330      		cpi r18,lo8(3)
 3474 005a 00F4      		brsh .L162
 527:quantum/rgblight.c ****     } else if (rgblight_config.mode == 24) {
 3475               		.loc 1 527 7 is_stmt 1 view .LVU846
 3476 005c 8551      		subi r24,lo8(-(-21))
 3477 005e 0C94 0000 		jmp rgblight_effect_knight
 3478               	.LVL229:
 3479               	.L162:
 528:quantum/rgblight.c ****       // mode = 24, christmas mode
 3480               		.loc 1 528 12 view .LVU847
 528:quantum/rgblight.c ****       // mode = 24, christmas mode
 3481               		.loc 1 528 37 is_stmt 0 view .LVU848
 3482 0062 9E77      		andi r25,lo8(126)
 528:quantum/rgblight.c ****       // mode = 24, christmas mode
 3483               		.loc 1 528 15 view .LVU849
 3484 0064 9033      		cpi r25,lo8(48)
 3485 0066 01F4      		brne .L156
 530:quantum/rgblight.c ****     }
 3486               		.loc 1 530 7 is_stmt 1 view .LVU850
 3487 0068 0C94 0000 		jmp rgblight_effect_christmas
 3488               	.LVL230:
 3489               	.L156:
 3490               	/* epilogue start */
 533:quantum/rgblight.c **** 
 3491               		.loc 1 533 1 is_stmt 0 view .LVU851
 3492 006c 0895      		ret
 3493               		.cfi_endproc
 3494               	.LFE48:
 3496               		.section	.bss.current_offset.2386,"aw",@nobits
 3499               	current_offset.2386:
 3500 0000 0000      		.zero	2
 3501               		.section	.bss.last_timer.2387,"aw",@nobits
 3504               	last_timer.2387:
 3505 0000 0000      		.zero	2
 3506               		.section	.data.increment.2374,"aw"
 3509               	increment.2374:
 3510 0000 01        		.byte	1
 3511               		.section	.data.high_bound.2373,"aw"
 3514               	high_bound.2373:
 3515 0000 02        		.byte	2
 3516               		.section	.bss.low_bound.2372,"aw",@nobits
 3519               	low_bound.2372:
 3520 0000 00        		.zero	1
 3521               		.section	.bss.last_timer.2368,"aw",@nobits
 3524               	last_timer.2368:
 3525 0000 0000      		.zero	2
 3526               		.section	.bss.pos.2350,"aw",@nobits
 3529               	pos.2350:
 3530 0000 00        		.zero	1
 3531               		.section	.bss.last_timer.2351,"aw",@nobits
 3534               	last_timer.2351:
 3535 0000 0000      		.zero	2
 3536               		.section	.bss.current_hue.2337,"aw",@nobits
 3539               	current_hue.2337:
 3540 0000 0000      		.zero	2
 3541               		.section	.bss.last_timer.2338,"aw",@nobits
 3544               	last_timer.2338:
 3545 0000 0000      		.zero	2
 3546               		.section	.bss.current_hue.2329,"aw",@nobits
 3549               	current_hue.2329:
 3550 0000 0000      		.zero	2
 3551               		.section	.bss.last_timer.2330,"aw",@nobits
 3554               	last_timer.2330:
 3555 0000 0000      		.zero	2
 3556               		.section	.bss.pos.2320,"aw",@nobits
 3559               	pos.2320:
 3560 0000 00        		.zero	1
 3561               		.section	.bss.last_timer.2321,"aw",@nobits
 3564               	last_timer.2321:
 3565 0000 0000      		.zero	2
 3566               	.global	rgblight_timer_enabled
 3567               		.section	.bss.rgblight_timer_enabled,"aw",@nobits
 3570               	rgblight_timer_enabled:
 3571 0000 00        		.zero	1
 3572               	.global	rgblight_inited
 3573               		.section	.bss.rgblight_inited,"aw",@nobits
 3576               	rgblight_inited:
 3577 0000 00        		.zero	1
 3578               		.comm	led,48,1
 3579               		.comm	inmem_config,5,1
 3580               		.comm	rgblight_config,5,1
 3581               		.weak	RGBLED_GRADIENT_RANGES
 3582               		.section	.progmem.data.RGBLED_GRADIENT_RANGES,"a"
 3585               	RGBLED_GRADIENT_RANGES:
 3586 0000 6801      		.word	360
 3587 0002 F000      		.word	240
 3588 0004 B400      		.word	180
 3589 0006 7800      		.word	120
 3590 0008 5A00      		.word	90
 3591               		.weak	RGBLED_KNIGHT_INTERVALS
 3592               		.section	.progmem.data.RGBLED_KNIGHT_INTERVALS,"a"
 3595               	RGBLED_KNIGHT_INTERVALS:
 3596 0000 7F        		.byte	127
 3597 0001 3F        		.byte	63
 3598 0002 1F        		.byte	31
 3599               		.weak	RGBLED_SNAKE_INTERVALS
 3600               		.section	.progmem.data.RGBLED_SNAKE_INTERVALS,"a"
 3603               	RGBLED_SNAKE_INTERVALS:
 3604 0000 64        		.byte	100
 3605 0001 32        		.byte	50
 3606 0002 14        		.byte	20
 3607               		.weak	RGBLED_RAINBOW_SWIRL_INTERVALS
 3608               		.section	.progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS,"a"
 3611               	RGBLED_RAINBOW_SWIRL_INTERVALS:
 3612 0000 64        		.byte	100
 3613 0001 32        		.byte	50
 3614 0002 14        		.byte	20
 3615               		.weak	RGBLED_RAINBOW_MOOD_INTERVALS
 3616               		.section	.progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS,"a"
 3619               	RGBLED_RAINBOW_MOOD_INTERVALS:
 3620 0000 78        		.byte	120
 3621 0001 3C        		.byte	60
 3622 0002 1E        		.byte	30
 3623               		.weak	RGBLED_BREATHING_INTERVALS
 3624               		.section	.progmem.data.RGBLED_BREATHING_INTERVALS,"a"
 3627               	RGBLED_BREATHING_INTERVALS:
 3628 0000 1E        		.byte	30
 3629 0001 14        		.byte	20
 3630 0002 0A        		.byte	10
 3631 0003 05        		.byte	5
 3632               		.text
 3633               	.Letext0:
 3634               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 3635               		.file 4 "./quantum/rgblight_types.h"
 3636               		.file 5 "./tmk_core/common/timer.h"
 3637               		.file 6 "quantum/rgblight.h"
 3638               		.file 7 "./tmk_core/common/debug.h"
 3639               		.file 8 "quantum/led_tables.h"
 3640               		.file 9 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/math.h"
 3641               		.file 10 "./drivers/avr/ws2812.h"
 3642               		.file 11 "./tmk_core/common/eeconfig.h"
 3643               		.file 12 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/avr/eeprom.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 rgblight.c
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:13     .text.sethsv:0000000000000000 sethsv
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:318    .text.setrgb:0000000000000000 setrgb
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:347    .text.eeconfig_read_rgblight:0000000000000000 eeconfig_read_rgblight
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:367    .text.eeconfig_update_rgblight:0000000000000000 eeconfig_update_rgblight
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:391    .text.eeconfig_update_rgblight_default:0000000000000000 eeconfig_update_rgblight_default
                            *COM*:0000000000000005 rgblight_config
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:433    .text.eeconfig_debug_rgblight:0000000000000000 eeconfig_debug_rgblight
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:457    .text.rgblight_get_mode:0000000000000000 rgblight_get_mode
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:493    .text.increment:0000000000000000 increment
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:534    .text.decrement:0000000000000000 decrement
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:574    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:620    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:671    .text.rgblight_get_hue:0000000000000000 rgblight_get_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:701    .text.rgblight_get_sat:0000000000000000 rgblight_get_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:720    .text.rgblight_get_val:0000000000000000 rgblight_get_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:739    .text.rgblight_set:0000000000000000 rgblight_set
                            *COM*:0000000000000030 led
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:790    .text.rgblight_setrgb:0000000000000000 rgblight_setrgb
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:841    .text.rgblight_sethsv_noeeprom:0000000000000000 rgblight_sethsv_noeeprom
                            *COM*:0000000000000005 inmem_config
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:964    .text.rgblight_sethsv:0000000000000000 rgblight_sethsv
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3585   .progmem.data.RGBLED_GRADIENT_RANGES:0000000000000000 RGBLED_GRADIENT_RANGES
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1287   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1333   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1388   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1435   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1482   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1529   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1576   .text.rgblight_mode:0000000000000000 rgblight_mode
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3570   .bss.rgblight_timer_enabled:0000000000000000 rgblight_timer_enabled
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1712   .text.rgblight_init:0000000000000000 rgblight_init
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3576   .bss.rgblight_inited:0000000000000000 rgblight_inited
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1809   .text.rgblight_increase:0000000000000000 rgblight_increase
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1845   .text.rgblight_decrease:0000000000000000 rgblight_decrease
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1881   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1917   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:1952   .text.rgblight_enable:0000000000000000 rgblight_enable
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2002   .text.rgblight_setrgb_at:0000000000000000 rgblight_setrgb_at
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2051   .text.rgblight_sethsv_at:0000000000000000 rgblight_sethsv_at
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2121   .text.rgblight_update_dword:0000000000000000 rgblight_update_dword
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2173   .text.rgblight_disable:0000000000000000 rgblight_disable
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2242   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2269   .text.rgblight_timer_init:0000000000000000 rgblight_timer_init
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2290   .text.rgblight_timer_enable:0000000000000000 rgblight_timer_enable
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2307   .text.rgblight_timer_disable:0000000000000000 rgblight_timer_disable
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2328   .text.rgblight_timer_toggle:0000000000000000 rgblight_timer_toggle
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2344   .text.rgblight_show_solid_color:0000000000000000 rgblight_show_solid_color
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2405   .text.rgblight_effect_breathing:0000000000000000 rgblight_effect_breathing
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3564   .bss.last_timer.2321:0000000000000000 last_timer.2321
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3627   .progmem.data.RGBLED_BREATHING_INTERVALS:0000000000000000 RGBLED_BREATHING_INTERVALS
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3559   .bss.pos.2320:0000000000000000 pos.2320
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2539   .text.rgblight_effect_rainbow_mood:0000000000000000 rgblight_effect_rainbow_mood
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3554   .bss.last_timer.2330:0000000000000000 last_timer.2330
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3619   .progmem.data.RGBLED_RAINBOW_MOOD_INTERVALS:0000000000000000 RGBLED_RAINBOW_MOOD_INTERVALS
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3549   .bss.current_hue.2329:0000000000000000 current_hue.2329
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2625   .text.rgblight_effect_rainbow_swirl:0000000000000000 rgblight_effect_rainbow_swirl
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3544   .bss.last_timer.2338:0000000000000000 last_timer.2338
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3611   .progmem.data.RGBLED_RAINBOW_SWIRL_INTERVALS:0000000000000000 RGBLED_RAINBOW_SWIRL_INTERVALS
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3539   .bss.current_hue.2337:0000000000000000 current_hue.2337
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:2791   .text.rgblight_effect_snake:0000000000000000 rgblight_effect_snake
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3534   .bss.last_timer.2351:0000000000000000 last_timer.2351
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3603   .progmem.data.RGBLED_SNAKE_INTERVALS:0000000000000000 RGBLED_SNAKE_INTERVALS
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3529   .bss.pos.2350:0000000000000000 pos.2350
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3049   .text.rgblight_effect_knight:0000000000000000 rgblight_effect_knight
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3524   .bss.last_timer.2368:0000000000000000 last_timer.2368
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3595   .progmem.data.RGBLED_KNIGHT_INTERVALS:0000000000000000 RGBLED_KNIGHT_INTERVALS
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3519   .bss.low_bound.2372:0000000000000000 low_bound.2372
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3514   .data.high_bound.2373:0000000000000000 high_bound.2373
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3509   .data.increment.2374:0000000000000000 increment.2374
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3252   .text.rgblight_effect_christmas:0000000000000000 rgblight_effect_christmas
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3504   .bss.last_timer.2387:0000000000000000 last_timer.2387
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3499   .bss.current_offset.2386:0000000000000000 current_offset.2386
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZcbEUg.s:3397   .text.rgblight_task:0000000000000000 rgblight_task

UNDEFINED SYMBOLS
__udivmodhi4
CIE1931_CURVE
eeprom_read_dword
eeprom_update_dword
ws2812_setleds
__divmodhi4
debug_config
eeconfig_is_enabled
eeconfig_init
__floatsisf
__divsf3
__mulsf3
__subsf3
__fixunssfsi
timer_elapsed
timer_read
sin
exp
__do_copy_data
__do_clear_bss
