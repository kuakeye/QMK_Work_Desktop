   1               		.file	"process_tap_dance.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.process_tap_dance_action_on_dance_finished.part.0,"ax",@progbits
  12               	process_tap_dance_action_on_dance_finished.part.0:
  13               	.LVL0:
  14               	.LFB31:
  15               		.file 1 "quantum/process_keycode/process_tap_dance.c"
   1:quantum/process_keycode/process_tap_dance.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_tap_dance.c ****  *
   3:quantum/process_keycode/process_tap_dance.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_tap_dance.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_tap_dance.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_tap_dance.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_tap_dance.c ****  *
   8:quantum/process_keycode/process_tap_dance.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_tap_dance.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_tap_dance.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_tap_dance.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_tap_dance.c ****  *
  13:quantum/process_keycode/process_tap_dance.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_tap_dance.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_tap_dance.c ****  */
  16:quantum/process_keycode/process_tap_dance.c **** #include "quantum.h"
  17:quantum/process_keycode/process_tap_dance.c **** #include "action_tapping.h"
  18:quantum/process_keycode/process_tap_dance.c **** 
  19:quantum/process_keycode/process_tap_dance.c **** uint8_t get_oneshot_mods(void);
  20:quantum/process_keycode/process_tap_dance.c **** 
  21:quantum/process_keycode/process_tap_dance.c **** static uint16_t last_td;
  22:quantum/process_keycode/process_tap_dance.c **** static int8_t highest_td = -1;
  23:quantum/process_keycode/process_tap_dance.c **** 
  24:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_on_each_tap (qk_tap_dance_state_t *state, void *user_data) {
  25:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  26:quantum/process_keycode/process_tap_dance.c **** 
  27:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 2) {
  28:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
  29:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
  30:quantum/process_keycode/process_tap_dance.c ****   }
  31:quantum/process_keycode/process_tap_dance.c **** }
  32:quantum/process_keycode/process_tap_dance.c **** 
  33:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_finished (qk_tap_dance_state_t *state, void *user_data) {
  34:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  35:quantum/process_keycode/process_tap_dance.c **** 
  36:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  37:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
  38:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  39:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
  40:quantum/process_keycode/process_tap_dance.c ****   }
  41:quantum/process_keycode/process_tap_dance.c **** }
  42:quantum/process_keycode/process_tap_dance.c **** 
  43:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_reset (qk_tap_dance_state_t *state, void *user_data) {
  44:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  45:quantum/process_keycode/process_tap_dance.c **** 
  46:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  47:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
  48:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  49:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
  50:quantum/process_keycode/process_tap_dance.c ****   }
  51:quantum/process_keycode/process_tap_dance.c **** }
  52:quantum/process_keycode/process_tap_dance.c **** 
  53:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_on_each_tap (qk_tap_dance_state_t *state, void *user_data) {
  54:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  55:quantum/process_keycode/process_tap_dance.c **** 
  56:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 2) {
  57:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
  58:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
  59:quantum/process_keycode/process_tap_dance.c ****   }
  60:quantum/process_keycode/process_tap_dance.c **** }
  61:quantum/process_keycode/process_tap_dance.c **** 
  62:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_finished (qk_tap_dance_state_t *state, void *user_data) {
  63:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  64:quantum/process_keycode/process_tap_dance.c **** 
  65:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  66:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
  67:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  68:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
  69:quantum/process_keycode/process_tap_dance.c ****   }
  70:quantum/process_keycode/process_tap_dance.c **** }
  71:quantum/process_keycode/process_tap_dance.c **** 
  72:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_reset (qk_tap_dance_state_t *state, void *user_data) {
  73:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  74:quantum/process_keycode/process_tap_dance.c **** 
  75:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  76:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
  77:quantum/process_keycode/process_tap_dance.c ****   }
  78:quantum/process_keycode/process_tap_dance.c **** }
  79:quantum/process_keycode/process_tap_dance.c **** 
  80:quantum/process_keycode/process_tap_dance.c **** static inline void _process_tap_dance_action_fn (qk_tap_dance_state_t *state,
  81:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
  82:quantum/process_keycode/process_tap_dance.c ****                                                  qk_tap_dance_user_fn_t fn)
  83:quantum/process_keycode/process_tap_dance.c **** {
  84:quantum/process_keycode/process_tap_dance.c ****   if (fn) {
  85:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  86:quantum/process_keycode/process_tap_dance.c ****   }
  87:quantum/process_keycode/process_tap_dance.c **** }
  88:quantum/process_keycode/process_tap_dance.c **** 
  89:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_each_tap (qk_tap_dance_action_t *action)
  90:quantum/process_keycode/process_tap_dance.c **** {
  91:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_each_tap);
  92:quantum/process_keycode/process_tap_dance.c **** }
  93:quantum/process_keycode/process_tap_dance.c **** 
  94:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_dance_finished (qk_tap_dance_action_t *action)
  16               		.loc 1 94 20 view -0
  17               		.cfi_startproc
  18               		.loc 1 94 20 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 EC01      		movw r28,r24
  95:quantum/process_keycode/process_tap_dance.c **** {
  96:quantum/process_keycode/process_tap_dance.c ****   if (action->state.finished)
  97:quantum/process_keycode/process_tap_dance.c ****     return;
  98:quantum/process_keycode/process_tap_dance.c ****   action->state.finished = true;
  32               		.loc 1 98 3 is_stmt 1 view .LVU2
  33               		.loc 1 98 26 is_stmt 0 view .LVU3
  34 0006 81E0      		ldi r24,lo8(1)
  35               	.LVL1:
  36               		.loc 1 98 26 view .LVU4
  37 0008 8F87      		std Y+15,r24
  99:quantum/process_keycode/process_tap_dance.c ****   add_mods(action->state.oneshot_mods);
  38               		.loc 1 99 3 is_stmt 1 view .LVU5
  39 000a 8F81      		ldd r24,Y+7
  40 000c 0E94 0000 		call add_mods
  41               	.LVL2:
 100:quantum/process_keycode/process_tap_dance.c ****   add_weak_mods(action->state.weak_mods);
  42               		.loc 1 100 3 view .LVU6
  43 0010 8885      		ldd r24,Y+8
  44 0012 0E94 0000 		call add_weak_mods
  45               	.LVL3:
 101:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
  46               		.loc 1 101 3 view .LVU7
  47 0016 0E94 0000 		call send_keyboard_report
  48               	.LVL4:
 102:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_dance_finished);
  49               		.loc 1 102 3 view .LVU8
  50 001a EA81      		ldd r30,Y+2
  51 001c FB81      		ldd r31,Y+3
  52               	.LVL5:
  53               	.LBB4:
  54               	.LBI4:
  80:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
  55               		.loc 1 80 20 view .LVU9
  56               	.LBB5:
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  57               		.loc 1 84 3 view .LVU10
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  58               		.loc 1 84 6 is_stmt 0 view .LVU11
  59 001e 3097      		sbiw r30,0
  60 0020 01F0      		breq .L1
  85:quantum/process_keycode/process_tap_dance.c ****   }
  61               		.loc 1 85 5 is_stmt 1 view .LVU12
  62 0022 6A89      		ldd r22,Y+18
  63 0024 7B89      		ldd r23,Y+19
  64 0026 CE01      		movw r24,r28
  65 0028 0696      		adiw r24,6
  66               	.LVL6:
  67               	/* epilogue start */
  85:quantum/process_keycode/process_tap_dance.c ****   }
  68               		.loc 1 85 5 is_stmt 0 view .LVU13
  69               	.LBE5:
  70               	.LBE4:
 103:quantum/process_keycode/process_tap_dance.c **** }
  71               		.loc 1 103 1 view .LVU14
  72 002a DF91      		pop r29
  73 002c CF91      		pop r28
  74               	.LVL7:
  75               	.LBB7:
  76               	.LBB6:
  85:quantum/process_keycode/process_tap_dance.c ****   }
  77               		.loc 1 85 5 view .LVU15
  78 002e 0994      		ijmp
  79               	.LVL8:
  80               	.L1:
  81               	/* epilogue start */
  85:quantum/process_keycode/process_tap_dance.c ****   }
  82               		.loc 1 85 5 view .LVU16
  83               	.LBE6:
  84               	.LBE7:
  85               		.loc 1 103 1 view .LVU17
  86 0030 DF91      		pop r29
  87 0032 CF91      		pop r28
  88               	.LVL9:
  89               		.loc 1 103 1 view .LVU18
  90 0034 0895      		ret
  91               		.cfi_endproc
  92               	.LFE31:
  94               		.section	.text.qk_tap_dance_pair_on_each_tap,"ax",@progbits
  95               	.global	qk_tap_dance_pair_on_each_tap
  97               	qk_tap_dance_pair_on_each_tap:
  98               	.LVL10:
  99               	.LFB17:
  24:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 100               		.loc 1 24 83 is_stmt 1 view -0
 101               		.cfi_startproc
  24:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 102               		.loc 1 24 83 is_stmt 0 view .LVU20
 103 0000 CF93      		push r28
 104               	.LCFI2:
 105               		.cfi_def_cfa_offset 3
 106               		.cfi_offset 28, -2
 107 0002 DF93      		push r29
 108               	.LCFI3:
 109               		.cfi_def_cfa_offset 4
 110               		.cfi_offset 29, -3
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 2 */
 114               	.L__stack_usage = 2
 115 0004 EC01      		movw r28,r24
  25:quantum/process_keycode/process_tap_dance.c **** 
 116               		.loc 1 25 3 is_stmt 1 view .LVU21
 117               	.LVL11:
  27:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 118               		.loc 1 27 3 view .LVU22
  27:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 119               		.loc 1 27 6 is_stmt 0 view .LVU23
 120 0006 8881      		ld r24,Y
 121               	.LVL12:
  27:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 122               		.loc 1 27 6 view .LVU24
 123 0008 8230      		cpi r24,lo8(2)
 124 000a 01F4      		brne .L3
  28:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
 125               		.loc 1 28 5 is_stmt 1 view .LVU25
 126 000c FB01      		movw r30,r22
 127 000e 8281      		ldd r24,Z+2
 128 0010 9381      		ldd r25,Z+3
 129 0012 0E94 0000 		call register_code16
 130               	.LVL13:
  29:quantum/process_keycode/process_tap_dance.c ****   }
 131               		.loc 1 29 5 view .LVU26
  29:quantum/process_keycode/process_tap_dance.c ****   }
 132               		.loc 1 29 21 is_stmt 0 view .LVU27
 133 0016 81E0      		ldi r24,lo8(1)
 134 0018 8987      		std Y+9,r24
 135               	.L3:
 136               	/* epilogue start */
  31:quantum/process_keycode/process_tap_dance.c **** 
 137               		.loc 1 31 1 view .LVU28
 138 001a DF91      		pop r29
 139 001c CF91      		pop r28
 140               	.LVL14:
  31:quantum/process_keycode/process_tap_dance.c **** 
 141               		.loc 1 31 1 view .LVU29
 142 001e 0895      		ret
 143               		.cfi_endproc
 144               	.LFE17:
 146               		.section	.text.qk_tap_dance_pair_finished,"ax",@progbits
 147               	.global	qk_tap_dance_pair_finished
 149               	qk_tap_dance_pair_finished:
 150               	.LVL15:
 151               	.LFB18:
  33:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 152               		.loc 1 33 80 is_stmt 1 view -0
 153               		.cfi_startproc
 154               	/* prologue: function */
 155               	/* frame size = 0 */
 156               	/* stack size = 0 */
 157               	.L__stack_usage = 0
  34:quantum/process_keycode/process_tap_dance.c **** 
 158               		.loc 1 34 3 view .LVU31
  36:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 159               		.loc 1 36 3 view .LVU32
  36:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 160               		.loc 1 36 12 is_stmt 0 view .LVU33
 161 0000 FC01      		movw r30,r24
 162 0002 8081      		ld r24,Z
 163               	.LVL16:
  36:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 164               		.loc 1 36 6 view .LVU34
 165 0004 8130      		cpi r24,lo8(1)
 166 0006 01F4      		brne .L6
  37:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 167               		.loc 1 37 5 is_stmt 1 view .LVU35
 168 0008 FB01      		movw r30,r22
 169               	.LVL17:
  37:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 170               		.loc 1 37 5 is_stmt 0 view .LVU36
 171 000a 8081      		ld r24,Z
 172 000c 9181      		ldd r25,Z+1
 173               	.L8:
  39:quantum/process_keycode/process_tap_dance.c ****   }
 174               		.loc 1 39 5 view .LVU37
 175 000e 0C94 0000 		jmp register_code16
 176               	.LVL18:
 177               	.L6:
  38:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 178               		.loc 1 38 10 is_stmt 1 view .LVU38
  38:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 179               		.loc 1 38 13 is_stmt 0 view .LVU39
 180 0012 8230      		cpi r24,lo8(2)
 181 0014 01F4      		brne .L5
  39:quantum/process_keycode/process_tap_dance.c ****   }
 182               		.loc 1 39 5 is_stmt 1 view .LVU40
 183 0016 FB01      		movw r30,r22
 184               	.LVL19:
  39:quantum/process_keycode/process_tap_dance.c ****   }
 185               		.loc 1 39 5 is_stmt 0 view .LVU41
 186 0018 8281      		ldd r24,Z+2
 187 001a 9381      		ldd r25,Z+3
 188 001c 00C0      		rjmp .L8
 189               	.LVL20:
 190               	.L5:
 191               	/* epilogue start */
  41:quantum/process_keycode/process_tap_dance.c **** 
 192               		.loc 1 41 1 view .LVU42
 193 001e 0895      		ret
 194               		.cfi_endproc
 195               	.LFE18:
 197               		.section	.text.qk_tap_dance_pair_reset,"ax",@progbits
 198               	.global	qk_tap_dance_pair_reset
 200               	qk_tap_dance_pair_reset:
 201               	.LVL21:
 202               	.LFB19:
  43:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 203               		.loc 1 43 77 is_stmt 1 view -0
 204               		.cfi_startproc
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 207               	/* stack size = 0 */
 208               	.L__stack_usage = 0
  44:quantum/process_keycode/process_tap_dance.c **** 
 209               		.loc 1 44 3 view .LVU44
  46:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 210               		.loc 1 46 3 view .LVU45
  46:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 211               		.loc 1 46 12 is_stmt 0 view .LVU46
 212 0000 FC01      		movw r30,r24
 213 0002 8081      		ld r24,Z
 214               	.LVL22:
  46:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 215               		.loc 1 46 6 view .LVU47
 216 0004 8130      		cpi r24,lo8(1)
 217 0006 01F4      		brne .L10
  47:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 218               		.loc 1 47 5 is_stmt 1 view .LVU48
 219 0008 FB01      		movw r30,r22
 220               	.LVL23:
  47:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 221               		.loc 1 47 5 is_stmt 0 view .LVU49
 222 000a 8081      		ld r24,Z
 223 000c 9181      		ldd r25,Z+1
 224               	.L12:
  49:quantum/process_keycode/process_tap_dance.c ****   }
 225               		.loc 1 49 5 view .LVU50
 226 000e 0C94 0000 		jmp unregister_code16
 227               	.LVL24:
 228               	.L10:
  48:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
 229               		.loc 1 48 10 is_stmt 1 view .LVU51
  48:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
 230               		.loc 1 48 13 is_stmt 0 view .LVU52
 231 0012 8230      		cpi r24,lo8(2)
 232 0014 01F4      		brne .L9
  49:quantum/process_keycode/process_tap_dance.c ****   }
 233               		.loc 1 49 5 is_stmt 1 view .LVU53
 234 0016 FB01      		movw r30,r22
 235               	.LVL25:
  49:quantum/process_keycode/process_tap_dance.c ****   }
 236               		.loc 1 49 5 is_stmt 0 view .LVU54
 237 0018 8281      		ldd r24,Z+2
 238 001a 9381      		ldd r25,Z+3
 239 001c 00C0      		rjmp .L12
 240               	.LVL26:
 241               	.L9:
 242               	/* epilogue start */
  51:quantum/process_keycode/process_tap_dance.c **** 
 243               		.loc 1 51 1 view .LVU55
 244 001e 0895      		ret
 245               		.cfi_endproc
 246               	.LFE19:
 248               		.section	.text.qk_tap_dance_dual_role_on_each_tap,"ax",@progbits
 249               	.global	qk_tap_dance_dual_role_on_each_tap
 251               	qk_tap_dance_dual_role_on_each_tap:
 252               	.LVL27:
 253               	.LFB20:
  53:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 254               		.loc 1 53 88 is_stmt 1 view -0
 255               		.cfi_startproc
  53:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 256               		.loc 1 53 88 is_stmt 0 view .LVU57
 257 0000 CF93      		push r28
 258               	.LCFI4:
 259               		.cfi_def_cfa_offset 3
 260               		.cfi_offset 28, -2
 261 0002 DF93      		push r29
 262               	.LCFI5:
 263               		.cfi_def_cfa_offset 4
 264               		.cfi_offset 29, -3
 265               	/* prologue: function */
 266               	/* frame size = 0 */
 267               	/* stack size = 2 */
 268               	.L__stack_usage = 2
 269 0004 EC01      		movw r28,r24
  54:quantum/process_keycode/process_tap_dance.c **** 
 270               		.loc 1 54 3 is_stmt 1 view .LVU58
 271               	.LVL28:
  56:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 272               		.loc 1 56 3 view .LVU59
  56:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 273               		.loc 1 56 6 is_stmt 0 view .LVU60
 274 0006 8881      		ld r24,Y
 275               	.LVL29:
  56:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 276               		.loc 1 56 6 view .LVU61
 277 0008 8230      		cpi r24,lo8(2)
 278 000a 01F4      		brne .L13
  57:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
 279               		.loc 1 57 5 is_stmt 1 view .LVU62
 280 000c FB01      		movw r30,r22
 281 000e 8281      		ldd r24,Z+2
 282 0010 0E94 0000 		call layer_move
 283               	.LVL30:
  58:quantum/process_keycode/process_tap_dance.c ****   }
 284               		.loc 1 58 5 view .LVU63
  58:quantum/process_keycode/process_tap_dance.c ****   }
 285               		.loc 1 58 21 is_stmt 0 view .LVU64
 286 0014 81E0      		ldi r24,lo8(1)
 287 0016 8987      		std Y+9,r24
 288               	.L13:
 289               	/* epilogue start */
  60:quantum/process_keycode/process_tap_dance.c **** 
 290               		.loc 1 60 1 view .LVU65
 291 0018 DF91      		pop r29
 292 001a CF91      		pop r28
 293               	.LVL31:
  60:quantum/process_keycode/process_tap_dance.c **** 
 294               		.loc 1 60 1 view .LVU66
 295 001c 0895      		ret
 296               		.cfi_endproc
 297               	.LFE20:
 299               		.section	.text.qk_tap_dance_dual_role_finished,"ax",@progbits
 300               	.global	qk_tap_dance_dual_role_finished
 302               	qk_tap_dance_dual_role_finished:
 303               	.LVL32:
 304               	.LFB21:
  62:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 305               		.loc 1 62 85 is_stmt 1 view -0
 306               		.cfi_startproc
 307               	/* prologue: function */
 308               	/* frame size = 0 */
 309               	/* stack size = 0 */
 310               	.L__stack_usage = 0
  63:quantum/process_keycode/process_tap_dance.c **** 
 311               		.loc 1 63 3 view .LVU68
  65:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 312               		.loc 1 65 3 view .LVU69
  65:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 313               		.loc 1 65 12 is_stmt 0 view .LVU70
 314 0000 FC01      		movw r30,r24
 315 0002 8081      		ld r24,Z
 316               	.LVL33:
  65:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 317               		.loc 1 65 6 view .LVU71
 318 0004 8130      		cpi r24,lo8(1)
 319 0006 01F4      		brne .L16
  66:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 320               		.loc 1 66 5 is_stmt 1 view .LVU72
 321 0008 FB01      		movw r30,r22
 322               	.LVL34:
  66:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 323               		.loc 1 66 5 is_stmt 0 view .LVU73
 324 000a 8081      		ld r24,Z
 325 000c 9181      		ldd r25,Z+1
 326 000e 0C94 0000 		jmp register_code16
 327               	.LVL35:
 328               	.L16:
  67:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 329               		.loc 1 67 10 is_stmt 1 view .LVU74
  67:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 330               		.loc 1 67 13 is_stmt 0 view .LVU75
 331 0012 8230      		cpi r24,lo8(2)
 332 0014 01F4      		brne .L15
  68:quantum/process_keycode/process_tap_dance.c ****   }
 333               		.loc 1 68 5 is_stmt 1 view .LVU76
 334 0016 FB01      		movw r30,r22
 335               	.LVL36:
  68:quantum/process_keycode/process_tap_dance.c ****   }
 336               		.loc 1 68 5 is_stmt 0 view .LVU77
 337 0018 8281      		ldd r24,Z+2
 338 001a 0C94 0000 		jmp layer_move
 339               	.LVL37:
 340               	.L15:
 341               	/* epilogue start */
  70:quantum/process_keycode/process_tap_dance.c **** 
 342               		.loc 1 70 1 view .LVU78
 343 001e 0895      		ret
 344               		.cfi_endproc
 345               	.LFE21:
 347               		.section	.text.qk_tap_dance_dual_role_reset,"ax",@progbits
 348               	.global	qk_tap_dance_dual_role_reset
 350               	qk_tap_dance_dual_role_reset:
 351               	.LVL38:
 352               	.LFB22:
  72:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 353               		.loc 1 72 82 is_stmt 1 view -0
 354               		.cfi_startproc
 355               	/* prologue: function */
 356               	/* frame size = 0 */
 357               	/* stack size = 0 */
 358               	.L__stack_usage = 0
  73:quantum/process_keycode/process_tap_dance.c **** 
 359               		.loc 1 73 3 view .LVU80
  75:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 360               		.loc 1 75 3 view .LVU81
  75:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 361               		.loc 1 75 6 is_stmt 0 view .LVU82
 362 0000 FC01      		movw r30,r24
 363 0002 8081      		ld r24,Z
 364               	.LVL39:
  75:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 365               		.loc 1 75 6 view .LVU83
 366 0004 8130      		cpi r24,lo8(1)
 367 0006 01F4      		brne .L18
  76:quantum/process_keycode/process_tap_dance.c ****   }
 368               		.loc 1 76 5 is_stmt 1 view .LVU84
 369 0008 FB01      		movw r30,r22
 370               	.LVL40:
  76:quantum/process_keycode/process_tap_dance.c ****   }
 371               		.loc 1 76 5 is_stmt 0 view .LVU85
 372 000a 8081      		ld r24,Z
 373 000c 9181      		ldd r25,Z+1
 374 000e 0C94 0000 		jmp unregister_code16
 375               	.LVL41:
 376               	.L18:
 377               	/* epilogue start */
  78:quantum/process_keycode/process_tap_dance.c **** 
 378               		.loc 1 78 1 view .LVU86
 379 0012 0895      		ret
 380               		.cfi_endproc
 381               	.LFE22:
 383               		.section	.text.reset_tap_dance,"ax",@progbits
 384               	.global	reset_tap_dance
 386               	reset_tap_dance:
 387               	.LVL42:
 388               	.LFB30:
 104:quantum/process_keycode/process_tap_dance.c **** 
 105:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_reset (qk_tap_dance_action_t *action)
 106:quantum/process_keycode/process_tap_dance.c **** {
 107:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_reset);
 108:quantum/process_keycode/process_tap_dance.c ****   del_mods(action->state.oneshot_mods);
 109:quantum/process_keycode/process_tap_dance.c ****   del_weak_mods(action->state.weak_mods);
 110:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
 111:quantum/process_keycode/process_tap_dance.c **** }
 112:quantum/process_keycode/process_tap_dance.c **** 
 113:quantum/process_keycode/process_tap_dance.c **** void preprocess_tap_dance(uint16_t keycode, keyrecord_t *record) {
 114:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 115:quantum/process_keycode/process_tap_dance.c **** 
 116:quantum/process_keycode/process_tap_dance.c ****   if (!record->event.pressed)
 117:quantum/process_keycode/process_tap_dance.c ****     return;
 118:quantum/process_keycode/process_tap_dance.c **** 
 119:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 120:quantum/process_keycode/process_tap_dance.c ****     return;
 121:quantum/process_keycode/process_tap_dance.c **** 
 122:quantum/process_keycode/process_tap_dance.c ****   for (int i = 0; i <= highest_td; i++) {
 123:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 124:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count) {
 125:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 126:quantum/process_keycode/process_tap_dance.c ****         continue;
 127:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupted = true;
 128:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 129:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 130:quantum/process_keycode/process_tap_dance.c ****     }
 131:quantum/process_keycode/process_tap_dance.c ****   }
 132:quantum/process_keycode/process_tap_dance.c **** }
 133:quantum/process_keycode/process_tap_dance.c **** 
 134:quantum/process_keycode/process_tap_dance.c **** bool process_tap_dance(uint16_t keycode, keyrecord_t *record) {
 135:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 136:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 137:quantum/process_keycode/process_tap_dance.c **** 
 138:quantum/process_keycode/process_tap_dance.c ****   switch(keycode) {
 139:quantum/process_keycode/process_tap_dance.c ****   case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 140:quantum/process_keycode/process_tap_dance.c ****     if ((int16_t)idx > highest_td)
 141:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 142:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 143:quantum/process_keycode/process_tap_dance.c **** 
 144:quantum/process_keycode/process_tap_dance.c ****     action->state.pressed = record->event.pressed;
 145:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 146:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 147:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 151:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 152:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 153:quantum/process_keycode/process_tap_dance.c **** 
 154:quantum/process_keycode/process_tap_dance.c ****       last_td = keycode;
 155:quantum/process_keycode/process_tap_dance.c ****     } else {
 156:quantum/process_keycode/process_tap_dance.c ****       if (action->state.count && action->state.finished) {
 157:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 158:quantum/process_keycode/process_tap_dance.c ****       }
 159:quantum/process_keycode/process_tap_dance.c ****     }
 160:quantum/process_keycode/process_tap_dance.c **** 
 161:quantum/process_keycode/process_tap_dance.c ****     break;
 162:quantum/process_keycode/process_tap_dance.c ****   }
 163:quantum/process_keycode/process_tap_dance.c **** 
 164:quantum/process_keycode/process_tap_dance.c ****   return true;
 165:quantum/process_keycode/process_tap_dance.c **** }
 166:quantum/process_keycode/process_tap_dance.c **** 
 167:quantum/process_keycode/process_tap_dance.c **** 
 168:quantum/process_keycode/process_tap_dance.c **** 
 169:quantum/process_keycode/process_tap_dance.c **** void matrix_scan_tap_dance () {
 170:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 171:quantum/process_keycode/process_tap_dance.c ****     return;
 172:quantum/process_keycode/process_tap_dance.c ****   uint16_t tap_user_defined;
 173:quantum/process_keycode/process_tap_dance.c **** 
 174:quantum/process_keycode/process_tap_dance.c ****   for (uint8_t i = 0; i <= highest_td; i++) {
 175:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 176:quantum/process_keycode/process_tap_dance.c ****     if(action->custom_tapping_term > 0 ) {
 177:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 178:quantum/process_keycode/process_tap_dance.c ****     }
 179:quantum/process_keycode/process_tap_dance.c ****     else{
 180:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = TAPPING_TERM;
 181:quantum/process_keycode/process_tap_dance.c ****     }
 182:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count && timer_elapsed (action->state.timer) > tap_user_defined) {
 183:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 184:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 185:quantum/process_keycode/process_tap_dance.c ****     }
 186:quantum/process_keycode/process_tap_dance.c ****   }
 187:quantum/process_keycode/process_tap_dance.c **** }
 188:quantum/process_keycode/process_tap_dance.c **** 
 189:quantum/process_keycode/process_tap_dance.c **** void reset_tap_dance (qk_tap_dance_state_t *state) {
 389               		.loc 1 189 52 is_stmt 1 view -0
 390               		.cfi_startproc
 391               		.loc 1 189 52 is_stmt 0 view .LVU88
 392 0000 EF92      		push r14
 393               	.LCFI6:
 394               		.cfi_def_cfa_offset 3
 395               		.cfi_offset 14, -2
 396 0002 FF92      		push r15
 397               	.LCFI7:
 398               		.cfi_def_cfa_offset 4
 399               		.cfi_offset 15, -3
 400 0004 0F93      		push r16
 401               	.LCFI8:
 402               		.cfi_def_cfa_offset 5
 403               		.cfi_offset 16, -4
 404 0006 1F93      		push r17
 405               	.LCFI9:
 406               		.cfi_def_cfa_offset 6
 407               		.cfi_offset 17, -5
 408 0008 CF93      		push r28
 409               	.LCFI10:
 410               		.cfi_def_cfa_offset 7
 411               		.cfi_offset 28, -6
 412 000a DF93      		push r29
 413               	.LCFI11:
 414               		.cfi_def_cfa_offset 8
 415               		.cfi_offset 29, -7
 416               	/* prologue: function */
 417               	/* frame size = 0 */
 418               	/* stack size = 6 */
 419               	.L__stack_usage = 6
 420 000c EC01      		movw r28,r24
 190:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 421               		.loc 1 190 3 is_stmt 1 view .LVU89
 191:quantum/process_keycode/process_tap_dance.c **** 
 192:quantum/process_keycode/process_tap_dance.c ****   if (state->pressed)
 422               		.loc 1 192 3 view .LVU90
 423               		.loc 1 192 6 is_stmt 0 view .LVU91
 424 000e 8885      		ldd r24,Y+8
 425               	.LVL43:
 426               		.loc 1 192 6 view .LVU92
 427 0010 8111      		cpse r24,__zero_reg__
 428 0012 00C0      		rjmp .L20
 193:quantum/process_keycode/process_tap_dance.c ****     return;
 194:quantum/process_keycode/process_tap_dance.c **** 
 195:quantum/process_keycode/process_tap_dance.c ****   action = &tap_dance_actions[state->keycode - QK_TAP_DANCE];
 429               		.loc 1 195 3 is_stmt 1 view .LVU93
 430               		.loc 1 195 46 is_stmt 0 view .LVU94
 431 0014 EB80      		ldd r14,Y+3
 432 0016 FC80      		ldd r15,Y+4
 433 0018 87E5      		ldi r24,87
 434 001a F81A      		sub r15,r24
 435               	.LVL44:
 196:quantum/process_keycode/process_tap_dance.c **** 
 197:quantum/process_keycode/process_tap_dance.c ****   process_tap_dance_action_on_reset (action);
 436               		.loc 1 197 3 is_stmt 1 view .LVU95
 437               	.LBB12:
 438               	.LBI12:
 105:quantum/process_keycode/process_tap_dance.c **** {
 439               		.loc 1 105 20 view .LVU96
 440               	.LBB13:
 107:quantum/process_keycode/process_tap_dance.c ****   del_mods(action->state.oneshot_mods);
 441               		.loc 1 107 3 view .LVU97
 442 001c 24E1      		ldi r18,lo8(20)
 443 001e 2E9D      		mul r18,r14
 444 0020 C001      		movw r24,r0
 445 0022 2F9D      		mul r18,r15
 446 0024 900D      		add r25,r0
 447 0026 1124      		clr __zero_reg__
 448 0028 DC01      		movw r26,r24
 449 002a A050      		subi r26,lo8(-(tap_dance_actions))
 450 002c B040      		sbci r27,hi8(-(tap_dance_actions))
 451 002e 1496      		adiw r26,4
 452 0030 ED91      		ld r30,X+
 453 0032 FC91      		ld r31,X
 454 0034 1597      		sbiw r26,4+1
 455               	.LVL45:
 456               	.LBB14:
 457               	.LBI14:
  80:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
 458               		.loc 1 80 20 view .LVU98
 459               	.LBB15:
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 460               		.loc 1 84 3 view .LVU99
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 461               		.loc 1 84 6 is_stmt 0 view .LVU100
 462 0036 3097      		sbiw r30,0
 463 0038 01F0      		breq .L22
  85:quantum/process_keycode/process_tap_dance.c ****   }
 464               		.loc 1 85 5 is_stmt 1 view .LVU101
 465 003a 5296      		adiw r26,18
 466 003c 6D91      		ld r22,X+
 467 003e 7C91      		ld r23,X
 468 0040 8050      		subi r24,lo8(-(tap_dance_actions+6))
 469 0042 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 470 0044 0995      		icall
 471               	.LVL46:
 472               	.L22:
  85:quantum/process_keycode/process_tap_dance.c ****   }
 473               		.loc 1 85 5 is_stmt 0 view .LVU102
 474               	.LBE15:
 475               	.LBE14:
 108:quantum/process_keycode/process_tap_dance.c ****   del_weak_mods(action->state.weak_mods);
 476               		.loc 1 108 3 is_stmt 1 view .LVU103
 477 0046 84E1      		ldi r24,lo8(20)
 478 0048 8E9D      		mul r24,r14
 479 004a 8001      		movw r16,r0
 480 004c 8F9D      		mul r24,r15
 481 004e 100D      		add r17,r0
 482 0050 1124      		clr __zero_reg__
 483 0052 0050      		subi r16,lo8(-(tap_dance_actions))
 484 0054 1040      		sbci r17,hi8(-(tap_dance_actions))
 485 0056 F801      		movw r30,r16
 486 0058 8781      		ldd r24,Z+7
 487 005a 0E94 0000 		call del_mods
 488               	.LVL47:
 109:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
 489               		.loc 1 109 3 view .LVU104
 490 005e F801      		movw r30,r16
 491 0060 8085      		ldd r24,Z+8
 492 0062 0E94 0000 		call del_weak_mods
 493               	.LVL48:
 110:quantum/process_keycode/process_tap_dance.c **** }
 494               		.loc 1 110 3 view .LVU105
 495 0066 0E94 0000 		call send_keyboard_report
 496               	.LVL49:
 110:quantum/process_keycode/process_tap_dance.c **** }
 497               		.loc 1 110 3 is_stmt 0 view .LVU106
 498               	.LBE13:
 499               	.LBE12:
 198:quantum/process_keycode/process_tap_dance.c **** 
 199:quantum/process_keycode/process_tap_dance.c ****   state->count = 0;
 500               		.loc 1 199 3 is_stmt 1 view .LVU107
 501               		.loc 1 199 16 is_stmt 0 view .LVU108
 502 006a 1882      		st Y,__zero_reg__
 200:quantum/process_keycode/process_tap_dance.c ****   state->interrupted = false;
 503               		.loc 1 200 3 is_stmt 1 view .LVU109
 504               		.loc 1 200 22 is_stmt 0 view .LVU110
 505 006c 1F82      		std Y+7,__zero_reg__
 201:quantum/process_keycode/process_tap_dance.c ****   state->finished = false;
 506               		.loc 1 201 3 is_stmt 1 view .LVU111
 507               		.loc 1 201 19 is_stmt 0 view .LVU112
 508 006e 1986      		std Y+9,__zero_reg__
 202:quantum/process_keycode/process_tap_dance.c ****   last_td = 0;
 509               		.loc 1 202 3 is_stmt 1 view .LVU113
 510               		.loc 1 202 11 is_stmt 0 view .LVU114
 511 0070 1092 0000 		sts last_td+1,__zero_reg__
 512 0074 1092 0000 		sts last_td,__zero_reg__
 513               	.LVL50:
 514               	.L20:
 515               	/* epilogue start */
 203:quantum/process_keycode/process_tap_dance.c **** }
 516               		.loc 1 203 1 view .LVU115
 517 0078 DF91      		pop r29
 518 007a CF91      		pop r28
 519               	.LVL51:
 520               		.loc 1 203 1 view .LVU116
 521 007c 1F91      		pop r17
 522 007e 0F91      		pop r16
 523 0080 FF90      		pop r15
 524 0082 EF90      		pop r14
 525 0084 0895      		ret
 526               		.cfi_endproc
 527               	.LFE30:
 529               		.section	.text.preprocess_tap_dance,"ax",@progbits
 530               	.global	preprocess_tap_dance
 532               	preprocess_tap_dance:
 533               	.LVL52:
 534               	.LFB27:
 113:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 535               		.loc 1 113 66 is_stmt 1 view -0
 536               		.cfi_startproc
 113:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 537               		.loc 1 113 66 is_stmt 0 view .LVU118
 538 0000 DF92      		push r13
 539               	.LCFI12:
 540               		.cfi_def_cfa_offset 3
 541               		.cfi_offset 13, -2
 542 0002 EF92      		push r14
 543               	.LCFI13:
 544               		.cfi_def_cfa_offset 4
 545               		.cfi_offset 14, -3
 546 0004 FF92      		push r15
 547               	.LCFI14:
 548               		.cfi_def_cfa_offset 5
 549               		.cfi_offset 15, -4
 550 0006 0F93      		push r16
 551               	.LCFI15:
 552               		.cfi_def_cfa_offset 6
 553               		.cfi_offset 16, -5
 554 0008 1F93      		push r17
 555               	.LCFI16:
 556               		.cfi_def_cfa_offset 7
 557               		.cfi_offset 17, -6
 558 000a CF93      		push r28
 559               	.LCFI17:
 560               		.cfi_def_cfa_offset 8
 561               		.cfi_offset 28, -7
 562 000c DF93      		push r29
 563               	.LCFI18:
 564               		.cfi_def_cfa_offset 9
 565               		.cfi_offset 29, -8
 566               	/* prologue: function */
 567               	/* frame size = 0 */
 568               	/* stack size = 7 */
 569               	.L__stack_usage = 7
 570 000e 7C01      		movw r14,r24
 114:quantum/process_keycode/process_tap_dance.c **** 
 571               		.loc 1 114 3 is_stmt 1 view .LVU119
 116:quantum/process_keycode/process_tap_dance.c ****     return;
 572               		.loc 1 116 3 view .LVU120
 116:quantum/process_keycode/process_tap_dance.c ****     return;
 573               		.loc 1 116 6 is_stmt 0 view .LVU121
 574 0010 FB01      		movw r30,r22
 575 0012 8281      		ldd r24,Z+2
 576               	.LVL53:
 116:quantum/process_keycode/process_tap_dance.c ****     return;
 577               		.loc 1 116 6 view .LVU122
 578 0014 8823      		tst r24
 579 0016 01F0      		breq .L26
 119:quantum/process_keycode/process_tap_dance.c ****     return;
 580               		.loc 1 119 3 is_stmt 1 view .LVU123
 119:quantum/process_keycode/process_tap_dance.c ****     return;
 581               		.loc 1 119 6 is_stmt 0 view .LVU124
 582 0018 8091 0000 		lds r24,highest_td
 583 001c 8F3F      		cpi r24,lo8(-1)
 584 001e 01F0      		breq .L26
 585 0020 C0E0      		ldi r28,lo8(tap_dance_actions)
 586 0022 D0E0      		ldi r29,hi8(tap_dance_actions)
 587               	.LBB19:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 588               		.loc 1 122 12 view .LVU125
 589 0024 10E0      		ldi r17,0
 590 0026 00E0      		ldi r16,0
 127:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 591               		.loc 1 127 33 view .LVU126
 592 0028 DD24      		clr r13
 593 002a D394      		inc r13
 594               	.LVL54:
 595               	.L29:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 596               		.loc 1 122 21 discriminator 1 view .LVU127
 597 002c 8091 0000 		lds r24,highest_td
 598 0030 082E      		mov __tmp_reg__,r24
 599 0032 000C      		lsl r0
 600 0034 990B      		sbc r25,r25
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 601               		.loc 1 122 3 discriminator 1 view .LVU128
 602 0036 8017      		cp r24,r16
 603 0038 9107      		cpc r25,r17
 604 003a 04F4      		brge .L33
 605               	.LVL55:
 606               	.L26:
 607               	/* epilogue start */
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 608               		.loc 1 122 3 discriminator 1 view .LVU129
 609               	.LBE19:
 132:quantum/process_keycode/process_tap_dance.c **** 
 610               		.loc 1 132 1 view .LVU130
 611 003c DF91      		pop r29
 612 003e CF91      		pop r28
 613 0040 1F91      		pop r17
 614 0042 0F91      		pop r16
 615 0044 FF90      		pop r15
 616 0046 EF90      		pop r14
 617               	.LVL56:
 132:quantum/process_keycode/process_tap_dance.c **** 
 618               		.loc 1 132 1 view .LVU131
 619 0048 DF90      		pop r13
 620 004a 0895      		ret
 621               	.LVL57:
 622               	.L33:
 623               	.LBB22:
 123:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count) {
 624               		.loc 1 123 5 is_stmt 1 view .LVU132
 124:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 625               		.loc 1 124 5 view .LVU133
 124:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 626               		.loc 1 124 8 is_stmt 0 view .LVU134
 627 004c 8E81      		ldd r24,Y+6
 628 004e 8823      		tst r24
 629 0050 01F0      		breq .L30
 125:quantum/process_keycode/process_tap_dance.c ****         continue;
 630               		.loc 1 125 7 is_stmt 1 view .LVU135
 125:quantum/process_keycode/process_tap_dance.c ****         continue;
 631               		.loc 1 125 10 is_stmt 0 view .LVU136
 632 0052 8985      		ldd r24,Y+9
 633 0054 9A85      		ldd r25,Y+10
 634 0056 8E15      		cp r24,r14
 635 0058 9F05      		cpc r25,r15
 636 005a 01F4      		brne .L31
 125:quantum/process_keycode/process_tap_dance.c ****         continue;
 637               		.loc 1 125 44 discriminator 1 view .LVU137
 638 005c 8091 0000 		lds r24,last_td
 639 0060 9091 0000 		lds r25,last_td+1
 640 0064 8E15      		cp r24,r14
 641 0066 9F05      		cpc r25,r15
 642 0068 01F0      		breq .L30
 643               	.L31:
 127:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 644               		.loc 1 127 7 is_stmt 1 view .LVU138
 127:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 645               		.loc 1 127 33 is_stmt 0 view .LVU139
 646 006a DD86      		std Y+13,r13
 128:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 647               		.loc 1 128 7 is_stmt 1 view .LVU140
 648               	.LVL58:
 649               	.LBB20:
 650               	.LBI20:
  94:quantum/process_keycode/process_tap_dance.c **** {
 651               		.loc 1 94 20 view .LVU141
 652               	.LBB21:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 653               		.loc 1 96 3 view .LVU142
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 654               		.loc 1 96 6 is_stmt 0 view .LVU143
 655 006c 8F85      		ldd r24,Y+15
 656 006e 8111      		cpse r24,__zero_reg__
 657 0070 00C0      		rjmp .L32
 658 0072 CE01      		movw r24,r28
 659 0074 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 660               	.LVL59:
 661               	.L32:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 662               		.loc 1 96 6 view .LVU144
 663               	.LBE21:
 664               	.LBE20:
 129:quantum/process_keycode/process_tap_dance.c ****     }
 665               		.loc 1 129 7 is_stmt 1 view .LVU145
 666 0078 CE01      		movw r24,r28
 667 007a 0696      		adiw r24,6
 668 007c 0E94 0000 		call reset_tap_dance
 669               	.LVL60:
 670               	.L30:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 671               		.loc 1 122 37 is_stmt 0 discriminator 2 view .LVU146
 672 0080 0F5F      		subi r16,-1
 673 0082 1F4F      		sbci r17,-1
 674               	.LVL61:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 675               		.loc 1 122 37 discriminator 2 view .LVU147
 676 0084 6496      		adiw r28,20
 677 0086 00C0      		rjmp .L29
 678               	.LBE22:
 679               		.cfi_endproc
 680               	.LFE27:
 682               		.section	.text.process_tap_dance,"ax",@progbits
 683               	.global	process_tap_dance
 685               	process_tap_dance:
 686               	.LVL62:
 687               	.LFB28:
 134:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 688               		.loc 1 134 63 is_stmt 1 view -0
 689               		.cfi_startproc
 134:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 690               		.loc 1 134 63 is_stmt 0 view .LVU149
 691 0000 EF92      		push r14
 692               	.LCFI19:
 693               		.cfi_def_cfa_offset 3
 694               		.cfi_offset 14, -2
 695 0002 FF92      		push r15
 696               	.LCFI20:
 697               		.cfi_def_cfa_offset 4
 698               		.cfi_offset 15, -3
 699 0004 0F93      		push r16
 700               	.LCFI21:
 701               		.cfi_def_cfa_offset 5
 702               		.cfi_offset 16, -4
 703 0006 1F93      		push r17
 704               	.LCFI22:
 705               		.cfi_def_cfa_offset 6
 706               		.cfi_offset 17, -5
 707 0008 CF93      		push r28
 708               	.LCFI23:
 709               		.cfi_def_cfa_offset 7
 710               		.cfi_offset 28, -6
 711 000a DF93      		push r29
 712               	.LCFI24:
 713               		.cfi_def_cfa_offset 8
 714               		.cfi_offset 29, -7
 715               	/* prologue: function */
 716               	/* frame size = 0 */
 717               	/* stack size = 6 */
 718               	.L__stack_usage = 6
 719 000c 7C01      		movw r14,r24
 135:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 720               		.loc 1 135 3 is_stmt 1 view .LVU150
 135:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 721               		.loc 1 135 12 is_stmt 0 view .LVU151
 722 000e 9755      		subi r25,87
 723               	.LVL63:
 136:quantum/process_keycode/process_tap_dance.c **** 
 724               		.loc 1 136 3 is_stmt 1 view .LVU152
 138:quantum/process_keycode/process_tap_dance.c ****   case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 725               		.loc 1 138 3 view .LVU153
 726 0010 8F3F      		cpi r24,-1
 727 0012 9105      		cpc r25,__zero_reg__
 728 0014 01F0      		breq .+2
 729 0016 00F4      		brsh .L42
 140:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 730               		.loc 1 140 5 view .LVU154
 140:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 731               		.loc 1 140 22 is_stmt 0 view .LVU155
 732 0018 2091 0000 		lds r18,highest_td
 733 001c 022E      		mov __tmp_reg__,r18
 734 001e 000C      		lsl r0
 735 0020 330B      		sbc r19,r19
 140:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 736               		.loc 1 140 8 view .LVU156
 737 0022 2817      		cp r18,r24
 738 0024 3907      		cpc r19,r25
 739 0026 04F4      		brge .L43
 141:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 740               		.loc 1 141 7 is_stmt 1 view .LVU157
 141:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 741               		.loc 1 141 18 is_stmt 0 view .LVU158
 742 0028 8093 0000 		sts highest_td,r24
 743               	.L43:
 142:quantum/process_keycode/process_tap_dance.c **** 
 744               		.loc 1 142 5 is_stmt 1 view .LVU159
 745               	.LVL64:
 144:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 746               		.loc 1 144 5 view .LVU160
 144:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 747               		.loc 1 144 42 is_stmt 0 view .LVU161
 748 002c FB01      		movw r30,r22
 749 002e 2281      		ldd r18,Z+2
 144:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 750               		.loc 1 144 27 view .LVU162
 751 0030 34E1      		ldi r19,lo8(20)
 752 0032 389F      		mul r19,r24
 753 0034 8001      		movw r16,r0
 754 0036 399F      		mul r19,r25
 755 0038 100D      		add r17,r0
 756 003a 1124      		clr __zero_reg__
 757 003c E801      		movw r28,r16
 758 003e C050      		subi r28,lo8(-(tap_dance_actions))
 759 0040 D040      		sbci r29,hi8(-(tap_dance_actions))
 760 0042 2E87      		std Y+14,r18
 145:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 761               		.loc 1 145 5 is_stmt 1 view .LVU163
 145:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 762               		.loc 1 145 8 is_stmt 0 view .LVU164
 763 0044 9281      		ldd r25,Z+2
 764 0046 8E81      		ldd r24,Y+6
 765               	.LVL65:
 145:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 766               		.loc 1 145 8 view .LVU165
 767 0048 9923      		tst r25
 768 004a 01F0      		breq .L44
 146:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 769               		.loc 1 146 7 is_stmt 1 view .LVU166
 146:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 770               		.loc 1 146 29 is_stmt 0 view .LVU167
 771 004c FA86      		std Y+10,r15
 772 004e E986      		std Y+9,r14
 147:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 773               		.loc 1 147 7 is_stmt 1 view .LVU168
 147:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 774               		.loc 1 147 26 is_stmt 0 view .LVU169
 775 0050 8F5F      		subi r24,lo8(-(1))
 776 0052 8E83      		std Y+6,r24
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 777               		.loc 1 148 7 is_stmt 1 view .LVU170
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 778               		.loc 1 148 29 is_stmt 0 view .LVU171
 779 0054 0E94 0000 		call timer_read
 780               	.LVL66:
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 781               		.loc 1 148 27 view .LVU172
 782 0058 9C87      		std Y+12,r25
 783 005a 8B87      		std Y+11,r24
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 784               		.loc 1 149 7 is_stmt 1 view .LVU173
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 785               		.loc 1 149 36 is_stmt 0 view .LVU174
 786 005c 0E94 0000 		call get_oneshot_mods
 787               	.LVL67:
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 788               		.loc 1 149 34 view .LVU175
 789 0060 8F83      		std Y+7,r24
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 790               		.loc 1 150 7 is_stmt 1 view .LVU176
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 791               		.loc 1 150 33 is_stmt 0 view .LVU177
 792 0062 0E94 0000 		call get_mods
 793               	.LVL68:
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 794               		.loc 1 150 31 view .LVU178
 795 0066 8887      		std Y+8,r24
 151:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 796               		.loc 1 151 7 is_stmt 1 view .LVU179
 151:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 797               		.loc 1 151 34 is_stmt 0 view .LVU180
 798 0068 0E94 0000 		call get_weak_mods
 799               	.LVL69:
 151:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 800               		.loc 1 151 31 view .LVU181
 801 006c 9885      		ldd r25,Y+8
 802 006e 892B      		or r24,r25
 803 0070 8887      		std Y+8,r24
 152:quantum/process_keycode/process_tap_dance.c **** 
 804               		.loc 1 152 7 is_stmt 1 view .LVU182
 805               	.LVL70:
 806               	.LBB27:
 807               	.LBI27:
  89:quantum/process_keycode/process_tap_dance.c **** {
 808               		.loc 1 89 20 view .LVU183
 809               	.LBB28:
  91:quantum/process_keycode/process_tap_dance.c **** }
 810               		.loc 1 91 3 view .LVU184
 811 0072 E881      		ld r30,Y
 812 0074 F981      		ldd r31,Y+1
 813               	.LVL71:
 814               	.LBB29:
 815               	.LBI29:
  80:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
 816               		.loc 1 80 20 view .LVU185
 817               	.LBB30:
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 818               		.loc 1 84 3 view .LVU186
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 819               		.loc 1 84 6 is_stmt 0 view .LVU187
 820 0076 3097      		sbiw r30,0
 821 0078 01F0      		breq .L45
  85:quantum/process_keycode/process_tap_dance.c ****   }
 822               		.loc 1 85 5 is_stmt 1 view .LVU188
 823 007a 6A89      		ldd r22,Y+18
 824 007c 7B89      		ldd r23,Y+19
 825 007e C801      		movw r24,r16
 826 0080 8050      		subi r24,lo8(-(tap_dance_actions+6))
 827 0082 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 828 0084 0995      		icall
 829               	.LVL72:
 830               	.L45:
  85:quantum/process_keycode/process_tap_dance.c ****   }
 831               		.loc 1 85 5 is_stmt 0 view .LVU189
 832               	.LBE30:
 833               	.LBE29:
 834               	.LBE28:
 835               	.LBE27:
 154:quantum/process_keycode/process_tap_dance.c ****     } else {
 836               		.loc 1 154 7 is_stmt 1 view .LVU190
 154:quantum/process_keycode/process_tap_dance.c ****     } else {
 837               		.loc 1 154 15 is_stmt 0 view .LVU191
 838 0086 F092 0000 		sts last_td+1,r15
 839 008a E092 0000 		sts last_td,r14
 840               	.LVL73:
 841               	.L42:
 164:quantum/process_keycode/process_tap_dance.c **** }
 842               		.loc 1 164 3 is_stmt 1 view .LVU192
 165:quantum/process_keycode/process_tap_dance.c **** 
 843               		.loc 1 165 1 is_stmt 0 view .LVU193
 844 008e 81E0      		ldi r24,lo8(1)
 845               	/* epilogue start */
 846 0090 DF91      		pop r29
 847 0092 CF91      		pop r28
 848 0094 1F91      		pop r17
 849 0096 0F91      		pop r16
 850 0098 FF90      		pop r15
 851 009a EF90      		pop r14
 852               	.LVL74:
 165:quantum/process_keycode/process_tap_dance.c **** 
 853               		.loc 1 165 1 view .LVU194
 854 009c 0895      		ret
 855               	.LVL75:
 856               	.L44:
 156:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 857               		.loc 1 156 7 is_stmt 1 view .LVU195
 156:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 858               		.loc 1 156 10 is_stmt 0 view .LVU196
 859 009e 8823      		tst r24
 860 00a0 01F0      		breq .L42
 156:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 861               		.loc 1 156 31 discriminator 1 view .LVU197
 862 00a2 8F85      		ldd r24,Y+15
 863 00a4 8823      		tst r24
 864 00a6 01F0      		breq .L42
 157:quantum/process_keycode/process_tap_dance.c ****       }
 865               		.loc 1 157 9 is_stmt 1 view .LVU198
 866 00a8 C801      		movw r24,r16
 867 00aa 8050      		subi r24,lo8(-(tap_dance_actions+6))
 868 00ac 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 869 00ae 0E94 0000 		call reset_tap_dance
 870               	.LVL76:
 157:quantum/process_keycode/process_tap_dance.c ****       }
 871               		.loc 1 157 9 is_stmt 0 view .LVU199
 872 00b2 00C0      		rjmp .L42
 873               		.cfi_endproc
 874               	.LFE28:
 876               		.section	.text.matrix_scan_tap_dance,"ax",@progbits
 877               	.global	matrix_scan_tap_dance
 879               	matrix_scan_tap_dance:
 880               	.LFB29:
 169:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 881               		.loc 1 169 31 is_stmt 1 view -0
 882               		.cfi_startproc
 883 0000 EF92      		push r14
 884               	.LCFI25:
 885               		.cfi_def_cfa_offset 3
 886               		.cfi_offset 14, -2
 887 0002 FF92      		push r15
 888               	.LCFI26:
 889               		.cfi_def_cfa_offset 4
 890               		.cfi_offset 15, -3
 891 0004 0F93      		push r16
 892               	.LCFI27:
 893               		.cfi_def_cfa_offset 5
 894               		.cfi_offset 16, -4
 895 0006 1F93      		push r17
 896               	.LCFI28:
 897               		.cfi_def_cfa_offset 6
 898               		.cfi_offset 17, -5
 899 0008 CF93      		push r28
 900               	.LCFI29:
 901               		.cfi_def_cfa_offset 7
 902               		.cfi_offset 28, -6
 903 000a DF93      		push r29
 904               	.LCFI30:
 905               		.cfi_def_cfa_offset 8
 906               		.cfi_offset 29, -7
 907               	/* prologue: function */
 908               	/* frame size = 0 */
 909               	/* stack size = 6 */
 910               	.L__stack_usage = 6
 170:quantum/process_keycode/process_tap_dance.c ****     return;
 911               		.loc 1 170 3 view .LVU201
 170:quantum/process_keycode/process_tap_dance.c ****     return;
 912               		.loc 1 170 6 is_stmt 0 view .LVU202
 913 000c 8091 0000 		lds r24,highest_td
 914               	.LBB35:
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 915               		.loc 1 174 16 view .LVU203
 916 0010 10E0      		ldi r17,0
 917               	.LBB36:
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 918               		.loc 1 176 14 view .LVU204
 919 0012 04E1      		ldi r16,lo8(20)
 920               	.LBE36:
 921               	.LBE35:
 170:quantum/process_keycode/process_tap_dance.c ****     return;
 922               		.loc 1 170 6 view .LVU205
 923 0014 8F3F      		cpi r24,lo8(-1)
 924 0016 01F4      		brne .L57
 925               	.L56:
 926               	/* epilogue start */
 187:quantum/process_keycode/process_tap_dance.c **** 
 927               		.loc 1 187 1 view .LVU206
 928 0018 DF91      		pop r29
 929 001a CF91      		pop r28
 930 001c 1F91      		pop r17
 931 001e 0F91      		pop r16
 932 0020 FF90      		pop r15
 933 0022 EF90      		pop r14
 934 0024 0895      		ret
 935               	.LVL77:
 936               	.L63:
 937               	.LBB40:
 938               	.LBB39:
 175:quantum/process_keycode/process_tap_dance.c ****     if(action->custom_tapping_term > 0 ) {
 939               		.loc 1 175 5 is_stmt 1 view .LVU207
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 940               		.loc 1 176 5 view .LVU208
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 941               		.loc 1 176 14 is_stmt 0 view .LVU209
 942 0026 029F      		mul r16,r18
 943 0028 F001      		movw r30,r0
 944 002a 039F      		mul r16,r19
 945 002c F00D      		add r31,r0
 946 002e 1124      		clr __zero_reg__
 947 0030 E050      		subi r30,lo8(-(tap_dance_actions))
 948 0032 F040      		sbci r31,hi8(-(tap_dance_actions))
 949 0034 E088      		ldd r14,Z+16
 950 0036 F188      		ldd r15,Z+17
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 951               		.loc 1 176 7 view .LVU210
 952 0038 E114      		cp r14,__zero_reg__
 953 003a F104      		cpc r15,__zero_reg__
 954 003c 01F4      		brne .L58
 180:quantum/process_keycode/process_tap_dance.c ****     }
 955               		.loc 1 180 24 view .LVU211
 956 003e 86E9      		ldi r24,lo8(-106)
 957 0040 E82E      		mov r14,r24
 958 0042 F12C      		mov r15,__zero_reg__
 959               	.L58:
 960               	.LVL78:
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 961               		.loc 1 182 5 is_stmt 1 view .LVU212
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 962               		.loc 1 182 22 is_stmt 0 view .LVU213
 963 0044 029F      		mul r16,r18
 964 0046 E001      		movw r28,r0
 965 0048 039F      		mul r16,r19
 966 004a D00D      		add r29,r0
 967 004c 1124      		clr __zero_reg__
 968 004e C050      		subi r28,lo8(-(tap_dance_actions))
 969 0050 D040      		sbci r29,hi8(-(tap_dance_actions))
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 970               		.loc 1 182 8 view .LVU214
 971 0052 8E81      		ldd r24,Y+6
 972 0054 8823      		tst r24
 973 0056 01F0      		breq .L60
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 974               		.loc 1 182 32 discriminator 1 view .LVU215
 975 0058 8B85      		ldd r24,Y+11
 976 005a 9C85      		ldd r25,Y+12
 977 005c 0E94 0000 		call timer_elapsed
 978               	.LVL79:
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 979               		.loc 1 182 29 discriminator 1 view .LVU216
 980 0060 E816      		cp r14,r24
 981 0062 F906      		cpc r15,r25
 982 0064 00F4      		brsh .L60
 983 0066 109F      		mul r17,r16
 984 0068 7001      		movw r14,r0
 985 006a 1124      		clr __zero_reg__
 986               	.LVL80:
 183:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 987               		.loc 1 183 7 is_stmt 1 view .LVU217
 988               	.LBB37:
 989               	.LBI37:
  94:quantum/process_keycode/process_tap_dance.c **** {
 990               		.loc 1 94 20 view .LVU218
 991               	.LBB38:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 992               		.loc 1 96 3 view .LVU219
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 993               		.loc 1 96 6 is_stmt 0 view .LVU220
 994 006c 8F85      		ldd r24,Y+15
 995 006e 8111      		cpse r24,__zero_reg__
 996 0070 00C0      		rjmp .L62
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 997               		.loc 1 96 6 view .LVU221
 998 0072 C701      		movw r24,r14
 999 0074 8050      		subi r24,lo8(-(tap_dance_actions))
 1000 0076 9040      		sbci r25,hi8(-(tap_dance_actions))
 1001 0078 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 1002               	.LVL81:
 1003               	.L62:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 1004               		.loc 1 96 6 view .LVU222
 1005               	.LBE38:
 1006               	.LBE37:
 184:quantum/process_keycode/process_tap_dance.c ****     }
 1007               		.loc 1 184 7 is_stmt 1 view .LVU223
 1008 007c C701      		movw r24,r14
 1009 007e 8050      		subi r24,lo8(-(tap_dance_actions+6))
 1010 0080 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 1011 0082 0E94 0000 		call reset_tap_dance
 1012               	.LVL82:
 1013               	.L60:
 184:quantum/process_keycode/process_tap_dance.c ****     }
 1014               		.loc 1 184 7 is_stmt 0 view .LVU224
 1015               	.LBE39:
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1016               		.loc 1 174 41 discriminator 2 view .LVU225
 1017 0086 1F5F      		subi r17,lo8(-(1))
 1018               	.LVL83:
 1019               	.L57:
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1020               		.loc 1 174 25 discriminator 1 view .LVU226
 1021 0088 212F      		mov r18,r17
 1022 008a 30E0      		ldi r19,0
 1023 008c 8091 0000 		lds r24,highest_td
 1024 0090 082E      		mov __tmp_reg__,r24
 1025 0092 000C      		lsl r0
 1026 0094 990B      		sbc r25,r25
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1027               		.loc 1 174 3 discriminator 1 view .LVU227
 1028 0096 8217      		cp r24,r18
 1029 0098 9307      		cpc r25,r19
 1030 009a 04F4      		brge .L63
 1031 009c 00C0      		rjmp .L56
 1032               	.LBE40:
 1033               		.cfi_endproc
 1034               	.LFE29:
 1036               		.section	.data.highest_td,"aw"
 1039               	highest_td:
 1040 0000 FF        		.byte	-1
 1041               		.section	.bss.last_td,"aw",@nobits
 1044               	last_td:
 1045 0000 0000      		.zero	2
 1046               		.text
 1047               	.Letext0:
 1048               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 1049               		.file 3 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
 1050               		.file 4 "./tmk_core/common/keyboard.h"
 1051               		.file 5 "./tmk_core/common/action.h"
 1052               		.file 6 "./tmk_core/common/report.h"
 1053               		.file 7 "./tmk_core/common/host.h"
 1054               		.file 8 "./tmk_core/common/debug.h"
 1055               		.file 9 "./quantum/keycode_config.h"
 1056               		.file 10 "./quantum/keymap.h"
 1057               		.file 11 "./quantum/rgblight_types.h"
 1058               		.file 12 "./quantum/rgblight.h"
 1059               		.file 13 "./tmk_core/common/action_layer.h"
 1060               		.file 14 "./tmk_core/common/timer.h"
 1061               		.file 15 "./tmk_core/common/action_util.h"
 1062               		.file 16 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdlib.h"
 1063               		.file 17 "./quantum/process_keycode/process_tap_dance.h"
 1064               		.file 18 "./quantum/quantum.h"
 1065               		.file 19 "./quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_tap_dance.c
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:12     .text.process_tap_dance_action_on_dance_finished.part.0:0000000000000000 process_tap_dance_action_on_dance_finished.part.0
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:97     .text.qk_tap_dance_pair_on_each_tap:0000000000000000 qk_tap_dance_pair_on_each_tap
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:149    .text.qk_tap_dance_pair_finished:0000000000000000 qk_tap_dance_pair_finished
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:200    .text.qk_tap_dance_pair_reset:0000000000000000 qk_tap_dance_pair_reset
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:251    .text.qk_tap_dance_dual_role_on_each_tap:0000000000000000 qk_tap_dance_dual_role_on_each_tap
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:302    .text.qk_tap_dance_dual_role_finished:0000000000000000 qk_tap_dance_dual_role_finished
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:350    .text.qk_tap_dance_dual_role_reset:0000000000000000 qk_tap_dance_dual_role_reset
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:386    .text.reset_tap_dance:0000000000000000 reset_tap_dance
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:1044   .bss.last_td:0000000000000000 last_td
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:532    .text.preprocess_tap_dance:0000000000000000 preprocess_tap_dance
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:1039   .data.highest_td:0000000000000000 highest_td
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:685    .text.process_tap_dance:0000000000000000 process_tap_dance
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//cc7c54wZ.s:879    .text.matrix_scan_tap_dance:0000000000000000 matrix_scan_tap_dance

UNDEFINED SYMBOLS
add_mods
add_weak_mods
send_keyboard_report
register_code16
unregister_code16
layer_move
tap_dance_actions
del_mods
del_weak_mods
timer_read
get_oneshot_mods
get_mods
get_weak_mods
timer_elapsed
__do_copy_data
__do_clear_bss
