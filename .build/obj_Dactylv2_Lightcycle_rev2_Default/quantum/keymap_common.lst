   1               		.file	"keymap_common.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.rgblight_toggle,"ax",@progbits
  11               		.weak	rgblight_toggle
  13               	rgblight_toggle:
  14               	.LFB11:
  15               		.file 1 "quantum/rgb.h"
   1:quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:quantum/rgb.h ****  *
   3:quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/rgb.h ****  * (at your option) any later version.
   7:quantum/rgb.h ****  *
   8:quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/rgb.h ****  * GNU General Public License for more details.
  12:quantum/rgb.h ****  *
  13:quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/rgb.h ****  */
  16:quantum/rgb.h **** 
  17:quantum/rgb.h **** #ifndef RGB_H
  18:quantum/rgb.h **** #define RGB_H
  19:quantum/rgb.h **** 
  20:quantum/rgb.h **** __attribute__((weak))
  21:quantum/rgb.h **** void rgblight_toggle(void) {};
  16               		.loc 1 21 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE11:
  26               		.section	.text.rgblight_step,"ax",@progbits
  27               		.weak	rgblight_step
  29               	rgblight_step:
  30               	.LFB12:
  22:quantum/rgb.h **** 
  23:quantum/rgb.h **** __attribute__((weak))
  24:quantum/rgb.h **** void rgblight_step(void) {};
  31               		.loc 1 24 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  37 0000 0895      		ret
  38               		.cfi_endproc
  39               	.LFE12:
  41               		.section	.text.rgblight_step_reverse,"ax",@progbits
  42               		.weak	rgblight_step_reverse
  44               	rgblight_step_reverse:
  45               	.LFB13:
  25:quantum/rgb.h **** 
  26:quantum/rgb.h **** __attribute__((weak))
  27:quantum/rgb.h **** void rgblight_step_reverse(void) {};
  46               		.loc 1 27 0
  47               		.cfi_startproc
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 0 */
  51               	.L__stack_usage = 0
  52 0000 0895      		ret
  53               		.cfi_endproc
  54               	.LFE13:
  56               		.section	.text.rgblight_increase_hue,"ax",@progbits
  57               		.weak	rgblight_increase_hue
  59               	rgblight_increase_hue:
  60               	.LFB14:
  28:quantum/rgb.h **** 
  29:quantum/rgb.h **** __attribute__((weak))
  30:quantum/rgb.h **** void rgblight_increase_hue(void) {};
  61               		.loc 1 30 0
  62               		.cfi_startproc
  63               	/* prologue: function */
  64               	/* frame size = 0 */
  65               	/* stack size = 0 */
  66               	.L__stack_usage = 0
  67 0000 0895      		ret
  68               		.cfi_endproc
  69               	.LFE14:
  71               		.section	.text.rgblight_decrease_hue,"ax",@progbits
  72               		.weak	rgblight_decrease_hue
  74               	rgblight_decrease_hue:
  75               	.LFB15:
  31:quantum/rgb.h **** 
  32:quantum/rgb.h **** __attribute__((weak))
  33:quantum/rgb.h **** void rgblight_decrease_hue(void) {};
  76               		.loc 1 33 0
  77               		.cfi_startproc
  78               	/* prologue: function */
  79               	/* frame size = 0 */
  80               	/* stack size = 0 */
  81               	.L__stack_usage = 0
  82 0000 0895      		ret
  83               		.cfi_endproc
  84               	.LFE15:
  86               		.section	.text.rgblight_increase_sat,"ax",@progbits
  87               		.weak	rgblight_increase_sat
  89               	rgblight_increase_sat:
  90               	.LFB16:
  34:quantum/rgb.h **** 
  35:quantum/rgb.h **** __attribute__((weak))
  36:quantum/rgb.h **** void rgblight_increase_sat(void) {};
  91               		.loc 1 36 0
  92               		.cfi_startproc
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  97 0000 0895      		ret
  98               		.cfi_endproc
  99               	.LFE16:
 101               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 102               		.weak	rgblight_decrease_sat
 104               	rgblight_decrease_sat:
 105               	.LFB17:
  37:quantum/rgb.h **** 
  38:quantum/rgb.h **** __attribute__((weak))
  39:quantum/rgb.h **** void rgblight_decrease_sat(void) {};
 106               		.loc 1 39 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 112 0000 0895      		ret
 113               		.cfi_endproc
 114               	.LFE17:
 116               		.section	.text.rgblight_increase_val,"ax",@progbits
 117               		.weak	rgblight_increase_val
 119               	rgblight_increase_val:
 120               	.LFB18:
  40:quantum/rgb.h **** 
  41:quantum/rgb.h **** __attribute__((weak))
  42:quantum/rgb.h **** void rgblight_increase_val(void) {};
 121               		.loc 1 42 0
 122               		.cfi_startproc
 123               	/* prologue: function */
 124               	/* frame size = 0 */
 125               	/* stack size = 0 */
 126               	.L__stack_usage = 0
 127 0000 0895      		ret
 128               		.cfi_endproc
 129               	.LFE18:
 131               		.section	.text.rgblight_decrease_val,"ax",@progbits
 132               		.weak	rgblight_decrease_val
 134               	rgblight_decrease_val:
 135               	.LFB19:
  43:quantum/rgb.h **** 
  44:quantum/rgb.h **** __attribute__((weak))
  45:quantum/rgb.h **** void rgblight_decrease_val(void) {};
 136               		.loc 1 45 0
 137               		.cfi_startproc
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 0 */
 141               	.L__stack_usage = 0
 142 0000 0895      		ret
 143               		.cfi_endproc
 144               	.LFE19:
 146               		.section	.text.rgblight_increase_speed,"ax",@progbits
 147               		.weak	rgblight_increase_speed
 149               	rgblight_increase_speed:
 150               	.LFB20:
  46:quantum/rgb.h **** 
  47:quantum/rgb.h **** __attribute__((weak))
  48:quantum/rgb.h **** void rgblight_increase_speed(void) {};
 151               		.loc 1 48 0
 152               		.cfi_startproc
 153               	/* prologue: function */
 154               	/* frame size = 0 */
 155               	/* stack size = 0 */
 156               	.L__stack_usage = 0
 157 0000 0895      		ret
 158               		.cfi_endproc
 159               	.LFE20:
 161               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 162               		.weak	rgblight_decrease_speed
 164               	rgblight_decrease_speed:
 165               	.LFB21:
  49:quantum/rgb.h **** 
  50:quantum/rgb.h **** __attribute__((weak))
  51:quantum/rgb.h **** void rgblight_decrease_speed(void) {};
 166               		.loc 1 51 0
 167               		.cfi_startproc
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 0 */
 171               	.L__stack_usage = 0
 172 0000 0895      		ret
 173               		.cfi_endproc
 174               	.LFE21:
 176               		.section	.text.action_get_macro,"ax",@progbits
 177               		.weak	action_get_macro
 179               	action_get_macro:
 180               	.LFB30:
 181               		.file 2 "quantum/keymap_common.c"
   1:quantum/keymap_common.c **** /*
   2:quantum/keymap_common.c **** Copyright 2012-2017 Jun Wako <wakojun@gmail.com>
   3:quantum/keymap_common.c **** 
   4:quantum/keymap_common.c **** This program is free software: you can redistribute it and/or modify
   5:quantum/keymap_common.c **** it under the terms of the GNU General Public License as published by
   6:quantum/keymap_common.c **** the Free Software Foundation, either version 2 of the License, or
   7:quantum/keymap_common.c **** (at your option) any later version.
   8:quantum/keymap_common.c **** 
   9:quantum/keymap_common.c **** This program is distributed in the hope that it will be useful,
  10:quantum/keymap_common.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:quantum/keymap_common.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:quantum/keymap_common.c **** GNU General Public License for more details.
  13:quantum/keymap_common.c **** 
  14:quantum/keymap_common.c **** You should have received a copy of the GNU General Public License
  15:quantum/keymap_common.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:quantum/keymap_common.c **** */
  17:quantum/keymap_common.c **** 
  18:quantum/keymap_common.c **** #include "keymap.h"
  19:quantum/keymap_common.c **** #include "report.h"
  20:quantum/keymap_common.c **** #include "keycode.h"
  21:quantum/keymap_common.c **** #include "action_layer.h"
  22:quantum/keymap_common.c **** #if defined(__AVR__)
  23:quantum/keymap_common.c **** #include <util/delay.h>
  24:quantum/keymap_common.c **** #include <stdio.h>
  25:quantum/keymap_common.c **** #endif
  26:quantum/keymap_common.c **** #include "action.h"
  27:quantum/keymap_common.c **** #include "action_macro.h"
  28:quantum/keymap_common.c **** #include "debug.h"
  29:quantum/keymap_common.c **** #include "backlight.h"
  30:quantum/keymap_common.c **** #include "quantum.h"
  31:quantum/keymap_common.c **** 
  32:quantum/keymap_common.c **** #ifdef MIDI_ENABLE
  33:quantum/keymap_common.c **** 	#include "process_midi.h"
  34:quantum/keymap_common.c **** #endif
  35:quantum/keymap_common.c **** 
  36:quantum/keymap_common.c **** extern keymap_config_t keymap_config;
  37:quantum/keymap_common.c **** 
  38:quantum/keymap_common.c **** #include <inttypes.h>
  39:quantum/keymap_common.c **** 
  40:quantum/keymap_common.c **** /* converts key to action */
  41:quantum/keymap_common.c **** action_t action_for_key(uint8_t layer, keypos_t key)
  42:quantum/keymap_common.c **** {
  43:quantum/keymap_common.c ****     // 16bit keycodes - important
  44:quantum/keymap_common.c ****     uint16_t keycode = keymap_key_to_keycode(layer, key);
  45:quantum/keymap_common.c **** 
  46:quantum/keymap_common.c ****     // keycode remapping
  47:quantum/keymap_common.c ****     keycode = keycode_config(keycode);
  48:quantum/keymap_common.c **** 
  49:quantum/keymap_common.c ****     action_t action;
  50:quantum/keymap_common.c ****     uint8_t action_layer, when, mod;
  51:quantum/keymap_common.c **** 
  52:quantum/keymap_common.c ****     switch (keycode) {
  53:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
  54:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action(FN_INDEX(keycode));
  55:quantum/keymap_common.c ****             break;
  56:quantum/keymap_common.c ****         case KC_A ... KC_EXSEL:
  57:quantum/keymap_common.c ****         case KC_LCTRL ... KC_RGUI:
  58:quantum/keymap_common.c ****             action.code = ACTION_KEY(keycode);
  59:quantum/keymap_common.c ****             break;
  60:quantum/keymap_common.c ****         case KC_SYSTEM_POWER ... KC_SYSTEM_WAKE:
  61:quantum/keymap_common.c ****             action.code = ACTION_USAGE_SYSTEM(KEYCODE2SYSTEM(keycode));
  62:quantum/keymap_common.c ****             break;
  63:quantum/keymap_common.c ****         case KC_AUDIO_MUTE ... KC_MEDIA_REWIND:
  64:quantum/keymap_common.c ****             action.code = ACTION_USAGE_CONSUMER(KEYCODE2CONSUMER(keycode));
  65:quantum/keymap_common.c ****             break;
  66:quantum/keymap_common.c ****         case KC_MS_UP ... KC_MS_ACCEL2:
  67:quantum/keymap_common.c ****             action.code = ACTION_MOUSEKEY(keycode);
  68:quantum/keymap_common.c ****             break;
  69:quantum/keymap_common.c ****         case KC_TRNS:
  70:quantum/keymap_common.c ****             action.code = ACTION_TRANSPARENT;
  71:quantum/keymap_common.c ****             break;
  72:quantum/keymap_common.c ****         case QK_MODS ... QK_MODS_MAX: ;
  73:quantum/keymap_common.c ****             // Has a modifier
  74:quantum/keymap_common.c ****             // Split it up
  75:quantum/keymap_common.c ****             action.code = ACTION_MODS_KEY(keycode >> 8, keycode & 0xFF); // adds modifier to key
  76:quantum/keymap_common.c ****             break;
  77:quantum/keymap_common.c ****         case QK_FUNCTION ... QK_FUNCTION_MAX: ;
  78:quantum/keymap_common.c ****             // Is a shortcut for function action_layer, pull last 12bits
  79:quantum/keymap_common.c ****             // This means we have 4,096 FN macros at our disposal
  80:quantum/keymap_common.c ****             action.code = keymap_function_id_to_action( (int)keycode & 0xFFF );
  81:quantum/keymap_common.c ****             break;
  82:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
  83:quantum/keymap_common.c ****             if (keycode & 0x800) // tap macros have upper bit set
  84:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
  85:quantum/keymap_common.c ****             else
  86:quantum/keymap_common.c ****                 action.code = ACTION_MACRO(keycode & 0xFF);
  87:quantum/keymap_common.c ****             break;
  88:quantum/keymap_common.c ****         case QK_LAYER_TAP ... QK_LAYER_TAP_MAX:
  89:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_KEY((keycode >> 0x8) & 0xF, keycode & 0xFF);
  90:quantum/keymap_common.c ****             break;
  91:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
  92:quantum/keymap_common.c ****             // Layer set "GOTO"
  93:quantum/keymap_common.c ****             when = (keycode >> 0x4) & 0x3;
  94:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
  95:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
  96:quantum/keymap_common.c ****             break;
  97:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
  98:quantum/keymap_common.c ****             // Momentary action_layer
  99:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 100:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MOMENTARY(action_layer);
 101:quantum/keymap_common.c ****             break;
 102:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 103:quantum/keymap_common.c ****             // Set default action_layer
 104:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 105:quantum/keymap_common.c ****             action.code = ACTION_DEFAULT_LAYER_SET(action_layer);
 106:quantum/keymap_common.c ****             break;
 107:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 108:quantum/keymap_common.c ****             // Set toggle
 109:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 110:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TOGGLE(action_layer);
 111:quantum/keymap_common.c ****             break;
 112:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 113:quantum/keymap_common.c ****             // OSL(action_layer) - One-shot action_layer
 114:quantum/keymap_common.c ****             action_layer = keycode & 0xFF;
 115:quantum/keymap_common.c ****             action.code = ACTION_LAYER_ONESHOT(action_layer);
 116:quantum/keymap_common.c ****             break;
 117:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 118:quantum/keymap_common.c ****             // OSM(mod) - One-shot mod
 119:quantum/keymap_common.c ****             mod = keycode & 0xFF;
 120:quantum/keymap_common.c ****             action.code = ACTION_MODS_ONESHOT(mod);
 121:quantum/keymap_common.c ****             break;
 122:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 123:quantum/keymap_common.c ****             action.code = ACTION_LAYER_TAP_TOGGLE(keycode & 0xFF);
 124:quantum/keymap_common.c ****             break;
 125:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 126:quantum/keymap_common.c ****             mod = keycode & 0xF;
 127:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 128:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 129:quantum/keymap_common.c ****             break;
 130:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 131:quantum/keymap_common.c ****             mod = mod_config((keycode >> 0x8) & 0x1F);
 132:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 133:quantum/keymap_common.c ****             break;
 134:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 135:quantum/keymap_common.c ****         case BL_ON:
 136:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_ON();
 137:quantum/keymap_common.c ****             break;
 138:quantum/keymap_common.c ****         case BL_OFF:
 139:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_OFF();
 140:quantum/keymap_common.c ****             break;
 141:quantum/keymap_common.c ****         case BL_DEC:
 142:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_DECREASE();
 143:quantum/keymap_common.c ****             break;
 144:quantum/keymap_common.c ****         case BL_INC:
 145:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_INCREASE();
 146:quantum/keymap_common.c ****             break;
 147:quantum/keymap_common.c ****         case BL_TOGG:
 148:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_TOGGLE();
 149:quantum/keymap_common.c ****             break;
 150:quantum/keymap_common.c ****         case BL_STEP:
 151:quantum/keymap_common.c ****             action.code = ACTION_BACKLIGHT_STEP();
 152:quantum/keymap_common.c ****             break;
 153:quantum/keymap_common.c ****     #endif
 154:quantum/keymap_common.c ****     #ifdef SWAP_HANDS_ENABLE
 155:quantum/keymap_common.c ****         case QK_SWAP_HANDS ... QK_SWAP_HANDS_MAX:
 156:quantum/keymap_common.c ****             action.code = ACTION(ACT_SWAP_HANDS, keycode & 0xff);
 157:quantum/keymap_common.c ****             break;
 158:quantum/keymap_common.c ****     #endif
 159:quantum/keymap_common.c **** 
 160:quantum/keymap_common.c ****         default:
 161:quantum/keymap_common.c ****             action.code = ACTION_NO;
 162:quantum/keymap_common.c ****             break;
 163:quantum/keymap_common.c ****     }
 164:quantum/keymap_common.c ****     return action;
 165:quantum/keymap_common.c **** }
 166:quantum/keymap_common.c **** 
 167:quantum/keymap_common.c **** __attribute__ ((weak))
 168:quantum/keymap_common.c **** const uint16_t PROGMEM fn_actions[] = {
 169:quantum/keymap_common.c **** 
 170:quantum/keymap_common.c **** };
 171:quantum/keymap_common.c **** 
 172:quantum/keymap_common.c **** /* Macro */
 173:quantum/keymap_common.c **** __attribute__ ((weak))
 174:quantum/keymap_common.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)
 175:quantum/keymap_common.c **** {
 182               		.loc 2 175 0
 183               		.cfi_startproc
 184               	.LVL0:
 185               	/* prologue: function */
 186               	/* frame size = 0 */
 187               	/* stack size = 0 */
 188               	.L__stack_usage = 0
 176:quantum/keymap_common.c ****     return MACRO_NONE;
 177:quantum/keymap_common.c **** }
 189               		.loc 2 177 0
 190 0000 80E0      		ldi r24,0
 191 0002 90E0      		ldi r25,0
 192               	.LVL1:
 193 0004 0895      		ret
 194               		.cfi_endproc
 195               	.LFE30:
 197               		.section	.text.action_function,"ax",@progbits
 198               		.weak	action_function
 200               	action_function:
 201               	.LFB31:
 178:quantum/keymap_common.c **** 
 179:quantum/keymap_common.c **** /* Function */
 180:quantum/keymap_common.c **** __attribute__ ((weak))
 181:quantum/keymap_common.c **** void action_function(keyrecord_t *record, uint8_t id, uint8_t opt)
 182:quantum/keymap_common.c **** {
 202               		.loc 2 182 0
 203               		.cfi_startproc
 204               	.LVL2:
 205               	/* prologue: function */
 206               	/* frame size = 0 */
 207               	/* stack size = 0 */
 208               	.L__stack_usage = 0
 209 0000 0895      		ret
 210               		.cfi_endproc
 211               	.LFE31:
 213               		.section	.text.keymap_key_to_keycode,"ax",@progbits
 214               		.weak	keymap_key_to_keycode
 216               	keymap_key_to_keycode:
 217               	.LFB32:
 183:quantum/keymap_common.c **** }
 184:quantum/keymap_common.c **** 
 185:quantum/keymap_common.c **** // translates key to keycode
 186:quantum/keymap_common.c **** __attribute__ ((weak))
 187:quantum/keymap_common.c **** uint16_t keymap_key_to_keycode(uint8_t layer, keypos_t key)
 188:quantum/keymap_common.c **** {
 218               		.loc 2 188 0
 219               		.cfi_startproc
 220               	.LVL3:
 221               	/* prologue: function */
 222               	/* frame size = 0 */
 223               	/* stack size = 0 */
 224               	.L__stack_usage = 0
 225               	.LBB2:
 189:quantum/keymap_common.c ****     // Read entire word (16bits)
 190:quantum/keymap_common.c ****     return pgm_read_word(&keymaps[(layer)][(key.row)][(key.col)]);
 226               		.loc 2 190 0
 227 0000 96E0      		ldi r25,lo8(6)
 228 0002 799F      		mul r23,r25
 229 0004 F001      		movw r30,r0
 230 0006 1124      		clr __zero_reg__
 231 0008 94E5      		ldi r25,lo8(84)
 232 000a 899F      		mul r24,r25
 233 000c E00D      		add r30,r0
 234 000e F11D      		adc r31,r1
 235 0010 1124      		clr __zero_reg__
 236 0012 E60F      		add r30,r22
 237 0014 F11D      		adc r31,__zero_reg__
 238 0016 EE0F      		lsl r30
 239 0018 FF1F      		rol r31
 240               	.LVL4:
 241 001a E050      		subi r30,lo8(-(keymaps))
 242 001c F040      		sbci r31,hi8(-(keymaps))
 243               	.LVL5:
 244               	.LBE2:
 191:quantum/keymap_common.c **** }
 245               		.loc 2 191 0
 246               	/* #APP */
 247               	 ;  190 "quantum/keymap_common.c" 1
 248 001e 8591      		lpm r24, Z+
 249 0020 9491      		lpm r25, Z
 250               		
 251               	 ;  0 "" 2
 252               	/* #NOAPP */
 253 0022 0895      		ret
 254               		.cfi_endproc
 255               	.LFE32:
 257               		.section	.text.keymap_function_id_to_action,"ax",@progbits
 258               		.weak	keymap_function_id_to_action
 260               	keymap_function_id_to_action:
 261               	.LFB33:
 192:quantum/keymap_common.c **** 
 193:quantum/keymap_common.c **** // translates function id to action
 194:quantum/keymap_common.c **** __attribute__ ((weak))
 195:quantum/keymap_common.c **** uint16_t keymap_function_id_to_action( uint16_t function_id )
 196:quantum/keymap_common.c **** {
 262               		.loc 2 196 0
 263               		.cfi_startproc
 264               	.LVL6:
 265               	/* prologue: function */
 266               	/* frame size = 0 */
 267               	/* stack size = 0 */
 268               	.L__stack_usage = 0
 269               	.LBB3:
 197:quantum/keymap_common.c ****     // The compiler sees the empty (weak) fn_actions and generates a warning
 198:quantum/keymap_common.c ****     // This function should not be called in that case, so the warning is too strict
 199:quantum/keymap_common.c ****     // If this function is called however, the keymap should have overridden fn_actions, and then t
 200:quantum/keymap_common.c ****     // is comparing against the wrong array
 201:quantum/keymap_common.c ****     #pragma GCC diagnostic push
 202:quantum/keymap_common.c ****     #pragma GCC diagnostic ignored "-Warray-bounds"
 203:quantum/keymap_common.c **** 	return pgm_read_word(&fn_actions[function_id]);
 270               		.loc 2 203 0
 271 0000 880F      		lsl r24
 272 0002 991F      		rol r25
 273               	.LVL7:
 274 0004 FC01      		movw r30,r24
 275 0006 E050      		subi r30,lo8(-(fn_actions))
 276 0008 F040      		sbci r31,hi8(-(fn_actions))
 277               	.LVL8:
 278               	.LBE3:
 204:quantum/keymap_common.c ****     #pragma GCC diagnostic pop
 205:quantum/keymap_common.c **** }
 279               		.loc 2 205 0
 280               	/* #APP */
 281               	 ;  203 "quantum/keymap_common.c" 1
 282 000a 8591      		lpm r24, Z+
 283 000c 9491      		lpm r25, Z
 284               		
 285               	 ;  0 "" 2
 286               	/* #NOAPP */
 287 000e 0895      		ret
 288               		.cfi_endproc
 289               	.LFE33:
 291               		.section	.text.action_for_key,"ax",@progbits
 292               	.global	action_for_key
 294               	action_for_key:
 295               	.LFB29:
  42:quantum/keymap_common.c ****     // 16bit keycodes - important
 296               		.loc 2 42 0
 297               		.cfi_startproc
 298               	.LVL9:
 299 0000 CF93      		push r28
 300               	.LCFI0:
 301               		.cfi_def_cfa_offset 3
 302               		.cfi_offset 28, -2
 303 0002 DF93      		push r29
 304               	.LCFI1:
 305               		.cfi_def_cfa_offset 4
 306               		.cfi_offset 29, -3
 307               	/* prologue: function */
 308               	/* frame size = 0 */
 309               	/* stack size = 2 */
 310               	.L__stack_usage = 2
  44:quantum/keymap_common.c **** 
 311               		.loc 2 44 0
 312 0004 0E94 0000 		call keymap_key_to_keycode
 313               	.LVL10:
  47:quantum/keymap_common.c **** 
 314               		.loc 2 47 0
 315 0008 0E94 0000 		call keycode_config
 316               	.LVL11:
 317 000c EC01      		movw r28,r24
 318               	.LVL12:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 319               		.loc 2 52 0
 320 000e 8115      		cp r24,__zero_reg__
 321 0010 20E5      		ldi r18,80
 322 0012 9207      		cpc r25,r18
 323 0014 00F4      		brsh .L18
 324 0016 8115      		cp r24,__zero_reg__
 325 0018 30E4      		ldi r19,64
 326 001a 9307      		cpc r25,r19
 327 001c 00F0      		brlo .+2
 328 001e 00C0      		rjmp .L19
 329 0020 883E      		cpi r24,-24
 330 0022 9105      		cpc r25,__zero_reg__
 331 0024 00F4      		brsh .L20
 332 0026 803E      		cpi r24,-32
 333 0028 9105      		cpc r25,__zero_reg__
 334 002a 00F0      		brlo .+2
 335 002c 00C0      		rjmp .L21
 336 002e 883A      		cpi r24,-88
 337 0030 9105      		cpc r25,__zero_reg__
 338 0032 00F4      		brsh .L22
 339 0034 853A      		cpi r24,-91
 340 0036 9105      		cpc r25,__zero_reg__
 341 0038 00F0      		brlo .+2
 342 003a 00C0      		rjmp .L23
 343 003c 8130      		cpi r24,1
 344 003e 9105      		cpc r25,__zero_reg__
 345 0040 01F4      		brne .+2
 346 0042 00C0      		rjmp .L21
 347 0044 00F4      		brsh .+2
 348 0046 00C0      		rjmp .L17
 349 0048 0497      		sbiw r24,4
 350 004a 00F0      		brlo .+2
 351 004c 00C0      		rjmp .L21
 352 004e 00C0      		rjmp .L17
 353               	.L22:
 354 0050 8D3B      		cpi r24,-67
 355 0052 9105      		cpc r25,__zero_reg__
 356 0054 00F4      		brsh .+2
 357 0056 00C0      		rjmp .L24
 358 0058 803C      		cpi r24,-64
 359 005a 9105      		cpc r25,__zero_reg__
 360 005c 00F4      		brsh .+2
 361 005e 00C0      		rjmp .L17
  54:quantum/keymap_common.c ****             break;
 362               		.loc 2 54 0
 363 0060 805C      		subi r24,-64
 364 0062 9109      		sbc r25,__zero_reg__
 365               	.LVL13:
 366 0064 00C0      		rjmp .L76
 367               	.LVL14:
 368               	.L20:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 369               		.loc 2 52 0
 370 0066 8115      		cp r24,__zero_reg__
 371 0068 9042      		sbci r25,32
 372 006a 00F4      		brsh .L26
 373 006c C115      		cp r28,__zero_reg__
 374 006e 81E0      		ldi r24,1
 375 0070 D807      		cpc r29,r24
 376               	.LVL15:
 377 0072 00F0      		brlo .+2
 378 0074 00C0      		rjmp .L21
 379 0076 C03F      		cpi r28,-16
 380 0078 D105      		cpc r29,__zero_reg__
 381 007a 00F4      		brsh .+2
 382 007c 00C0      		rjmp .L17
 383               	.LVL16:
  67:quantum/keymap_common.c ****             break;
 384               		.loc 2 67 0
 385 007e D065      		ori r29,80
 386               	.LVL17:
  68:quantum/keymap_common.c ****         case KC_TRNS:
 387               		.loc 2 68 0
 388 0080 00C0      		rjmp .L21
 389               	.LVL18:
 390               	.L26:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 391               		.loc 2 52 0
 392 0082 C115      		cp r28,__zero_reg__
 393 0084 90E3      		ldi r25,48
 394 0086 D907      		cpc r29,r25
 395 0088 00F0      		brlo .+2
 396 008a 00C0      		rjmp .L71
  80:quantum/keymap_common.c ****             break;
 397               		.loc 2 80 0
 398 008c CE01      		movw r24,r28
 399               	.LVL19:
 400 008e 9F70      		andi r25,15
 401 0090 00C0      		rjmp .L76
 402               	.LVL20:
 403               	.L18:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 404               		.loc 2 52 0
 405 0092 8115      		cp r24,__zero_reg__
 406 0094 25E5      		ldi r18,85
 407 0096 9207      		cpc r25,r18
 408 0098 00F0      		brlo .+2
 409 009a 00C0      		rjmp .L30
 410 009c 8115      		cp r24,__zero_reg__
 411 009e 34E5      		ldi r19,84
 412 00a0 9307      		cpc r25,r19
 413 00a2 00F0      		brlo .+2
 414 00a4 00C0      		rjmp .L31
 415 00a6 8115      		cp r24,__zero_reg__
 416 00a8 42E5      		ldi r20,82
 417 00aa 9407      		cpc r25,r20
 418 00ac 00F4      		brsh .L32
 419 00ae C115      		cp r28,__zero_reg__
 420 00b0 81E5      		ldi r24,81
 421 00b2 D807      		cpc r29,r24
 422               	.LVL21:
 423 00b4 00F0      		brlo .+2
 424 00b6 00C0      		rjmp .L78
 425               	.LVL22:
  95:quantum/keymap_common.c ****             break;
 426               		.loc 2 95 0
 427 00b8 2C2F      		mov r18,r28
 428 00ba 2370      		andi r18,lo8(3)
 429 00bc 81E0      		ldi r24,lo8(1)
 430 00be 90E0      		ldi r25,0
 431 00c0 00C0      		rjmp 2f
 432               		1:
 433 00c2 880F      		lsl r24
 434 00c4 991F      		rol r25
 435               		2:
 436 00c6 2A95      		dec r18
 437 00c8 02F4      		brpl 1b
 438 00ca 9C68      		ori r25,140
  93:quantum/keymap_common.c ****             action_layer = keycode & 0xF;
 439               		.loc 2 93 0
 440 00cc 9E01      		movw r18,r28
 441 00ce 74E0      		ldi r23,4
 442               		1:
 443 00d0 3695      		lsr r19
 444 00d2 2795      		ror r18
 445 00d4 7A95      		dec r23
 446 00d6 01F4      		brne 1b
 447 00d8 2370      		andi r18,lo8(3)
 448 00da 922B      		or r25,r18
  94:quantum/keymap_common.c ****             action.code = ACTION_LAYER_SET(action_layer, when);
 449               		.loc 2 94 0
 450 00dc CF70      		andi r28,lo8(15)
 451               	.LVL23:
  95:quantum/keymap_common.c ****             break;
 452               		.loc 2 95 0
 453 00de C695      		lsr r28
 454 00e0 C695      		lsr r28
 455 00e2 30E2      		ldi r19,lo8(32)
 456 00e4 C39F      		mul r28,r19
 457 00e6 E001      		movw r28,r0
 458 00e8 1124      		clr __zero_reg__
 459               	.LVL24:
 460 00ea C82B      		or r28,r24
 461 00ec D92B      		or r29,r25
 462               	.LVL25:
  96:quantum/keymap_common.c ****         case QK_MOMENTARY ... QK_MOMENTARY_MAX: ;
 463               		.loc 2 96 0
 464 00ee 00C0      		rjmp .L21
 465               	.LVL26:
 466               	.L32:
 467 00f0 8695      		lsr r24
 468 00f2 8695      		lsr r24
 469               	.LVL27:
 470 00f4 9E01      		movw r18,r28
 471 00f6 2370      		andi r18,3
 472 00f8 3327      		clr r19
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 473               		.loc 2 52 0
 474 00fa C115      		cp r28,__zero_reg__
 475 00fc D345      		sbci r29,83
 476 00fe 00F0      		brlo .+2
 477 0100 00C0      		rjmp .L73
 478               	.LVL28:
 105:quantum/keymap_common.c ****             break;
 479               		.loc 2 105 0
 480 0102 40E2      		ldi r20,lo8(32)
 481 0104 849F      		mul r24,r20
 482 0106 C001      		movw r24,r0
 483 0108 1124      		clr __zero_reg__
 484 010a C1E0      		ldi r28,lo8(1)
 485 010c D0E0      		ldi r29,0
 486               	.LVL29:
 487 010e 00C0      		rjmp 2f
 488               		1:
 489 0110 CC0F      		lsl r28
 490 0112 DD1F      		rol r29
 491               		2:
 492 0114 2A95      		dec r18
 493 0116 02F4      		brpl 1b
 494 0118 8C2B      		or r24,r28
 495 011a 9D2B      		or r25,r29
 496               	.LVL30:
 497 011c EC01      		movw r28,r24
 498 011e DC68      		ori r29,140
 499               	.LVL31:
 106:quantum/keymap_common.c ****         case QK_TOGGLE_LAYER ... QK_TOGGLE_LAYER_MAX: ;
 500               		.loc 2 106 0
 501 0120 00C0      		rjmp .L21
 502               	.LVL32:
 503               	.L30:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 504               		.loc 2 52 0
 505 0122 8115      		cp r24,__zero_reg__
 506 0124 29E5      		ldi r18,89
 507 0126 9207      		cpc r25,r18
 508 0128 00F4      		brsh .L37
 509 012a 8115      		cp r24,__zero_reg__
 510 012c 38E5      		ldi r19,88
 511 012e 9307      		cpc r25,r19
 512 0130 00F0      		brlo .+2
 513 0132 00C0      		rjmp .L38
 514 0134 8115      		cp r24,__zero_reg__
 515 0136 9645      		sbci r25,86
 516 0138 00F0      		brlo .+2
 517 013a 00C0      		rjmp .L17
 518               	.LVL33:
 120:quantum/keymap_common.c ****             break;
 519               		.loc 2 120 0
 520 013c CF71      		andi r28,31
 521 013e DD27      		clr r29
 522 0140 DC2F      		mov r29,r28
 523 0142 CC27      		clr r28
 524               	.LVL34:
 525 0144 D062      		ori r29,32
 526               	.LVL35:
 121:quantum/keymap_common.c ****         case QK_LAYER_TAP_TOGGLE ... QK_LAYER_TAP_TOGGLE_MAX:
 527               		.loc 2 121 0
 528 0146 00C0      		rjmp .L21
 529               	.LVL36:
 530               	.L37:
  52:quantum/keymap_common.c ****         case KC_FN0 ... KC_FN31:
 531               		.loc 2 52 0
 532 0148 C115      		cp r28,__zero_reg__
 533 014a 8AE5      		ldi r24,90
 534 014c D807      		cpc r29,r24
 535               	.LVL37:
 536 014e 00F4      		brsh .+2
 537 0150 00C0      		rjmp .L40
 538 0152 CE01      		movw r24,r28
 539 0154 9056      		subi r25,96
 540 0156 8115      		cp r24,__zero_reg__
 541 0158 9042      		sbci r25,32
 542 015a 00F0      		brlo .+2
 543 015c 00C0      		rjmp .L17
 131:quantum/keymap_common.c ****             action.code = ACTION_MODS_TAP_KEY(mod, keycode & 0xFF);
 544               		.loc 2 131 0
 545 015e 8D2F      		mov r24,r29
 546 0160 8F71      		andi r24,lo8(31)
 547 0162 0E94 0000 		call mod_config
 548               	.LVL38:
 132:quantum/keymap_common.c ****             break;
 549               		.loc 2 132 0
 550 0166 DD27      		clr r29
 551               	.LVL39:
 552 0168 D062      		ori r29,32
 553 016a 8F71      		andi r24,lo8(31)
 554               	.LVL40:
 555 016c D82B      		or r29,r24
 556               	.LVL41:
 133:quantum/keymap_common.c ****     #ifdef BACKLIGHT_ENABLE
 557               		.loc 2 133 0
 558 016e 00C0      		rjmp .L21
 559               	.LVL42:
 560               	.L23:
  61:quantum/keymap_common.c ****             break;
 561               		.loc 2 61 0
 562 0170 853A      		cpi r24,-91
 563 0172 9105      		cpc r25,__zero_reg__
 564 0174 01F4      		brne .+2
 565 0176 00C0      		rjmp .L43
  61:quantum/keymap_common.c ****             break;
 566               		.loc 2 61 0 is_stmt 0 discriminator 1
 567 0178 863A      		cpi r24,-90
 568 017a 9105      		cpc r25,__zero_reg__
 569 017c 01F0      		breq .+2
 570 017e 00C0      		rjmp .L44
 571               	.LVL43:
  61:quantum/keymap_common.c ****             break;
 572               		.loc 2 61 0
 573 0180 C2E8      		ldi r28,lo8(-126)
 574 0182 D0E4      		ldi r29,lo8(64)
 575 0184 00C0      		rjmp .L21
 576               	.LVL44:
 577               	.L24:
  64:quantum/keymap_common.c ****             break;
 578               		.loc 2 64 0 is_stmt 1
 579 0186 883A      		cpi r24,-88
 580 0188 9105      		cpc r25,__zero_reg__
 581 018a 01F4      		brne .+2
 582 018c 00C0      		rjmp .L45
  64:quantum/keymap_common.c ****             break;
 583               		.loc 2 64 0 is_stmt 0 discriminator 1
 584 018e 893A      		cpi r24,-87
 585 0190 9105      		cpc r25,__zero_reg__
 586 0192 01F4      		brne .+2
 587 0194 00C0      		rjmp .L46
  64:quantum/keymap_common.c ****             break;
 588               		.loc 2 64 0 discriminator 3
 589 0196 8A3A      		cpi r24,-86
 590 0198 9105      		cpc r25,__zero_reg__
 591 019a 01F4      		brne .+2
 592 019c 00C0      		rjmp .L47
  64:quantum/keymap_common.c ****             break;
 593               		.loc 2 64 0 discriminator 5
 594 019e 8B3A      		cpi r24,-85
 595 01a0 9105      		cpc r25,__zero_reg__
 596 01a2 01F4      		brne .+2
 597 01a4 00C0      		rjmp .L48
  64:quantum/keymap_common.c ****             break;
 598               		.loc 2 64 0 discriminator 7
 599 01a6 8C3A      		cpi r24,-84
 600 01a8 9105      		cpc r25,__zero_reg__
 601 01aa 01F4      		brne .+2
 602 01ac 00C0      		rjmp .L49
  64:quantum/keymap_common.c ****             break;
 603               		.loc 2 64 0 discriminator 9
 604 01ae 8B3B      		cpi r24,-69
 605 01b0 9105      		cpc r25,__zero_reg__
 606 01b2 01F4      		brne .+2
 607 01b4 00C0      		rjmp .L50
  64:quantum/keymap_common.c ****             break;
 608               		.loc 2 64 0 discriminator 11
 609 01b6 8C3B      		cpi r24,-68
 610 01b8 9105      		cpc r25,__zero_reg__
 611 01ba 01F4      		brne .+2
 612 01bc 00C0      		rjmp .L51
  64:quantum/keymap_common.c ****             break;
 613               		.loc 2 64 0 discriminator 13
 614 01be 8D3A      		cpi r24,-83
 615 01c0 9105      		cpc r25,__zero_reg__
 616 01c2 01F4      		brne .+2
 617 01c4 00C0      		rjmp .L52
  64:quantum/keymap_common.c ****             break;
 618               		.loc 2 64 0 discriminator 15
 619 01c6 803B      		cpi r24,-80
 620 01c8 9105      		cpc r25,__zero_reg__
 621 01ca 01F4      		brne .+2
 622 01cc 00C0      		rjmp .L53
  64:quantum/keymap_common.c ****             break;
 623               		.loc 2 64 0 discriminator 17
 624 01ce 8E3A      		cpi r24,-82
 625 01d0 9105      		cpc r25,__zero_reg__
 626 01d2 01F4      		brne .+2
 627 01d4 00C0      		rjmp .L54
  64:quantum/keymap_common.c ****             break;
 628               		.loc 2 64 0 discriminator 19
 629 01d6 8F3A      		cpi r24,-81
 630 01d8 9105      		cpc r25,__zero_reg__
 631 01da 01F4      		brne .+2
 632 01dc 00C0      		rjmp .L55
  64:quantum/keymap_common.c ****             break;
 633               		.loc 2 64 0 discriminator 21
 634 01de 813B      		cpi r24,-79
 635 01e0 9105      		cpc r25,__zero_reg__
 636 01e2 01F4      		brne .+2
 637 01e4 00C0      		rjmp .L56
  64:quantum/keymap_common.c ****             break;
 638               		.loc 2 64 0 discriminator 23
 639 01e6 823B      		cpi r24,-78
 640 01e8 9105      		cpc r25,__zero_reg__
 641 01ea 01F4      		brne .+2
 642 01ec 00C0      		rjmp .L57
  64:quantum/keymap_common.c ****             break;
 643               		.loc 2 64 0 discriminator 25
 644 01ee 833B      		cpi r24,-77
 645 01f0 9105      		cpc r25,__zero_reg__
 646 01f2 01F4      		brne .+2
 647 01f4 00C0      		rjmp .L58
  64:quantum/keymap_common.c ****             break;
 648               		.loc 2 64 0 discriminator 27
 649 01f6 843B      		cpi r24,-76
 650 01f8 9105      		cpc r25,__zero_reg__
 651 01fa 01F4      		brne .+2
 652 01fc 00C0      		rjmp .L59
  64:quantum/keymap_common.c ****             break;
 653               		.loc 2 64 0 discriminator 29
 654 01fe 853B      		cpi r24,-75
 655 0200 9105      		cpc r25,__zero_reg__
 656 0202 01F4      		brne .+2
 657 0204 00C0      		rjmp .L60
  64:quantum/keymap_common.c ****             break;
 658               		.loc 2 64 0 discriminator 31
 659 0206 863B      		cpi r24,-74
 660 0208 9105      		cpc r25,__zero_reg__
 661 020a 01F4      		brne .+2
 662 020c 00C0      		rjmp .L61
  64:quantum/keymap_common.c ****             break;
 663               		.loc 2 64 0 discriminator 33
 664 020e 873B      		cpi r24,-73
 665 0210 9105      		cpc r25,__zero_reg__
 666 0212 01F4      		brne .+2
 667 0214 00C0      		rjmp .L62
  64:quantum/keymap_common.c ****             break;
 668               		.loc 2 64 0 discriminator 35
 669 0216 883B      		cpi r24,-72
 670 0218 9105      		cpc r25,__zero_reg__
 671 021a 01F4      		brne .+2
 672 021c 00C0      		rjmp .L63
  64:quantum/keymap_common.c ****             break;
 673               		.loc 2 64 0 discriminator 37
 674 021e 893B      		cpi r24,-71
 675 0220 9105      		cpc r25,__zero_reg__
 676 0222 01F4      		brne .+2
 677 0224 00C0      		rjmp .L64
  64:quantum/keymap_common.c ****             break;
 678               		.loc 2 64 0 discriminator 39
 679 0226 8A3B      		cpi r24,-70
 680 0228 9105      		cpc r25,__zero_reg__
 681 022a 01F4      		brne .+2
 682 022c 00C0      		rjmp .L65
 683               	.LVL45:
  64:quantum/keymap_common.c ****             break;
 684               		.loc 2 64 0
 685 022e C0E0      		ldi r28,0
 686 0230 D4E4      		ldi r29,lo8(68)
 687 0232 00C0      		rjmp .L21
 688               	.LVL46:
 689               	.L76:
  80:quantum/keymap_common.c ****             break;
 690               		.loc 2 80 0 is_stmt 1
 691 0234 0E94 0000 		call keymap_function_id_to_action
 692               	.LVL47:
 693 0238 EC01      		movw r28,r24
 694               	.LVL48:
  81:quantum/keymap_common.c ****         case QK_MACRO ... QK_MACRO_MAX:
 695               		.loc 2 81 0
 696 023a 00C0      		rjmp .L21
 697               	.LVL49:
 698               	.L71:
 699 023c CE01      		movw r24,r28
 700               	.LVL50:
 701 023e 9927      		clr r25
  83:quantum/keymap_common.c ****                 action.code = ACTION_MACRO_TAP(keycode & 0xFF);
 702               		.loc 2 83 0
 703 0240 D3FF      		sbrs r29,3
 704 0242 00C0      		rjmp .L42
 705               	.LVL51:
  84:quantum/keymap_common.c ****             else
 706               		.loc 2 84 0
 707 0244 EC01      		movw r28,r24
 708 0246 D86C      		ori r29,200
 709               	.LVL52:
 710 0248 00C0      		rjmp .L21
 711               	.LVL53:
 712               	.L42:
  86:quantum/keymap_common.c ****             break;
 713               		.loc 2 86 0
 714 024a EC01      		movw r28,r24
 715 024c D06C      		ori r29,192
 716               	.LVL54:
 717 024e 00C0      		rjmp .L21
 718               	.LVL55:
 719               	.L19:
  89:quantum/keymap_common.c ****             break;
 720               		.loc 2 89 0
 721 0250 DF70      		andi r29,15
 722               	.LVL56:
 723 0252 D06A      		ori r29,160
 724               	.LVL57:
  90:quantum/keymap_common.c ****         case QK_TO ... QK_TO_MAX: ;
 725               		.loc 2 90 0
 726 0254 00C0      		rjmp .L21
 727               	.LVL58:
 728               	.L78:
 100:quantum/keymap_common.c ****             break;
 729               		.loc 2 100 0
 730 0256 DC2F      		mov r29,r28
 731 0258 CC27      		clr r28
 732               	.LVL59:
 733 025a C16F      		ori r28,241
 734 025c D06A      		ori r29,160
 735               	.LVL60:
 101:quantum/keymap_common.c ****         case QK_DEF_LAYER ... QK_DEF_LAYER_MAX: ;
 736               		.loc 2 101 0
 737 025e 00C0      		rjmp .L21
 738               	.LVL61:
 739               	.L73:
 110:quantum/keymap_common.c ****             break;
 740               		.loc 2 110 0
 741 0260 40E2      		ldi r20,lo8(32)
 742 0262 849F      		mul r24,r20
 743 0264 C001      		movw r24,r0
 744 0266 1124      		clr __zero_reg__
 745 0268 C1E0      		ldi r28,lo8(1)
 746 026a D0E0      		ldi r29,0
 747               	.LVL62:
 748 026c 00C0      		rjmp 2f
 749               		1:
 750 026e CC0F      		lsl r28
 751 0270 DD1F      		rol r29
 752               		2:
 753 0272 2A95      		dec r18
 754 0274 02F4      		brpl 1b
 755 0276 C82B      		or r28,r24
 756 0278 D92B      		or r29,r25
 757               	.LVL63:
 758 027a DA68      		ori r29,138
 759               	.LVL64:
 111:quantum/keymap_common.c ****         case QK_ONE_SHOT_LAYER ... QK_ONE_SHOT_LAYER_MAX: ;
 760               		.loc 2 111 0
 761 027c 00C0      		rjmp .L21
 762               	.LVL65:
 763               	.L31:
 115:quantum/keymap_common.c ****             break;
 764               		.loc 2 115 0
 765 027e D82F      		mov r29,r24
 766 0280 CC27      		clr r28
 767               	.LVL66:
 768 0282 C46F      		ori r28,244
 769 0284 D06A      		ori r29,160
 770               	.LVL67:
 116:quantum/keymap_common.c ****         case QK_ONE_SHOT_MOD ... QK_ONE_SHOT_MOD_MAX: ;
 771               		.loc 2 116 0
 772 0286 00C0      		rjmp .L21
 773               	.LVL68:
 774               	.L38:
 123:quantum/keymap_common.c ****             break;
 775               		.loc 2 123 0
 776 0288 D82F      		mov r29,r24
 777 028a CC27      		clr r28
 778               	.LVL69:
 779 028c C06F      		ori r28,240
 780 028e D06A      		ori r29,160
 781               	.LVL70:
 124:quantum/keymap_common.c ****         case QK_LAYER_MOD ... QK_LAYER_MOD_MAX:
 782               		.loc 2 124 0
 783 0290 00C0      		rjmp .L21
 784               	.LVL71:
 785               	.L40:
 126:quantum/keymap_common.c ****             action_layer = (keycode >> 4) & 0xF;
 786               		.loc 2 126 0
 787 0292 8C2F      		mov r24,r28
 788 0294 8F70      		andi r24,lo8(15)
 128:quantum/keymap_common.c ****             break;
 789               		.loc 2 128 0
 790 0296 806E      		ori r24,lo8(-32)
 791 0298 90E0      		ldi r25,0
 792 029a 906A      		ori r25,160
 127:quantum/keymap_common.c ****             action.code = ACTION_LAYER_MODS(action_layer, mod);
 793               		.loc 2 127 0
 794 029c 24E0      		ldi r18,4
 795               		1:
 796 029e D695      		lsr r29
 797 02a0 C795      		ror r28
 798 02a2 2A95      		dec r18
 799 02a4 01F4      		brne 1b
 800               	.LVL72:
 801 02a6 CF70      		andi r28,lo8(15)
 802               	.LVL73:
 128:quantum/keymap_common.c ****             break;
 803               		.loc 2 128 0
 804 02a8 9C01      		movw r18,r24
 805 02aa 3C2B      		or r19,r28
 806 02ac E901      		movw r28,r18
 807               	.LVL74:
 129:quantum/keymap_common.c ****         case QK_MOD_TAP ... QK_MOD_TAP_MAX:
 808               		.loc 2 129 0
 809 02ae 00C0      		rjmp .L21
 810               	.LVL75:
 811               	.L17:
 161:quantum/keymap_common.c ****             break;
 812               		.loc 2 161 0
 813 02b0 C0E0      		ldi r28,0
 814 02b2 D0E0      		ldi r29,0
 162:quantum/keymap_common.c ****     }
 815               		.loc 2 162 0
 816 02b4 00C0      		rjmp .L21
 817               	.LVL76:
 818               	.L43:
  61:quantum/keymap_common.c ****             break;
 819               		.loc 2 61 0
 820 02b6 C1E8      		ldi r28,lo8(-127)
 821 02b8 D0E4      		ldi r29,lo8(64)
 822 02ba 00C0      		rjmp .L21
 823               	.LVL77:
 824               	.L44:
 825 02bc C3E8      		ldi r28,lo8(-125)
 826 02be D0E4      		ldi r29,lo8(64)
 827 02c0 00C0      		rjmp .L21
 828               	.LVL78:
 829               	.L45:
  64:quantum/keymap_common.c ****             break;
 830               		.loc 2 64 0
 831 02c2 C2EE      		ldi r28,lo8(-30)
 832 02c4 D4E4      		ldi r29,lo8(68)
 833 02c6 00C0      		rjmp .L21
 834               	.LVL79:
 835               	.L46:
 836 02c8 C9EE      		ldi r28,lo8(-23)
 837 02ca D4E4      		ldi r29,lo8(68)
 838 02cc 00C0      		rjmp .L21
 839               	.LVL80:
 840               	.L47:
 841 02ce CAEE      		ldi r28,lo8(-22)
 842 02d0 D4E4      		ldi r29,lo8(68)
 843 02d2 00C0      		rjmp .L21
 844               	.LVL81:
 845               	.L48:
 846 02d4 C5EB      		ldi r28,lo8(-75)
 847 02d6 D4E4      		ldi r29,lo8(68)
 848 02d8 00C0      		rjmp .L21
 849               	.LVL82:
 850               	.L49:
 851 02da C6EB      		ldi r28,lo8(-74)
 852 02dc D4E4      		ldi r29,lo8(68)
 853 02de 00C0      		rjmp .L21
 854               	.LVL83:
 855               	.L50:
 856 02e0 C3EB      		ldi r28,lo8(-77)
 857 02e2 D4E4      		ldi r29,lo8(68)
 858 02e4 00C0      		rjmp .L21
 859               	.LVL84:
 860               	.L51:
 861 02e6 C4EB      		ldi r28,lo8(-76)
 862 02e8 D4E4      		ldi r29,lo8(68)
 863 02ea 00C0      		rjmp .L21
 864               	.LVL85:
 865               	.L52:
 866 02ec C7EB      		ldi r28,lo8(-73)
 867 02ee D4E4      		ldi r29,lo8(68)
 868 02f0 00C0      		rjmp .L21
 869               	.LVL86:
 870               	.L53:
 871 02f2 CCEC      		ldi r28,lo8(-52)
 872 02f4 D4E4      		ldi r29,lo8(68)
 873 02f6 00C0      		rjmp .L21
 874               	.LVL87:
 875               	.L54:
 876 02f8 CDEC      		ldi r28,lo8(-51)
 877 02fa D4E4      		ldi r29,lo8(68)
 878 02fc 00C0      		rjmp .L21
 879               	.LVL88:
 880               	.L55:
 881 02fe C3E8      		ldi r28,lo8(-125)
 882 0300 D5E4      		ldi r29,lo8(69)
 883 0302 00C0      		rjmp .L21
 884               	.LVL89:
 885               	.L56:
 886 0304 CAE8      		ldi r28,lo8(-118)
 887 0306 D5E4      		ldi r29,lo8(69)
 888 0308 00C0      		rjmp .L21
 889               	.LVL90:
 890               	.L57:
 891 030a C2E9      		ldi r28,lo8(-110)
 892 030c D5E4      		ldi r29,lo8(69)
 893 030e 00C0      		rjmp .L21
 894               	.LVL91:
 895               	.L58:
 896 0310 C4E9      		ldi r28,lo8(-108)
 897 0312 D5E4      		ldi r29,lo8(69)
 898 0314 00C0      		rjmp .L21
 899               	.LVL92:
 900               	.L59:
 901 0316 C1E2      		ldi r28,lo8(33)
 902 0318 D6E4      		ldi r29,lo8(70)
 903 031a 00C0      		rjmp .L21
 904               	.LVL93:
 905               	.L60:
 906 031c C3E2      		ldi r28,lo8(35)
 907 031e D6E4      		ldi r29,lo8(70)
 908 0320 00C0      		rjmp .L21
 909               	.LVL94:
 910               	.L61:
 911 0322 C4E2      		ldi r28,lo8(36)
 912 0324 D6E4      		ldi r29,lo8(70)
 913 0326 00C0      		rjmp .L21
 914               	.LVL95:
 915               	.L62:
 916 0328 C5E2      		ldi r28,lo8(37)
 917 032a D6E4      		ldi r29,lo8(70)
 918 032c 00C0      		rjmp .L21
 919               	.LVL96:
 920               	.L63:
 921 032e C6E2      		ldi r28,lo8(38)
 922 0330 D6E4      		ldi r29,lo8(70)
 923 0332 00C0      		rjmp .L21
 924               	.LVL97:
 925               	.L64:
 926 0334 C7E2      		ldi r28,lo8(39)
 927 0336 D6E4      		ldi r29,lo8(70)
 928 0338 00C0      		rjmp .L21
 929               	.LVL98:
 930               	.L65:
 931 033a CAE2      		ldi r28,lo8(42)
 932 033c D6E4      		ldi r29,lo8(70)
 933               	.LVL99:
 934               	.L21:
 165:quantum/keymap_common.c **** 
 935               		.loc 2 165 0
 936 033e CE01      		movw r24,r28
 937               	/* epilogue start */
 938 0340 DF91      		pop r29
 939 0342 CF91      		pop r28
 940 0344 0895      		ret
 941               		.cfi_endproc
 942               	.LFE29:
 944               		.weak	fn_actions
 945               		.section	.progmem.data.fn_actions,"a",@progbits
 948               	fn_actions:
 949               		.text
 950               	.Letext0:
 951               		.file 3 "c:\\msys32\\home\\683654\\qmk_utils\\avr8-gnu-toolchain\\avr\\include\\stdint.h"
 952               		.file 4 "./tmk_core/common/keyboard.h"
 953               		.file 5 "./tmk_core/common/keycode.h"
 954               		.file 6 "./tmk_core/common/action_code.h"
 955               		.file 7 "./tmk_core/common/action_macro.h"
 956               		.file 8 "./tmk_core/common/action.h"
 957               		.file 9 "./tmk_core/common/report.h"
 958               		.file 10 "quantum/quantum_keycodes.h"
 959               		.file 11 "quantum/keymap.h"
 960               		.file 12 "./tmk_core/common/action_util.h"
 961               		.file 13 "quantum/keycode_config.h"
DEFINED SYMBOLS
                            *ABS*:00000000 keymap_common.c
C:\msys32\tmp\cc3gtT4o.s:2      *ABS*:0000003e __SP_H__
C:\msys32\tmp\cc3gtT4o.s:3      *ABS*:0000003d __SP_L__
C:\msys32\tmp\cc3gtT4o.s:4      *ABS*:0000003f __SREG__
C:\msys32\tmp\cc3gtT4o.s:5      *ABS*:00000000 __tmp_reg__
C:\msys32\tmp\cc3gtT4o.s:6      *ABS*:00000001 __zero_reg__
C:\msys32\tmp\cc3gtT4o.s:13     .text.rgblight_toggle:00000000 rgblight_toggle
C:\msys32\tmp\cc3gtT4o.s:29     .text.rgblight_step:00000000 rgblight_step
C:\msys32\tmp\cc3gtT4o.s:44     .text.rgblight_step_reverse:00000000 rgblight_step_reverse
C:\msys32\tmp\cc3gtT4o.s:59     .text.rgblight_increase_hue:00000000 rgblight_increase_hue
C:\msys32\tmp\cc3gtT4o.s:74     .text.rgblight_decrease_hue:00000000 rgblight_decrease_hue
C:\msys32\tmp\cc3gtT4o.s:89     .text.rgblight_increase_sat:00000000 rgblight_increase_sat
C:\msys32\tmp\cc3gtT4o.s:104    .text.rgblight_decrease_sat:00000000 rgblight_decrease_sat
C:\msys32\tmp\cc3gtT4o.s:119    .text.rgblight_increase_val:00000000 rgblight_increase_val
C:\msys32\tmp\cc3gtT4o.s:134    .text.rgblight_decrease_val:00000000 rgblight_decrease_val
C:\msys32\tmp\cc3gtT4o.s:149    .text.rgblight_increase_speed:00000000 rgblight_increase_speed
C:\msys32\tmp\cc3gtT4o.s:164    .text.rgblight_decrease_speed:00000000 rgblight_decrease_speed
C:\msys32\tmp\cc3gtT4o.s:179    .text.action_get_macro:00000000 action_get_macro
C:\msys32\tmp\cc3gtT4o.s:200    .text.action_function:00000000 action_function
C:\msys32\tmp\cc3gtT4o.s:216    .text.keymap_key_to_keycode:00000000 keymap_key_to_keycode
C:\msys32\tmp\cc3gtT4o.s:260    .text.keymap_function_id_to_action:00000000 keymap_function_id_to_action
C:\msys32\tmp\cc3gtT4o.s:948    .progmem.data.fn_actions:00000000 fn_actions
C:\msys32\tmp\cc3gtT4o.s:294    .text.action_for_key:00000000 action_for_key

UNDEFINED SYMBOLS
keymaps
keycode_config
mod_config
