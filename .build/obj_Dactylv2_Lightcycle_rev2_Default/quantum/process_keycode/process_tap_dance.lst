   1               		.file	"process_tap_dance.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.process_tap_dance_action_on_dance_finished.part.0,"ax",@progbits
  12               	process_tap_dance_action_on_dance_finished.part.0:
  13               	.LVL0:
  14               	.LFB42:
  15               		.file 1 "quantum/process_keycode/process_tap_dance.c"
   1:quantum/process_keycode/process_tap_dance.c **** /* Copyright 2016 Jack Humbert
   2:quantum/process_keycode/process_tap_dance.c ****  *
   3:quantum/process_keycode/process_tap_dance.c ****  * This program is free software: you can redistribute it and/or modify
   4:quantum/process_keycode/process_tap_dance.c ****  * it under the terms of the GNU General Public License as published by
   5:quantum/process_keycode/process_tap_dance.c ****  * the Free Software Foundation, either version 2 of the License, or
   6:quantum/process_keycode/process_tap_dance.c ****  * (at your option) any later version.
   7:quantum/process_keycode/process_tap_dance.c ****  *
   8:quantum/process_keycode/process_tap_dance.c ****  * This program is distributed in the hope that it will be useful,
   9:quantum/process_keycode/process_tap_dance.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:quantum/process_keycode/process_tap_dance.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:quantum/process_keycode/process_tap_dance.c ****  * GNU General Public License for more details.
  12:quantum/process_keycode/process_tap_dance.c ****  *
  13:quantum/process_keycode/process_tap_dance.c ****  * You should have received a copy of the GNU General Public License
  14:quantum/process_keycode/process_tap_dance.c ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:quantum/process_keycode/process_tap_dance.c ****  */
  16:quantum/process_keycode/process_tap_dance.c **** #include "quantum.h"
  17:quantum/process_keycode/process_tap_dance.c **** #include "action_tapping.h"
  18:quantum/process_keycode/process_tap_dance.c **** 
  19:quantum/process_keycode/process_tap_dance.c **** uint8_t get_oneshot_mods(void);
  20:quantum/process_keycode/process_tap_dance.c **** 
  21:quantum/process_keycode/process_tap_dance.c **** static uint16_t last_td;
  22:quantum/process_keycode/process_tap_dance.c **** static int8_t highest_td = -1;
  23:quantum/process_keycode/process_tap_dance.c **** 
  24:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_on_each_tap (qk_tap_dance_state_t *state, void *user_data) {
  25:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  26:quantum/process_keycode/process_tap_dance.c **** 
  27:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 2) {
  28:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
  29:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
  30:quantum/process_keycode/process_tap_dance.c ****   }
  31:quantum/process_keycode/process_tap_dance.c **** }
  32:quantum/process_keycode/process_tap_dance.c **** 
  33:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_finished (qk_tap_dance_state_t *state, void *user_data) {
  34:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  35:quantum/process_keycode/process_tap_dance.c **** 
  36:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  37:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
  38:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  39:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
  40:quantum/process_keycode/process_tap_dance.c ****   }
  41:quantum/process_keycode/process_tap_dance.c **** }
  42:quantum/process_keycode/process_tap_dance.c **** 
  43:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_pair_reset (qk_tap_dance_state_t *state, void *user_data) {
  44:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
  45:quantum/process_keycode/process_tap_dance.c **** 
  46:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  47:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
  48:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  49:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
  50:quantum/process_keycode/process_tap_dance.c ****   }
  51:quantum/process_keycode/process_tap_dance.c **** }
  52:quantum/process_keycode/process_tap_dance.c **** 
  53:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_on_each_tap (qk_tap_dance_state_t *state, void *user_data) {
  54:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  55:quantum/process_keycode/process_tap_dance.c **** 
  56:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 2) {
  57:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
  58:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
  59:quantum/process_keycode/process_tap_dance.c ****   }
  60:quantum/process_keycode/process_tap_dance.c **** }
  61:quantum/process_keycode/process_tap_dance.c **** 
  62:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_finished (qk_tap_dance_state_t *state, void *user_data) {
  63:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  64:quantum/process_keycode/process_tap_dance.c **** 
  65:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  66:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
  67:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
  68:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
  69:quantum/process_keycode/process_tap_dance.c ****   }
  70:quantum/process_keycode/process_tap_dance.c **** }
  71:quantum/process_keycode/process_tap_dance.c **** 
  72:quantum/process_keycode/process_tap_dance.c **** void qk_tap_dance_dual_role_reset (qk_tap_dance_state_t *state, void *user_data) {
  73:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
  74:quantum/process_keycode/process_tap_dance.c **** 
  75:quantum/process_keycode/process_tap_dance.c ****   if (state->count == 1) {
  76:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
  77:quantum/process_keycode/process_tap_dance.c ****   }
  78:quantum/process_keycode/process_tap_dance.c **** }
  79:quantum/process_keycode/process_tap_dance.c **** 
  80:quantum/process_keycode/process_tap_dance.c **** static inline void _process_tap_dance_action_fn (qk_tap_dance_state_t *state,
  81:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
  82:quantum/process_keycode/process_tap_dance.c ****                                                  qk_tap_dance_user_fn_t fn)
  83:quantum/process_keycode/process_tap_dance.c **** {
  84:quantum/process_keycode/process_tap_dance.c ****   if (fn) {
  85:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  86:quantum/process_keycode/process_tap_dance.c ****   }
  87:quantum/process_keycode/process_tap_dance.c **** }
  88:quantum/process_keycode/process_tap_dance.c **** 
  89:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_each_tap (qk_tap_dance_action_t *action)
  90:quantum/process_keycode/process_tap_dance.c **** {
  91:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_each_tap);
  92:quantum/process_keycode/process_tap_dance.c **** }
  93:quantum/process_keycode/process_tap_dance.c **** 
  94:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_dance_finished (qk_tap_dance_action_t *action)
  16               		.loc 1 94 20 view -0
  17               		.cfi_startproc
  18               		.loc 1 94 20 is_stmt 0 view .LVU1
  19 0000 CF93      		push r28
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 3
  22               		.cfi_offset 28, -2
  23 0002 DF93      		push r29
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 4
  26               		.cfi_offset 29, -3
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31 0004 EC01      		movw r28,r24
  95:quantum/process_keycode/process_tap_dance.c **** {
  96:quantum/process_keycode/process_tap_dance.c ****   if (action->state.finished)
  97:quantum/process_keycode/process_tap_dance.c ****     return;
  98:quantum/process_keycode/process_tap_dance.c ****   action->state.finished = true;
  32               		.loc 1 98 3 is_stmt 1 view .LVU2
  33               		.loc 1 98 26 is_stmt 0 view .LVU3
  34 0006 81E0      		ldi r24,lo8(1)
  35               	.LVL1:
  36               		.loc 1 98 26 view .LVU4
  37 0008 8F87      		std Y+15,r24
  99:quantum/process_keycode/process_tap_dance.c ****   add_mods(action->state.oneshot_mods);
  38               		.loc 1 99 3 is_stmt 1 view .LVU5
  39 000a 8F81      		ldd r24,Y+7
  40 000c 0E94 0000 		call add_mods
  41               	.LVL2:
 100:quantum/process_keycode/process_tap_dance.c ****   add_weak_mods(action->state.weak_mods);
  42               		.loc 1 100 3 view .LVU6
  43 0010 8885      		ldd r24,Y+8
  44 0012 0E94 0000 		call add_weak_mods
  45               	.LVL3:
 101:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
  46               		.loc 1 101 3 view .LVU7
  47 0016 0E94 0000 		call send_keyboard_report
  48               	.LVL4:
 102:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_dance_finished);
  49               		.loc 1 102 3 view .LVU8
  50 001a EA81      		ldd r30,Y+2
  51 001c FB81      		ldd r31,Y+3
  52               	.LVL5:
  53               	.LBB4:
  54               	.LBI4:
  80:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
  55               		.loc 1 80 20 view .LVU9
  56               	.LBB5:
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  57               		.loc 1 84 3 view .LVU10
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
  58               		.loc 1 84 6 is_stmt 0 view .LVU11
  59 001e 3097      		sbiw r30,0
  60 0020 01F0      		breq .L1
  85:quantum/process_keycode/process_tap_dance.c ****   }
  61               		.loc 1 85 5 is_stmt 1 view .LVU12
  62 0022 6A89      		ldd r22,Y+18
  63 0024 7B89      		ldd r23,Y+19
  64 0026 CE01      		movw r24,r28
  65 0028 0696      		adiw r24,6
  66               	.LVL6:
  67               	/* epilogue start */
  85:quantum/process_keycode/process_tap_dance.c ****   }
  68               		.loc 1 85 5 is_stmt 0 view .LVU13
  69               	.LBE5:
  70               	.LBE4:
 103:quantum/process_keycode/process_tap_dance.c **** }
  71               		.loc 1 103 1 view .LVU14
  72 002a DF91      		pop r29
  73 002c CF91      		pop r28
  74               	.LVL7:
  75               	.LBB7:
  76               	.LBB6:
  85:quantum/process_keycode/process_tap_dance.c ****   }
  77               		.loc 1 85 5 view .LVU15
  78 002e 0994      		ijmp
  79               	.LVL8:
  80               	.L1:
  81               	/* epilogue start */
  85:quantum/process_keycode/process_tap_dance.c ****   }
  82               		.loc 1 85 5 view .LVU16
  83               	.LBE6:
  84               	.LBE7:
  85               		.loc 1 103 1 view .LVU17
  86 0030 DF91      		pop r29
  87 0032 CF91      		pop r28
  88               	.LVL9:
  89               		.loc 1 103 1 view .LVU18
  90 0034 0895      		ret
  91               		.cfi_endproc
  92               	.LFE42:
  94               		.section	.text.rgblight_toggle,"ax",@progbits
  95               		.weak	rgblight_toggle
  97               	rgblight_toggle:
  98               	.LFB10:
  99               		.file 2 "./quantum/rgb.h"
   1:./quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:./quantum/rgb.h ****  *
   3:./quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:./quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:./quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:./quantum/rgb.h ****  * (at your option) any later version.
   7:./quantum/rgb.h ****  *
   8:./quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:./quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:./quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:./quantum/rgb.h ****  * GNU General Public License for more details.
  12:./quantum/rgb.h ****  *
  13:./quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:./quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:./quantum/rgb.h ****  */
  16:./quantum/rgb.h **** 
  17:./quantum/rgb.h **** #ifndef RGB_H
  18:./quantum/rgb.h **** #define RGB_H
  19:./quantum/rgb.h **** 
  20:./quantum/rgb.h **** __attribute__((weak))
  21:./quantum/rgb.h **** void rgblight_toggle(void) {};
 100               		.loc 2 21 28 is_stmt 1 view -0
 101               		.cfi_startproc
 102               	/* prologue: function */
 103               	/* frame size = 0 */
 104               	/* stack size = 0 */
 105               	.L__stack_usage = 0
 106               		.loc 2 21 29 view .LVU20
 107               	/* epilogue start */
 108               		.loc 2 21 1 is_stmt 0 view .LVU21
 109 0000 0895      		ret
 110               		.cfi_endproc
 111               	.LFE10:
 113               		.section	.text.rgblight_step,"ax",@progbits
 114               		.weak	rgblight_step
 116               	rgblight_step:
 117               	.LFB44:
 118               		.cfi_startproc
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
 123               	/* epilogue start */
 124 0000 0895      		ret
 125               		.cfi_endproc
 126               	.LFE44:
 128               		.section	.text.rgblight_step_reverse,"ax",@progbits
 129               		.weak	rgblight_step_reverse
 131               	rgblight_step_reverse:
 132               	.LFB46:
 133               		.cfi_startproc
 134               	/* prologue: function */
 135               	/* frame size = 0 */
 136               	/* stack size = 0 */
 137               	.L__stack_usage = 0
 138               	/* epilogue start */
 139 0000 0895      		ret
 140               		.cfi_endproc
 141               	.LFE46:
 143               		.section	.text.rgblight_increase_hue,"ax",@progbits
 144               		.weak	rgblight_increase_hue
 146               	rgblight_increase_hue:
 147               	.LFB48:
 148               		.cfi_startproc
 149               	/* prologue: function */
 150               	/* frame size = 0 */
 151               	/* stack size = 0 */
 152               	.L__stack_usage = 0
 153               	/* epilogue start */
 154 0000 0895      		ret
 155               		.cfi_endproc
 156               	.LFE48:
 158               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 159               		.weak	rgblight_decrease_hue
 161               	rgblight_decrease_hue:
 162               	.LFB50:
 163               		.cfi_startproc
 164               	/* prologue: function */
 165               	/* frame size = 0 */
 166               	/* stack size = 0 */
 167               	.L__stack_usage = 0
 168               	/* epilogue start */
 169 0000 0895      		ret
 170               		.cfi_endproc
 171               	.LFE50:
 173               		.section	.text.rgblight_increase_sat,"ax",@progbits
 174               		.weak	rgblight_increase_sat
 176               	rgblight_increase_sat:
 177               	.LFB52:
 178               		.cfi_startproc
 179               	/* prologue: function */
 180               	/* frame size = 0 */
 181               	/* stack size = 0 */
 182               	.L__stack_usage = 0
 183               	/* epilogue start */
 184 0000 0895      		ret
 185               		.cfi_endproc
 186               	.LFE52:
 188               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 189               		.weak	rgblight_decrease_sat
 191               	rgblight_decrease_sat:
 192               	.LFB54:
 193               		.cfi_startproc
 194               	/* prologue: function */
 195               	/* frame size = 0 */
 196               	/* stack size = 0 */
 197               	.L__stack_usage = 0
 198               	/* epilogue start */
 199 0000 0895      		ret
 200               		.cfi_endproc
 201               	.LFE54:
 203               		.section	.text.rgblight_increase_val,"ax",@progbits
 204               		.weak	rgblight_increase_val
 206               	rgblight_increase_val:
 207               	.LFB56:
 208               		.cfi_startproc
 209               	/* prologue: function */
 210               	/* frame size = 0 */
 211               	/* stack size = 0 */
 212               	.L__stack_usage = 0
 213               	/* epilogue start */
 214 0000 0895      		ret
 215               		.cfi_endproc
 216               	.LFE56:
 218               		.section	.text.rgblight_decrease_val,"ax",@progbits
 219               		.weak	rgblight_decrease_val
 221               	rgblight_decrease_val:
 222               	.LFB58:
 223               		.cfi_startproc
 224               	/* prologue: function */
 225               	/* frame size = 0 */
 226               	/* stack size = 0 */
 227               	.L__stack_usage = 0
 228               	/* epilogue start */
 229 0000 0895      		ret
 230               		.cfi_endproc
 231               	.LFE58:
 233               		.section	.text.rgblight_increase_speed,"ax",@progbits
 234               		.weak	rgblight_increase_speed
 236               	rgblight_increase_speed:
 237               	.LFB60:
 238               		.cfi_startproc
 239               	/* prologue: function */
 240               	/* frame size = 0 */
 241               	/* stack size = 0 */
 242               	.L__stack_usage = 0
 243               	/* epilogue start */
 244 0000 0895      		ret
 245               		.cfi_endproc
 246               	.LFE60:
 248               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 249               		.weak	rgblight_decrease_speed
 251               	rgblight_decrease_speed:
 252               	.LFB62:
 253               		.cfi_startproc
 254               	/* prologue: function */
 255               	/* frame size = 0 */
 256               	/* stack size = 0 */
 257               	.L__stack_usage = 0
 258               	/* epilogue start */
 259 0000 0895      		ret
 260               		.cfi_endproc
 261               	.LFE62:
 263               		.section	.text.qk_tap_dance_pair_on_each_tap,"ax",@progbits
 264               	.global	qk_tap_dance_pair_on_each_tap
 266               	qk_tap_dance_pair_on_each_tap:
 267               	.LVL10:
 268               	.LFB28:
  24:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 269               		.loc 1 24 83 is_stmt 1 view -0
 270               		.cfi_startproc
  24:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 271               		.loc 1 24 83 is_stmt 0 view .LVU23
 272 0000 CF93      		push r28
 273               	.LCFI2:
 274               		.cfi_def_cfa_offset 3
 275               		.cfi_offset 28, -2
 276 0002 DF93      		push r29
 277               	.LCFI3:
 278               		.cfi_def_cfa_offset 4
 279               		.cfi_offset 29, -3
 280               	/* prologue: function */
 281               	/* frame size = 0 */
 282               	/* stack size = 2 */
 283               	.L__stack_usage = 2
 284 0004 EC01      		movw r28,r24
 285 0006 FB01      		movw r30,r22
  25:quantum/process_keycode/process_tap_dance.c **** 
 286               		.loc 1 25 3 is_stmt 1 view .LVU24
 287               	.LVL11:
  27:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 288               		.loc 1 27 3 view .LVU25
  27:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 289               		.loc 1 27 6 is_stmt 0 view .LVU26
 290 0008 8881      		ld r24,Y
 291               	.LVL12:
  27:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 292               		.loc 1 27 6 view .LVU27
 293 000a 8230      		cpi r24,lo8(2)
 294 000c 01F4      		brne .L14
  28:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
 295               		.loc 1 28 5 is_stmt 1 view .LVU28
 296 000e 8281      		ldd r24,Z+2
 297 0010 9381      		ldd r25,Z+3
 298 0012 0E94 0000 		call register_code16
 299               	.LVL13:
  29:quantum/process_keycode/process_tap_dance.c ****   }
 300               		.loc 1 29 5 view .LVU29
  29:quantum/process_keycode/process_tap_dance.c ****   }
 301               		.loc 1 29 21 is_stmt 0 view .LVU30
 302 0016 81E0      		ldi r24,lo8(1)
 303 0018 8987      		std Y+9,r24
 304               	.L14:
 305               	/* epilogue start */
  31:quantum/process_keycode/process_tap_dance.c **** 
 306               		.loc 1 31 1 view .LVU31
 307 001a DF91      		pop r29
 308 001c CF91      		pop r28
 309               	.LVL14:
  31:quantum/process_keycode/process_tap_dance.c **** 
 310               		.loc 1 31 1 view .LVU32
 311 001e 0895      		ret
 312               		.cfi_endproc
 313               	.LFE28:
 315               		.section	.text.qk_tap_dance_pair_finished,"ax",@progbits
 316               	.global	qk_tap_dance_pair_finished
 318               	qk_tap_dance_pair_finished:
 319               	.LVL15:
 320               	.LFB29:
  33:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 321               		.loc 1 33 80 is_stmt 1 view -0
 322               		.cfi_startproc
 323               	/* prologue: function */
 324               	/* frame size = 0 */
 325               	/* stack size = 0 */
 326               	.L__stack_usage = 0
  33:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 327               		.loc 1 33 80 is_stmt 0 view .LVU34
 328 0000 FB01      		movw r30,r22
  34:quantum/process_keycode/process_tap_dance.c **** 
 329               		.loc 1 34 3 is_stmt 1 view .LVU35
 330               	.LVL16:
  36:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 331               		.loc 1 36 3 view .LVU36
  36:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 332               		.loc 1 36 12 is_stmt 0 view .LVU37
 333 0002 DC01      		movw r26,r24
 334 0004 8C91      		ld r24,X
 335               	.LVL17:
  36:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc1);
 336               		.loc 1 36 6 view .LVU38
 337 0006 8130      		cpi r24,lo8(1)
 338 0008 01F4      		brne .L17
  37:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 339               		.loc 1 37 5 is_stmt 1 view .LVU39
 340 000a 8081      		ld r24,Z
 341 000c 9181      		ldd r25,Z+1
 342               	.L19:
  39:quantum/process_keycode/process_tap_dance.c ****   }
 343               		.loc 1 39 5 is_stmt 0 view .LVU40
 344 000e 0C94 0000 		jmp register_code16
 345               	.LVL18:
 346               	.L17:
  38:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 347               		.loc 1 38 10 is_stmt 1 view .LVU41
  38:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc2);
 348               		.loc 1 38 13 is_stmt 0 view .LVU42
 349 0012 8230      		cpi r24,lo8(2)
 350 0014 01F4      		brne .L16
  39:quantum/process_keycode/process_tap_dance.c ****   }
 351               		.loc 1 39 5 is_stmt 1 view .LVU43
 352 0016 8281      		ldd r24,Z+2
 353 0018 9381      		ldd r25,Z+3
 354 001a 00C0      		rjmp .L19
 355               	.L16:
 356               	/* epilogue start */
  41:quantum/process_keycode/process_tap_dance.c **** 
 357               		.loc 1 41 1 is_stmt 0 view .LVU44
 358 001c 0895      		ret
 359               		.cfi_endproc
 360               	.LFE29:
 362               		.section	.text.qk_tap_dance_pair_reset,"ax",@progbits
 363               	.global	qk_tap_dance_pair_reset
 365               	qk_tap_dance_pair_reset:
 366               	.LVL19:
 367               	.LFB30:
  43:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 368               		.loc 1 43 77 is_stmt 1 view -0
 369               		.cfi_startproc
 370               	/* prologue: function */
 371               	/* frame size = 0 */
 372               	/* stack size = 0 */
 373               	.L__stack_usage = 0
  43:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_pair_t *pair = (qk_tap_dance_pair_t *)user_data;
 374               		.loc 1 43 77 is_stmt 0 view .LVU46
 375 0000 FB01      		movw r30,r22
  44:quantum/process_keycode/process_tap_dance.c **** 
 376               		.loc 1 44 3 is_stmt 1 view .LVU47
 377               	.LVL20:
  46:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 378               		.loc 1 46 3 view .LVU48
  46:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 379               		.loc 1 46 12 is_stmt 0 view .LVU49
 380 0002 DC01      		movw r26,r24
 381 0004 8C91      		ld r24,X
 382               	.LVL21:
  46:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc1);
 383               		.loc 1 46 6 view .LVU50
 384 0006 8130      		cpi r24,lo8(1)
 385 0008 01F4      		brne .L21
  47:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 386               		.loc 1 47 5 is_stmt 1 view .LVU51
 387 000a 8081      		ld r24,Z
 388 000c 9181      		ldd r25,Z+1
 389               	.L23:
  49:quantum/process_keycode/process_tap_dance.c ****   }
 390               		.loc 1 49 5 is_stmt 0 view .LVU52
 391 000e 0C94 0000 		jmp unregister_code16
 392               	.LVL22:
 393               	.L21:
  48:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
 394               		.loc 1 48 10 is_stmt 1 view .LVU53
  48:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc2);
 395               		.loc 1 48 13 is_stmt 0 view .LVU54
 396 0012 8230      		cpi r24,lo8(2)
 397 0014 01F4      		brne .L20
  49:quantum/process_keycode/process_tap_dance.c ****   }
 398               		.loc 1 49 5 is_stmt 1 view .LVU55
 399 0016 8281      		ldd r24,Z+2
 400 0018 9381      		ldd r25,Z+3
 401 001a 00C0      		rjmp .L23
 402               	.L20:
 403               	/* epilogue start */
  51:quantum/process_keycode/process_tap_dance.c **** 
 404               		.loc 1 51 1 is_stmt 0 view .LVU56
 405 001c 0895      		ret
 406               		.cfi_endproc
 407               	.LFE30:
 409               		.section	.text.qk_tap_dance_dual_role_on_each_tap,"ax",@progbits
 410               	.global	qk_tap_dance_dual_role_on_each_tap
 412               	qk_tap_dance_dual_role_on_each_tap:
 413               	.LVL23:
 414               	.LFB31:
  53:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 415               		.loc 1 53 88 is_stmt 1 view -0
 416               		.cfi_startproc
  53:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 417               		.loc 1 53 88 is_stmt 0 view .LVU58
 418 0000 CF93      		push r28
 419               	.LCFI4:
 420               		.cfi_def_cfa_offset 3
 421               		.cfi_offset 28, -2
 422 0002 DF93      		push r29
 423               	.LCFI5:
 424               		.cfi_def_cfa_offset 4
 425               		.cfi_offset 29, -3
 426               	/* prologue: function */
 427               	/* frame size = 0 */
 428               	/* stack size = 2 */
 429               	.L__stack_usage = 2
 430 0004 EC01      		movw r28,r24
 431 0006 FB01      		movw r30,r22
  54:quantum/process_keycode/process_tap_dance.c **** 
 432               		.loc 1 54 3 is_stmt 1 view .LVU59
 433               	.LVL24:
  56:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 434               		.loc 1 56 3 view .LVU60
  56:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 435               		.loc 1 56 6 is_stmt 0 view .LVU61
 436 0008 8881      		ld r24,Y
 437               	.LVL25:
  56:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 438               		.loc 1 56 6 view .LVU62
 439 000a 8230      		cpi r24,lo8(2)
 440 000c 01F4      		brne .L24
  57:quantum/process_keycode/process_tap_dance.c ****     state->finished = true;
 441               		.loc 1 57 5 is_stmt 1 view .LVU63
 442 000e 8281      		ldd r24,Z+2
 443 0010 0E94 0000 		call layer_move
 444               	.LVL26:
  58:quantum/process_keycode/process_tap_dance.c ****   }
 445               		.loc 1 58 5 view .LVU64
  58:quantum/process_keycode/process_tap_dance.c ****   }
 446               		.loc 1 58 21 is_stmt 0 view .LVU65
 447 0014 81E0      		ldi r24,lo8(1)
 448 0016 8987      		std Y+9,r24
 449               	.L24:
 450               	/* epilogue start */
  60:quantum/process_keycode/process_tap_dance.c **** 
 451               		.loc 1 60 1 view .LVU66
 452 0018 DF91      		pop r29
 453 001a CF91      		pop r28
 454               	.LVL27:
  60:quantum/process_keycode/process_tap_dance.c **** 
 455               		.loc 1 60 1 view .LVU67
 456 001c 0895      		ret
 457               		.cfi_endproc
 458               	.LFE31:
 460               		.section	.text.qk_tap_dance_dual_role_finished,"ax",@progbits
 461               	.global	qk_tap_dance_dual_role_finished
 463               	qk_tap_dance_dual_role_finished:
 464               	.LVL28:
 465               	.LFB32:
  62:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 466               		.loc 1 62 85 is_stmt 1 view -0
 467               		.cfi_startproc
 468               	/* prologue: function */
 469               	/* frame size = 0 */
 470               	/* stack size = 0 */
 471               	.L__stack_usage = 0
  62:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 472               		.loc 1 62 85 is_stmt 0 view .LVU69
 473 0000 FB01      		movw r30,r22
  63:quantum/process_keycode/process_tap_dance.c **** 
 474               		.loc 1 63 3 is_stmt 1 view .LVU70
 475               	.LVL29:
  65:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 476               		.loc 1 65 3 view .LVU71
  65:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 477               		.loc 1 65 12 is_stmt 0 view .LVU72
 478 0002 DC01      		movw r26,r24
 479 0004 8C91      		ld r24,X
 480               	.LVL30:
  65:quantum/process_keycode/process_tap_dance.c ****     register_code16 (pair->kc);
 481               		.loc 1 65 6 view .LVU73
 482 0006 8130      		cpi r24,lo8(1)
 483 0008 01F4      		brne .L27
  66:quantum/process_keycode/process_tap_dance.c ****   } else if (state->count == 2) {
 484               		.loc 1 66 5 is_stmt 1 view .LVU74
 485 000a 8081      		ld r24,Z
 486 000c 9181      		ldd r25,Z+1
 487 000e 0C94 0000 		jmp register_code16
 488               	.LVL31:
 489               	.L27:
  67:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 490               		.loc 1 67 10 view .LVU75
  67:quantum/process_keycode/process_tap_dance.c ****     layer_move (pair->layer);
 491               		.loc 1 67 13 is_stmt 0 view .LVU76
 492 0012 8230      		cpi r24,lo8(2)
 493 0014 01F4      		brne .L26
  68:quantum/process_keycode/process_tap_dance.c ****   }
 494               		.loc 1 68 5 is_stmt 1 view .LVU77
 495 0016 8281      		ldd r24,Z+2
 496 0018 0C94 0000 		jmp layer_move
 497               	.LVL32:
 498               	.L26:
 499               	/* epilogue start */
  70:quantum/process_keycode/process_tap_dance.c **** 
 500               		.loc 1 70 1 is_stmt 0 view .LVU78
 501 001c 0895      		ret
 502               		.cfi_endproc
 503               	.LFE32:
 505               		.section	.text.qk_tap_dance_dual_role_reset,"ax",@progbits
 506               	.global	qk_tap_dance_dual_role_reset
 508               	qk_tap_dance_dual_role_reset:
 509               	.LVL33:
 510               	.LFB33:
  72:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 511               		.loc 1 72 82 is_stmt 1 view -0
 512               		.cfi_startproc
 513               	/* prologue: function */
 514               	/* frame size = 0 */
 515               	/* stack size = 0 */
 516               	.L__stack_usage = 0
  72:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_dual_role_t *pair = (qk_tap_dance_dual_role_t *)user_data;
 517               		.loc 1 72 82 is_stmt 0 view .LVU80
 518 0000 FB01      		movw r30,r22
  73:quantum/process_keycode/process_tap_dance.c **** 
 519               		.loc 1 73 3 is_stmt 1 view .LVU81
 520               	.LVL34:
  75:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 521               		.loc 1 75 3 view .LVU82
  75:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 522               		.loc 1 75 6 is_stmt 0 view .LVU83
 523 0002 DC01      		movw r26,r24
 524 0004 8C91      		ld r24,X
 525               	.LVL35:
  75:quantum/process_keycode/process_tap_dance.c ****     unregister_code16 (pair->kc);
 526               		.loc 1 75 6 view .LVU84
 527 0006 8130      		cpi r24,lo8(1)
 528 0008 01F4      		brne .L29
  76:quantum/process_keycode/process_tap_dance.c ****   }
 529               		.loc 1 76 5 is_stmt 1 view .LVU85
 530 000a 8081      		ld r24,Z
 531 000c 9181      		ldd r25,Z+1
 532 000e 0C94 0000 		jmp unregister_code16
 533               	.LVL36:
 534               	.L29:
 535               	/* epilogue start */
  78:quantum/process_keycode/process_tap_dance.c **** 
 536               		.loc 1 78 1 is_stmt 0 view .LVU86
 537 0012 0895      		ret
 538               		.cfi_endproc
 539               	.LFE33:
 541               		.section	.text.reset_tap_dance,"ax",@progbits
 542               	.global	reset_tap_dance
 544               	reset_tap_dance:
 545               	.LVL37:
 546               	.LFB41:
 104:quantum/process_keycode/process_tap_dance.c **** 
 105:quantum/process_keycode/process_tap_dance.c **** static inline void process_tap_dance_action_on_reset (qk_tap_dance_action_t *action)
 106:quantum/process_keycode/process_tap_dance.c **** {
 107:quantum/process_keycode/process_tap_dance.c ****   _process_tap_dance_action_fn (&action->state, action->user_data, action->fn.on_reset);
 108:quantum/process_keycode/process_tap_dance.c ****   del_mods(action->state.oneshot_mods);
 109:quantum/process_keycode/process_tap_dance.c ****   del_weak_mods(action->state.weak_mods);
 110:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
 111:quantum/process_keycode/process_tap_dance.c **** }
 112:quantum/process_keycode/process_tap_dance.c **** 
 113:quantum/process_keycode/process_tap_dance.c **** void preprocess_tap_dance(uint16_t keycode, keyrecord_t *record) {
 114:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 115:quantum/process_keycode/process_tap_dance.c **** 
 116:quantum/process_keycode/process_tap_dance.c ****   if (!record->event.pressed)
 117:quantum/process_keycode/process_tap_dance.c ****     return;
 118:quantum/process_keycode/process_tap_dance.c **** 
 119:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 120:quantum/process_keycode/process_tap_dance.c ****     return;
 121:quantum/process_keycode/process_tap_dance.c **** 
 122:quantum/process_keycode/process_tap_dance.c ****   for (int i = 0; i <= highest_td; i++) {
 123:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 124:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count) {
 125:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 126:quantum/process_keycode/process_tap_dance.c ****         continue;
 127:quantum/process_keycode/process_tap_dance.c ****       action->state.interrupted = true;
 128:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 129:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 130:quantum/process_keycode/process_tap_dance.c ****     }
 131:quantum/process_keycode/process_tap_dance.c ****   }
 132:quantum/process_keycode/process_tap_dance.c **** }
 133:quantum/process_keycode/process_tap_dance.c **** 
 134:quantum/process_keycode/process_tap_dance.c **** bool process_tap_dance(uint16_t keycode, keyrecord_t *record) {
 135:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 136:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 137:quantum/process_keycode/process_tap_dance.c **** 
 138:quantum/process_keycode/process_tap_dance.c ****   switch(keycode) {
 139:quantum/process_keycode/process_tap_dance.c ****   case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 140:quantum/process_keycode/process_tap_dance.c ****     if ((int16_t)idx > highest_td)
 141:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 142:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 143:quantum/process_keycode/process_tap_dance.c **** 
 144:quantum/process_keycode/process_tap_dance.c ****     action->state.pressed = record->event.pressed;
 145:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 146:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 147:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 151:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 152:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 153:quantum/process_keycode/process_tap_dance.c **** 
 154:quantum/process_keycode/process_tap_dance.c ****       last_td = keycode;
 155:quantum/process_keycode/process_tap_dance.c ****     } else {
 156:quantum/process_keycode/process_tap_dance.c ****       if (action->state.count && action->state.finished) {
 157:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 158:quantum/process_keycode/process_tap_dance.c ****       }
 159:quantum/process_keycode/process_tap_dance.c ****     }
 160:quantum/process_keycode/process_tap_dance.c **** 
 161:quantum/process_keycode/process_tap_dance.c ****     break;
 162:quantum/process_keycode/process_tap_dance.c ****   }
 163:quantum/process_keycode/process_tap_dance.c **** 
 164:quantum/process_keycode/process_tap_dance.c ****   return true;
 165:quantum/process_keycode/process_tap_dance.c **** }
 166:quantum/process_keycode/process_tap_dance.c **** 
 167:quantum/process_keycode/process_tap_dance.c **** 
 168:quantum/process_keycode/process_tap_dance.c **** 
 169:quantum/process_keycode/process_tap_dance.c **** void matrix_scan_tap_dance () {
 170:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 171:quantum/process_keycode/process_tap_dance.c ****     return;
 172:quantum/process_keycode/process_tap_dance.c ****   uint16_t tap_user_defined;
 173:quantum/process_keycode/process_tap_dance.c **** 
 174:quantum/process_keycode/process_tap_dance.c ****   for (uint8_t i = 0; i <= highest_td; i++) {
 175:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 176:quantum/process_keycode/process_tap_dance.c ****     if(action->custom_tapping_term > 0 ) {
 177:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 178:quantum/process_keycode/process_tap_dance.c ****     }
 179:quantum/process_keycode/process_tap_dance.c ****     else{
 180:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = TAPPING_TERM;
 181:quantum/process_keycode/process_tap_dance.c ****     }
 182:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count && timer_elapsed (action->state.timer) > tap_user_defined) {
 183:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 184:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 185:quantum/process_keycode/process_tap_dance.c ****     }
 186:quantum/process_keycode/process_tap_dance.c ****   }
 187:quantum/process_keycode/process_tap_dance.c **** }
 188:quantum/process_keycode/process_tap_dance.c **** 
 189:quantum/process_keycode/process_tap_dance.c **** void reset_tap_dance (qk_tap_dance_state_t *state) {
 547               		.loc 1 189 52 is_stmt 1 view -0
 548               		.cfi_startproc
 549               		.loc 1 189 52 is_stmt 0 view .LVU88
 550 0000 EF92      		push r14
 551               	.LCFI6:
 552               		.cfi_def_cfa_offset 3
 553               		.cfi_offset 14, -2
 554 0002 FF92      		push r15
 555               	.LCFI7:
 556               		.cfi_def_cfa_offset 4
 557               		.cfi_offset 15, -3
 558 0004 0F93      		push r16
 559               	.LCFI8:
 560               		.cfi_def_cfa_offset 5
 561               		.cfi_offset 16, -4
 562 0006 1F93      		push r17
 563               	.LCFI9:
 564               		.cfi_def_cfa_offset 6
 565               		.cfi_offset 17, -5
 566 0008 CF93      		push r28
 567               	.LCFI10:
 568               		.cfi_def_cfa_offset 7
 569               		.cfi_offset 28, -6
 570 000a DF93      		push r29
 571               	.LCFI11:
 572               		.cfi_def_cfa_offset 8
 573               		.cfi_offset 29, -7
 574               	/* prologue: function */
 575               	/* frame size = 0 */
 576               	/* stack size = 6 */
 577               	.L__stack_usage = 6
 578 000c EC01      		movw r28,r24
 190:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 579               		.loc 1 190 3 is_stmt 1 view .LVU89
 191:quantum/process_keycode/process_tap_dance.c **** 
 192:quantum/process_keycode/process_tap_dance.c ****   if (state->pressed)
 580               		.loc 1 192 3 view .LVU90
 581               		.loc 1 192 6 is_stmt 0 view .LVU91
 582 000e 8885      		ldd r24,Y+8
 583               	.LVL38:
 584               		.loc 1 192 6 view .LVU92
 585 0010 8111      		cpse r24,__zero_reg__
 586 0012 00C0      		rjmp .L31
 193:quantum/process_keycode/process_tap_dance.c ****     return;
 194:quantum/process_keycode/process_tap_dance.c **** 
 195:quantum/process_keycode/process_tap_dance.c ****   action = &tap_dance_actions[state->keycode - QK_TAP_DANCE];
 587               		.loc 1 195 3 is_stmt 1 view .LVU93
 588               		.loc 1 195 46 is_stmt 0 view .LVU94
 589 0014 EB80      		ldd r14,Y+3
 590 0016 FC80      		ldd r15,Y+4
 591 0018 87E5      		ldi r24,87
 592 001a F81A      		sub r15,r24
 593               	.LVL39:
 196:quantum/process_keycode/process_tap_dance.c **** 
 197:quantum/process_keycode/process_tap_dance.c ****   process_tap_dance_action_on_reset (action);
 594               		.loc 1 197 3 is_stmt 1 view .LVU95
 595               	.LBB12:
 596               	.LBI12:
 105:quantum/process_keycode/process_tap_dance.c **** {
 597               		.loc 1 105 20 view .LVU96
 598               	.LBB13:
 107:quantum/process_keycode/process_tap_dance.c ****   del_mods(action->state.oneshot_mods);
 599               		.loc 1 107 3 view .LVU97
 600 001c 24E1      		ldi r18,lo8(20)
 601 001e 2E9D      		mul r18,r14
 602 0020 C001      		movw r24,r0
 603 0022 2F9D      		mul r18,r15
 604 0024 900D      		add r25,r0
 605 0026 1124      		clr __zero_reg__
 606 0028 DC01      		movw r26,r24
 607 002a A050      		subi r26,lo8(-(tap_dance_actions))
 608 002c B040      		sbci r27,hi8(-(tap_dance_actions))
 609 002e 1496      		adiw r26,4
 610 0030 ED91      		ld r30,X+
 611 0032 FC91      		ld r31,X
 612 0034 1597      		sbiw r26,4+1
 613               	.LVL40:
 614               	.LBB14:
 615               	.LBI14:
  80:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
 616               		.loc 1 80 20 view .LVU98
 617               	.LBB15:
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 618               		.loc 1 84 3 view .LVU99
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 619               		.loc 1 84 6 is_stmt 0 view .LVU100
 620 0036 3097      		sbiw r30,0
 621 0038 01F0      		breq .L33
  85:quantum/process_keycode/process_tap_dance.c ****   }
 622               		.loc 1 85 5 is_stmt 1 view .LVU101
 623 003a 5296      		adiw r26,18
 624 003c 6D91      		ld r22,X+
 625 003e 7C91      		ld r23,X
 626 0040 8050      		subi r24,lo8(-(tap_dance_actions+6))
 627 0042 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 628 0044 0995      		icall
 629               	.LVL41:
 630               	.L33:
  85:quantum/process_keycode/process_tap_dance.c ****   }
 631               		.loc 1 85 5 is_stmt 0 view .LVU102
 632               	.LBE15:
 633               	.LBE14:
 108:quantum/process_keycode/process_tap_dance.c ****   del_weak_mods(action->state.weak_mods);
 634               		.loc 1 108 3 is_stmt 1 view .LVU103
 635 0046 84E1      		ldi r24,lo8(20)
 636 0048 8E9D      		mul r24,r14
 637 004a 8001      		movw r16,r0
 638 004c 8F9D      		mul r24,r15
 639 004e 100D      		add r17,r0
 640 0050 1124      		clr __zero_reg__
 641 0052 0050      		subi r16,lo8(-(tap_dance_actions))
 642 0054 1040      		sbci r17,hi8(-(tap_dance_actions))
 643 0056 F801      		movw r30,r16
 644 0058 8781      		ldd r24,Z+7
 645 005a 0E94 0000 		call del_mods
 646               	.LVL42:
 109:quantum/process_keycode/process_tap_dance.c ****   send_keyboard_report();
 647               		.loc 1 109 3 view .LVU104
 648 005e F801      		movw r30,r16
 649 0060 8085      		ldd r24,Z+8
 650 0062 0E94 0000 		call del_weak_mods
 651               	.LVL43:
 110:quantum/process_keycode/process_tap_dance.c **** }
 652               		.loc 1 110 3 view .LVU105
 653 0066 0E94 0000 		call send_keyboard_report
 654               	.LVL44:
 110:quantum/process_keycode/process_tap_dance.c **** }
 655               		.loc 1 110 3 is_stmt 0 view .LVU106
 656               	.LBE13:
 657               	.LBE12:
 198:quantum/process_keycode/process_tap_dance.c **** 
 199:quantum/process_keycode/process_tap_dance.c ****   state->count = 0;
 658               		.loc 1 199 3 is_stmt 1 view .LVU107
 659               		.loc 1 199 16 is_stmt 0 view .LVU108
 660 006a 1882      		st Y,__zero_reg__
 200:quantum/process_keycode/process_tap_dance.c ****   state->interrupted = false;
 661               		.loc 1 200 3 is_stmt 1 view .LVU109
 662               		.loc 1 200 22 is_stmt 0 view .LVU110
 663 006c 1F82      		std Y+7,__zero_reg__
 201:quantum/process_keycode/process_tap_dance.c ****   state->finished = false;
 664               		.loc 1 201 3 is_stmt 1 view .LVU111
 665               		.loc 1 201 19 is_stmt 0 view .LVU112
 666 006e 1986      		std Y+9,__zero_reg__
 202:quantum/process_keycode/process_tap_dance.c ****   last_td = 0;
 667               		.loc 1 202 3 is_stmt 1 view .LVU113
 668               		.loc 1 202 11 is_stmt 0 view .LVU114
 669 0070 1092 0000 		sts last_td+1,__zero_reg__
 670 0074 1092 0000 		sts last_td,__zero_reg__
 671               	.LVL45:
 672               	.L31:
 673               	/* epilogue start */
 203:quantum/process_keycode/process_tap_dance.c **** }
 674               		.loc 1 203 1 view .LVU115
 675 0078 DF91      		pop r29
 676 007a CF91      		pop r28
 677               	.LVL46:
 678               		.loc 1 203 1 view .LVU116
 679 007c 1F91      		pop r17
 680 007e 0F91      		pop r16
 681 0080 FF90      		pop r15
 682 0082 EF90      		pop r14
 683 0084 0895      		ret
 684               		.cfi_endproc
 685               	.LFE41:
 687               		.section	.text.preprocess_tap_dance,"ax",@progbits
 688               	.global	preprocess_tap_dance
 690               	preprocess_tap_dance:
 691               	.LVL47:
 692               	.LFB38:
 113:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 693               		.loc 1 113 66 is_stmt 1 view -0
 694               		.cfi_startproc
 113:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 695               		.loc 1 113 66 is_stmt 0 view .LVU118
 696 0000 DF92      		push r13
 697               	.LCFI12:
 698               		.cfi_def_cfa_offset 3
 699               		.cfi_offset 13, -2
 700 0002 EF92      		push r14
 701               	.LCFI13:
 702               		.cfi_def_cfa_offset 4
 703               		.cfi_offset 14, -3
 704 0004 FF92      		push r15
 705               	.LCFI14:
 706               		.cfi_def_cfa_offset 5
 707               		.cfi_offset 15, -4
 708 0006 0F93      		push r16
 709               	.LCFI15:
 710               		.cfi_def_cfa_offset 6
 711               		.cfi_offset 16, -5
 712 0008 1F93      		push r17
 713               	.LCFI16:
 714               		.cfi_def_cfa_offset 7
 715               		.cfi_offset 17, -6
 716 000a CF93      		push r28
 717               	.LCFI17:
 718               		.cfi_def_cfa_offset 8
 719               		.cfi_offset 28, -7
 720 000c DF93      		push r29
 721               	.LCFI18:
 722               		.cfi_def_cfa_offset 9
 723               		.cfi_offset 29, -8
 724               	/* prologue: function */
 725               	/* frame size = 0 */
 726               	/* stack size = 7 */
 727               	.L__stack_usage = 7
 728 000e 8C01      		movw r16,r24
 114:quantum/process_keycode/process_tap_dance.c **** 
 729               		.loc 1 114 3 is_stmt 1 view .LVU119
 116:quantum/process_keycode/process_tap_dance.c ****     return;
 730               		.loc 1 116 3 view .LVU120
 116:quantum/process_keycode/process_tap_dance.c ****     return;
 731               		.loc 1 116 6 is_stmt 0 view .LVU121
 732 0010 FB01      		movw r30,r22
 733 0012 8281      		ldd r24,Z+2
 734               	.LVL48:
 116:quantum/process_keycode/process_tap_dance.c ****     return;
 735               		.loc 1 116 6 view .LVU122
 736 0014 8823      		tst r24
 737 0016 01F0      		breq .L37
 119:quantum/process_keycode/process_tap_dance.c ****     return;
 738               		.loc 1 119 3 is_stmt 1 view .LVU123
 119:quantum/process_keycode/process_tap_dance.c ****     return;
 739               		.loc 1 119 6 is_stmt 0 view .LVU124
 740 0018 8091 0000 		lds r24,highest_td
 741 001c 8F3F      		cpi r24,lo8(-1)
 742 001e 01F0      		breq .L37
 743 0020 C0E0      		ldi r28,lo8(tap_dance_actions)
 744 0022 D0E0      		ldi r29,hi8(tap_dance_actions)
 745               	.LBB19:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 746               		.loc 1 122 12 view .LVU125
 747 0024 F12C      		mov r15,__zero_reg__
 748 0026 E12C      		mov r14,__zero_reg__
 127:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 749               		.loc 1 127 33 view .LVU126
 750 0028 DD24      		clr r13
 751 002a D394      		inc r13
 752               	.LVL49:
 753               	.L40:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 754               		.loc 1 122 19 is_stmt 1 discriminator 1 view .LVU127
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 755               		.loc 1 122 21 is_stmt 0 discriminator 1 view .LVU128
 756 002c 8091 0000 		lds r24,highest_td
 757 0030 082E      		mov __tmp_reg__,r24
 758 0032 000C      		lsl r0
 759 0034 990B      		sbc r25,r25
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 760               		.loc 1 122 3 discriminator 1 view .LVU129
 761 0036 8E15      		cp r24,r14
 762 0038 9F05      		cpc r25,r15
 763 003a 04F4      		brge .L44
 764               	.LVL50:
 765               	.L37:
 766               	/* epilogue start */
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 767               		.loc 1 122 3 discriminator 1 view .LVU130
 768               	.LBE19:
 132:quantum/process_keycode/process_tap_dance.c **** 
 769               		.loc 1 132 1 view .LVU131
 770 003c DF91      		pop r29
 771 003e CF91      		pop r28
 772 0040 1F91      		pop r17
 773 0042 0F91      		pop r16
 774               	.LVL51:
 132:quantum/process_keycode/process_tap_dance.c **** 
 775               		.loc 1 132 1 view .LVU132
 776 0044 FF90      		pop r15
 777 0046 EF90      		pop r14
 778 0048 DF90      		pop r13
 779 004a 0895      		ret
 780               	.LVL52:
 781               	.L44:
 782               	.LBB22:
 123:quantum/process_keycode/process_tap_dance.c ****     if (action->state.count) {
 783               		.loc 1 123 5 is_stmt 1 view .LVU133
 124:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 784               		.loc 1 124 5 view .LVU134
 124:quantum/process_keycode/process_tap_dance.c ****       if (keycode == action->state.keycode && keycode == last_td)
 785               		.loc 1 124 8 is_stmt 0 view .LVU135
 786 004c 8E81      		ldd r24,Y+6
 787 004e 8823      		tst r24
 788 0050 01F0      		breq .L41
 125:quantum/process_keycode/process_tap_dance.c ****         continue;
 789               		.loc 1 125 7 is_stmt 1 view .LVU136
 125:quantum/process_keycode/process_tap_dance.c ****         continue;
 790               		.loc 1 125 10 is_stmt 0 view .LVU137
 791 0052 8985      		ldd r24,Y+9
 792 0054 9A85      		ldd r25,Y+10
 793 0056 8017      		cp r24,r16
 794 0058 9107      		cpc r25,r17
 795 005a 01F4      		brne .L42
 125:quantum/process_keycode/process_tap_dance.c ****         continue;
 796               		.loc 1 125 44 discriminator 1 view .LVU138
 797 005c 8091 0000 		lds r24,last_td
 798 0060 9091 0000 		lds r25,last_td+1
 799 0064 8017      		cp r24,r16
 800 0066 9107      		cpc r25,r17
 801 0068 01F0      		breq .L41
 802               	.L42:
 127:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 803               		.loc 1 127 7 is_stmt 1 view .LVU139
 127:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 804               		.loc 1 127 33 is_stmt 0 view .LVU140
 805 006a DD86      		std Y+13,r13
 128:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 806               		.loc 1 128 7 is_stmt 1 view .LVU141
 807               	.LVL53:
 808               	.LBB20:
 809               	.LBI20:
  94:quantum/process_keycode/process_tap_dance.c **** {
 810               		.loc 1 94 20 view .LVU142
 811               	.LBB21:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 812               		.loc 1 96 3 view .LVU143
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 813               		.loc 1 96 6 is_stmt 0 view .LVU144
 814 006c 8F85      		ldd r24,Y+15
 815 006e 8111      		cpse r24,__zero_reg__
 816 0070 00C0      		rjmp .L43
 817 0072 CE01      		movw r24,r28
 818 0074 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 819               	.LVL54:
 820               	.L43:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 821               		.loc 1 96 6 view .LVU145
 822               	.LBE21:
 823               	.LBE20:
 129:quantum/process_keycode/process_tap_dance.c ****     }
 824               		.loc 1 129 7 is_stmt 1 view .LVU146
 825 0078 CE01      		movw r24,r28
 826 007a 0696      		adiw r24,6
 827 007c 0E94 0000 		call reset_tap_dance
 828               	.LVL55:
 829               	.L41:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 830               		.loc 1 122 36 discriminator 2 view .LVU147
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 831               		.loc 1 122 37 is_stmt 0 discriminator 2 view .LVU148
 832 0080 FFEF      		ldi r31,-1
 833 0082 EF1A      		sub r14,r31
 834 0084 FF0A      		sbc r15,r31
 835               	.LVL56:
 122:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[i];
 836               		.loc 1 122 37 discriminator 2 view .LVU149
 837 0086 6496      		adiw r28,20
 838 0088 00C0      		rjmp .L40
 839               	.LBE22:
 840               		.cfi_endproc
 841               	.LFE38:
 843               		.section	.text.process_tap_dance,"ax",@progbits
 844               	.global	process_tap_dance
 846               	process_tap_dance:
 847               	.LVL57:
 848               	.LFB39:
 134:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 849               		.loc 1 134 63 is_stmt 1 view -0
 850               		.cfi_startproc
 134:quantum/process_keycode/process_tap_dance.c ****   uint16_t idx = keycode - QK_TAP_DANCE;
 851               		.loc 1 134 63 is_stmt 0 view .LVU151
 852 0000 EF92      		push r14
 853               	.LCFI19:
 854               		.cfi_def_cfa_offset 3
 855               		.cfi_offset 14, -2
 856 0002 FF92      		push r15
 857               	.LCFI20:
 858               		.cfi_def_cfa_offset 4
 859               		.cfi_offset 15, -3
 860 0004 0F93      		push r16
 861               	.LCFI21:
 862               		.cfi_def_cfa_offset 5
 863               		.cfi_offset 16, -4
 864 0006 1F93      		push r17
 865               	.LCFI22:
 866               		.cfi_def_cfa_offset 6
 867               		.cfi_offset 17, -5
 868 0008 CF93      		push r28
 869               	.LCFI23:
 870               		.cfi_def_cfa_offset 7
 871               		.cfi_offset 28, -6
 872 000a DF93      		push r29
 873               	.LCFI24:
 874               		.cfi_def_cfa_offset 8
 875               		.cfi_offset 29, -7
 876               	/* prologue: function */
 877               	/* frame size = 0 */
 878               	/* stack size = 6 */
 879               	.L__stack_usage = 6
 880 000c 8C01      		movw r16,r24
 881 000e FB01      		movw r30,r22
 135:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 882               		.loc 1 135 3 is_stmt 1 view .LVU152
 135:quantum/process_keycode/process_tap_dance.c ****   qk_tap_dance_action_t *action;
 883               		.loc 1 135 12 is_stmt 0 view .LVU153
 884 0010 9755      		subi r25,87
 885               	.LVL58:
 136:quantum/process_keycode/process_tap_dance.c **** 
 886               		.loc 1 136 3 is_stmt 1 view .LVU154
 138:quantum/process_keycode/process_tap_dance.c ****   case QK_TAP_DANCE ... QK_TAP_DANCE_MAX:
 887               		.loc 1 138 3 view .LVU155
 888 0012 8F3F      		cpi r24,-1
 889 0014 9105      		cpc r25,__zero_reg__
 890 0016 01F0      		breq .+2
 891 0018 00F4      		brsh .L53
 140:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 892               		.loc 1 140 5 view .LVU156
 140:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 893               		.loc 1 140 22 is_stmt 0 view .LVU157
 894 001a 2091 0000 		lds r18,highest_td
 895 001e 022E      		mov __tmp_reg__,r18
 896 0020 000C      		lsl r0
 897 0022 330B      		sbc r19,r19
 140:quantum/process_keycode/process_tap_dance.c ****       highest_td = idx;
 898               		.loc 1 140 8 view .LVU158
 899 0024 2817      		cp r18,r24
 900 0026 3907      		cpc r19,r25
 901 0028 04F4      		brge .L54
 141:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 902               		.loc 1 141 7 is_stmt 1 view .LVU159
 141:quantum/process_keycode/process_tap_dance.c ****     action = &tap_dance_actions[idx];
 903               		.loc 1 141 18 is_stmt 0 view .LVU160
 904 002a 8093 0000 		sts highest_td,r24
 905               	.L54:
 142:quantum/process_keycode/process_tap_dance.c **** 
 906               		.loc 1 142 5 is_stmt 1 view .LVU161
 907               	.LVL59:
 144:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 908               		.loc 1 144 5 view .LVU162
 144:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 909               		.loc 1 144 42 is_stmt 0 view .LVU163
 910 002e 2281      		ldd r18,Z+2
 144:quantum/process_keycode/process_tap_dance.c ****     if (record->event.pressed) {
 911               		.loc 1 144 27 view .LVU164
 912 0030 34E1      		ldi r19,lo8(20)
 913 0032 389F      		mul r19,r24
 914 0034 7001      		movw r14,r0
 915 0036 399F      		mul r19,r25
 916 0038 F00C      		add r15,r0
 917 003a 1124      		clr __zero_reg__
 918 003c E701      		movw r28,r14
 919 003e C050      		subi r28,lo8(-(tap_dance_actions))
 920 0040 D040      		sbci r29,hi8(-(tap_dance_actions))
 921 0042 2E87      		std Y+14,r18
 145:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 922               		.loc 1 145 5 is_stmt 1 view .LVU165
 145:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 923               		.loc 1 145 8 is_stmt 0 view .LVU166
 924 0044 9281      		ldd r25,Z+2
 925 0046 8E81      		ldd r24,Y+6
 926               	.LVL60:
 145:quantum/process_keycode/process_tap_dance.c ****       action->state.keycode = keycode;
 927               		.loc 1 145 8 view .LVU167
 928 0048 9923      		tst r25
 929 004a 01F0      		breq .L55
 146:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 930               		.loc 1 146 7 is_stmt 1 view .LVU168
 146:quantum/process_keycode/process_tap_dance.c ****       action->state.count++;
 931               		.loc 1 146 29 is_stmt 0 view .LVU169
 932 004c 1A87      		std Y+10,r17
 933 004e 0987      		std Y+9,r16
 147:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 934               		.loc 1 147 7 is_stmt 1 view .LVU170
 147:quantum/process_keycode/process_tap_dance.c ****       action->state.timer = timer_read();
 935               		.loc 1 147 26 is_stmt 0 view .LVU171
 936 0050 8F5F      		subi r24,lo8(-(1))
 937 0052 8E83      		std Y+6,r24
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 938               		.loc 1 148 7 is_stmt 1 view .LVU172
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 939               		.loc 1 148 29 is_stmt 0 view .LVU173
 940 0054 0E94 0000 		call timer_read
 941               	.LVL61:
 148:quantum/process_keycode/process_tap_dance.c ****       action->state.oneshot_mods = get_oneshot_mods();
 942               		.loc 1 148 27 view .LVU174
 943 0058 9C87      		std Y+12,r25
 944 005a 8B87      		std Y+11,r24
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 945               		.loc 1 149 7 is_stmt 1 view .LVU175
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 946               		.loc 1 149 36 is_stmt 0 view .LVU176
 947 005c 0E94 0000 		call get_oneshot_mods
 948               	.LVL62:
 149:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods = get_mods();
 949               		.loc 1 149 34 view .LVU177
 950 0060 8F83      		std Y+7,r24
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 951               		.loc 1 150 7 is_stmt 1 view .LVU178
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 952               		.loc 1 150 33 is_stmt 0 view .LVU179
 953 0062 0E94 0000 		call get_mods
 954               	.LVL63:
 150:quantum/process_keycode/process_tap_dance.c ****       action->state.weak_mods |= get_weak_mods();
 955               		.loc 1 150 31 view .LVU180
 956 0066 8887      		std Y+8,r24
 151:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 957               		.loc 1 151 7 is_stmt 1 view .LVU181
 151:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 958               		.loc 1 151 34 is_stmt 0 view .LVU182
 959 0068 0E94 0000 		call get_weak_mods
 960               	.LVL64:
 151:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_each_tap (action);
 961               		.loc 1 151 31 view .LVU183
 962 006c 9885      		ldd r25,Y+8
 963 006e 982B      		or r25,r24
 964 0070 9887      		std Y+8,r25
 152:quantum/process_keycode/process_tap_dance.c **** 
 965               		.loc 1 152 7 is_stmt 1 view .LVU184
 966               	.LVL65:
 967               	.LBB27:
 968               	.LBI27:
  89:quantum/process_keycode/process_tap_dance.c **** {
 969               		.loc 1 89 20 view .LVU185
 970               	.LBB28:
  91:quantum/process_keycode/process_tap_dance.c **** }
 971               		.loc 1 91 3 view .LVU186
 972 0072 E881      		ld r30,Y
 973 0074 F981      		ldd r31,Y+1
 974               	.LVL66:
 975               	.LBB29:
 976               	.LBI29:
  80:quantum/process_keycode/process_tap_dance.c ****                                                  void *user_data,
 977               		.loc 1 80 20 view .LVU187
 978               	.LBB30:
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 979               		.loc 1 84 3 view .LVU188
  84:quantum/process_keycode/process_tap_dance.c ****     fn(state, user_data);
 980               		.loc 1 84 6 is_stmt 0 view .LVU189
 981 0076 3097      		sbiw r30,0
 982 0078 01F0      		breq .L56
  85:quantum/process_keycode/process_tap_dance.c ****   }
 983               		.loc 1 85 5 is_stmt 1 view .LVU190
 984 007a 6A89      		ldd r22,Y+18
 985 007c 7B89      		ldd r23,Y+19
 986 007e C701      		movw r24,r14
 987 0080 8050      		subi r24,lo8(-(tap_dance_actions+6))
 988 0082 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 989 0084 0995      		icall
 990               	.LVL67:
 991               	.L56:
  85:quantum/process_keycode/process_tap_dance.c ****   }
 992               		.loc 1 85 5 is_stmt 0 view .LVU191
 993               	.LBE30:
 994               	.LBE29:
 995               	.LBE28:
 996               	.LBE27:
 154:quantum/process_keycode/process_tap_dance.c ****     } else {
 997               		.loc 1 154 7 is_stmt 1 view .LVU192
 154:quantum/process_keycode/process_tap_dance.c ****     } else {
 998               		.loc 1 154 15 is_stmt 0 view .LVU193
 999 0086 1093 0000 		sts last_td+1,r17
 1000 008a 0093 0000 		sts last_td,r16
 1001               	.LVL68:
 1002               	.L53:
 164:quantum/process_keycode/process_tap_dance.c **** }
 1003               		.loc 1 164 3 is_stmt 1 view .LVU194
 165:quantum/process_keycode/process_tap_dance.c **** 
 1004               		.loc 1 165 1 is_stmt 0 view .LVU195
 1005 008e 81E0      		ldi r24,lo8(1)
 1006               	/* epilogue start */
 1007 0090 DF91      		pop r29
 1008 0092 CF91      		pop r28
 1009 0094 1F91      		pop r17
 1010 0096 0F91      		pop r16
 1011               	.LVL69:
 165:quantum/process_keycode/process_tap_dance.c **** 
 1012               		.loc 1 165 1 view .LVU196
 1013 0098 FF90      		pop r15
 1014 009a EF90      		pop r14
 1015 009c 0895      		ret
 1016               	.LVL70:
 1017               	.L55:
 156:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 1018               		.loc 1 156 7 is_stmt 1 view .LVU197
 156:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 1019               		.loc 1 156 10 is_stmt 0 view .LVU198
 1020 009e 8823      		tst r24
 1021 00a0 01F0      		breq .L53
 156:quantum/process_keycode/process_tap_dance.c ****         reset_tap_dance (&action->state);
 1022               		.loc 1 156 31 discriminator 1 view .LVU199
 1023 00a2 8F85      		ldd r24,Y+15
 1024 00a4 8823      		tst r24
 1025 00a6 01F0      		breq .L53
 157:quantum/process_keycode/process_tap_dance.c ****       }
 1026               		.loc 1 157 9 is_stmt 1 view .LVU200
 1027 00a8 C701      		movw r24,r14
 1028 00aa 8050      		subi r24,lo8(-(tap_dance_actions+6))
 1029 00ac 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 1030 00ae 0E94 0000 		call reset_tap_dance
 1031               	.LVL71:
 157:quantum/process_keycode/process_tap_dance.c ****       }
 1032               		.loc 1 157 9 is_stmt 0 view .LVU201
 1033 00b2 00C0      		rjmp .L53
 1034               		.cfi_endproc
 1035               	.LFE39:
 1037               		.section	.text.matrix_scan_tap_dance,"ax",@progbits
 1038               	.global	matrix_scan_tap_dance
 1040               	matrix_scan_tap_dance:
 1041               	.LFB40:
 169:quantum/process_keycode/process_tap_dance.c ****   if (highest_td == -1)
 1042               		.loc 1 169 31 is_stmt 1 view -0
 1043               		.cfi_startproc
 1044 0000 EF92      		push r14
 1045               	.LCFI25:
 1046               		.cfi_def_cfa_offset 3
 1047               		.cfi_offset 14, -2
 1048 0002 FF92      		push r15
 1049               	.LCFI26:
 1050               		.cfi_def_cfa_offset 4
 1051               		.cfi_offset 15, -3
 1052 0004 0F93      		push r16
 1053               	.LCFI27:
 1054               		.cfi_def_cfa_offset 5
 1055               		.cfi_offset 16, -4
 1056 0006 1F93      		push r17
 1057               	.LCFI28:
 1058               		.cfi_def_cfa_offset 6
 1059               		.cfi_offset 17, -5
 1060 0008 CF93      		push r28
 1061               	.LCFI29:
 1062               		.cfi_def_cfa_offset 7
 1063               		.cfi_offset 28, -6
 1064 000a DF93      		push r29
 1065               	.LCFI30:
 1066               		.cfi_def_cfa_offset 8
 1067               		.cfi_offset 29, -7
 1068               	/* prologue: function */
 1069               	/* frame size = 0 */
 1070               	/* stack size = 6 */
 1071               	.L__stack_usage = 6
 170:quantum/process_keycode/process_tap_dance.c ****     return;
 1072               		.loc 1 170 3 view .LVU203
 170:quantum/process_keycode/process_tap_dance.c ****     return;
 1073               		.loc 1 170 6 is_stmt 0 view .LVU204
 1074 000c 8091 0000 		lds r24,highest_td
 1075               	.LBB35:
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1076               		.loc 1 174 16 view .LVU205
 1077 0010 10E0      		ldi r17,0
 1078               	.LBB36:
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 1079               		.loc 1 176 14 view .LVU206
 1080 0012 04E1      		ldi r16,lo8(20)
 1081               	.LBE36:
 1082               	.LBE35:
 170:quantum/process_keycode/process_tap_dance.c ****     return;
 1083               		.loc 1 170 6 view .LVU207
 1084 0014 8F3F      		cpi r24,lo8(-1)
 1085 0016 01F4      		brne .L68
 1086               	.L67:
 1087               	/* epilogue start */
 187:quantum/process_keycode/process_tap_dance.c **** 
 1088               		.loc 1 187 1 view .LVU208
 1089 0018 DF91      		pop r29
 1090 001a CF91      		pop r28
 1091 001c 1F91      		pop r17
 1092 001e 0F91      		pop r16
 1093 0020 FF90      		pop r15
 1094 0022 EF90      		pop r14
 1095 0024 0895      		ret
 1096               	.LVL72:
 1097               	.L74:
 1098               	.LBB40:
 1099               	.LBB39:
 175:quantum/process_keycode/process_tap_dance.c ****     if(action->custom_tapping_term > 0 ) {
 1100               		.loc 1 175 5 is_stmt 1 view .LVU209
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 1101               		.loc 1 176 5 view .LVU210
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 1102               		.loc 1 176 14 is_stmt 0 view .LVU211
 1103 0026 029F      		mul r16,r18
 1104 0028 F001      		movw r30,r0
 1105 002a 039F      		mul r16,r19
 1106 002c F00D      		add r31,r0
 1107 002e 1124      		clr __zero_reg__
 1108 0030 E050      		subi r30,lo8(-(tap_dance_actions))
 1109 0032 F040      		sbci r31,hi8(-(tap_dance_actions))
 1110 0034 E088      		ldd r14,Z+16
 1111 0036 F188      		ldd r15,Z+17
 176:quantum/process_keycode/process_tap_dance.c ****       tap_user_defined = action->custom_tapping_term;
 1112               		.loc 1 176 7 view .LVU212
 1113 0038 E114      		cp r14,__zero_reg__
 1114 003a F104      		cpc r15,__zero_reg__
 1115 003c 01F4      		brne .L69
 180:quantum/process_keycode/process_tap_dance.c ****     }
 1116               		.loc 1 180 24 view .LVU213
 1117 003e 86E9      		ldi r24,lo8(-106)
 1118 0040 E82E      		mov r14,r24
 1119 0042 F12C      		mov r15,__zero_reg__
 1120               	.L69:
 1121               	.LVL73:
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 1122               		.loc 1 182 5 is_stmt 1 view .LVU214
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 1123               		.loc 1 182 22 is_stmt 0 view .LVU215
 1124 0044 029F      		mul r16,r18
 1125 0046 E001      		movw r28,r0
 1126 0048 039F      		mul r16,r19
 1127 004a D00D      		add r29,r0
 1128 004c 1124      		clr __zero_reg__
 1129 004e C050      		subi r28,lo8(-(tap_dance_actions))
 1130 0050 D040      		sbci r29,hi8(-(tap_dance_actions))
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 1131               		.loc 1 182 8 view .LVU216
 1132 0052 8E81      		ldd r24,Y+6
 1133 0054 8823      		tst r24
 1134 0056 01F0      		breq .L71
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 1135               		.loc 1 182 32 discriminator 1 view .LVU217
 1136 0058 8B85      		ldd r24,Y+11
 1137 005a 9C85      		ldd r25,Y+12
 1138 005c 0E94 0000 		call timer_elapsed
 1139               	.LVL74:
 182:quantum/process_keycode/process_tap_dance.c ****       process_tap_dance_action_on_dance_finished (action);
 1140               		.loc 1 182 29 discriminator 1 view .LVU218
 1141 0060 E816      		cp r14,r24
 1142 0062 F906      		cpc r15,r25
 1143 0064 00F4      		brsh .L71
 1144 0066 109F      		mul r17,r16
 1145 0068 7001      		movw r14,r0
 1146 006a 1124      		clr __zero_reg__
 1147               	.LVL75:
 183:quantum/process_keycode/process_tap_dance.c ****       reset_tap_dance (&action->state);
 1148               		.loc 1 183 7 is_stmt 1 view .LVU219
 1149               	.LBB37:
 1150               	.LBI37:
  94:quantum/process_keycode/process_tap_dance.c **** {
 1151               		.loc 1 94 20 view .LVU220
 1152               	.LBB38:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 1153               		.loc 1 96 3 view .LVU221
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 1154               		.loc 1 96 6 is_stmt 0 view .LVU222
 1155 006c 8F85      		ldd r24,Y+15
 1156 006e 8111      		cpse r24,__zero_reg__
 1157 0070 00C0      		rjmp .L73
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 1158               		.loc 1 96 6 view .LVU223
 1159 0072 C701      		movw r24,r14
 1160 0074 8050      		subi r24,lo8(-(tap_dance_actions))
 1161 0076 9040      		sbci r25,hi8(-(tap_dance_actions))
 1162 0078 0E94 0000 		call process_tap_dance_action_on_dance_finished.part.0
 1163               	.LVL76:
 1164               	.L73:
  96:quantum/process_keycode/process_tap_dance.c ****     return;
 1165               		.loc 1 96 6 view .LVU224
 1166               	.LBE38:
 1167               	.LBE37:
 184:quantum/process_keycode/process_tap_dance.c ****     }
 1168               		.loc 1 184 7 is_stmt 1 view .LVU225
 1169 007c C701      		movw r24,r14
 1170 007e 8050      		subi r24,lo8(-(tap_dance_actions+6))
 1171 0080 9040      		sbci r25,hi8(-(tap_dance_actions+6))
 1172 0082 0E94 0000 		call reset_tap_dance
 1173               	.LVL77:
 1174               	.L71:
 184:quantum/process_keycode/process_tap_dance.c ****     }
 1175               		.loc 1 184 7 is_stmt 0 view .LVU226
 1176               	.LBE39:
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1177               		.loc 1 174 40 is_stmt 1 discriminator 2 view .LVU227
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1178               		.loc 1 174 41 is_stmt 0 discriminator 2 view .LVU228
 1179 0086 1F5F      		subi r17,lo8(-(1))
 1180               	.LVL78:
 1181               	.L68:
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1182               		.loc 1 174 23 is_stmt 1 discriminator 1 view .LVU229
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1183               		.loc 1 174 25 is_stmt 0 discriminator 1 view .LVU230
 1184 0088 212F      		mov r18,r17
 1185 008a 30E0      		ldi r19,0
 1186 008c 8091 0000 		lds r24,highest_td
 1187 0090 082E      		mov __tmp_reg__,r24
 1188 0092 000C      		lsl r0
 1189 0094 990B      		sbc r25,r25
 174:quantum/process_keycode/process_tap_dance.c ****     qk_tap_dance_action_t *action = &tap_dance_actions[i];
 1190               		.loc 1 174 3 discriminator 1 view .LVU231
 1191 0096 8217      		cp r24,r18
 1192 0098 9307      		cpc r25,r19
 1193 009a 04F4      		brge .L74
 1194 009c 00C0      		rjmp .L67
 1195               	.LBE40:
 1196               		.cfi_endproc
 1197               	.LFE40:
 1199               		.section	.data.highest_td,"aw"
 1202               	highest_td:
 1203 0000 FF        		.byte	-1
 1204               		.section	.bss.last_td,"aw",@nobits
 1207               	last_td:
 1208 0000 0000      		.zero	2
 1209               		.text
 1210               	.Letext0:
 1211               		.file 3 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 1212               		.file 4 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/lib/avr-gcc/9/gcc/avr/9.3.0/include/stddef.h"
 1213               		.file 5 "./tmk_core/common/keyboard.h"
 1214               		.file 6 "./tmk_core/common/action.h"
 1215               		.file 7 "./tmk_core/common/report.h"
 1216               		.file 8 "./tmk_core/common/host.h"
 1217               		.file 9 "./tmk_core/common/avr/xprintf.h"
 1218               		.file 10 "./tmk_core/common/debug.h"
 1219               		.file 11 "./quantum/keycode_config.h"
 1220               		.file 12 "./quantum/keymap.h"
 1221               		.file 13 "./tmk_core/common/action_layer.h"
 1222               		.file 14 "./tmk_core/common/timer.h"
 1223               		.file 15 "./tmk_core/common/action_util.h"
 1224               		.file 16 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdlib.h"
 1225               		.file 17 "./quantum/process_keycode/process_tap_dance.h"
 1226               		.file 18 "./quantum/quantum.h"
 1227               		.file 19 "./quantum/quantum_keycodes.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 process_tap_dance.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:12     .text.process_tap_dance_action_on_dance_finished.part.0:0000000000000000 process_tap_dance_action_on_dance_finished.part.0
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:97     .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:116    .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:131    .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:146    .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:161    .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:176    .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:191    .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:206    .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:221    .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:236    .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:251    .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:266    .text.qk_tap_dance_pair_on_each_tap:0000000000000000 qk_tap_dance_pair_on_each_tap
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:318    .text.qk_tap_dance_pair_finished:0000000000000000 qk_tap_dance_pair_finished
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:365    .text.qk_tap_dance_pair_reset:0000000000000000 qk_tap_dance_pair_reset
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:412    .text.qk_tap_dance_dual_role_on_each_tap:0000000000000000 qk_tap_dance_dual_role_on_each_tap
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:463    .text.qk_tap_dance_dual_role_finished:0000000000000000 qk_tap_dance_dual_role_finished
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:508    .text.qk_tap_dance_dual_role_reset:0000000000000000 qk_tap_dance_dual_role_reset
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:544    .text.reset_tap_dance:0000000000000000 reset_tap_dance
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:1207   .bss.last_td:0000000000000000 last_td
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:690    .text.preprocess_tap_dance:0000000000000000 preprocess_tap_dance
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:1202   .data.highest_td:0000000000000000 highest_td
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:846    .text.process_tap_dance:0000000000000000 process_tap_dance
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccf4yA6n.s:1040   .text.matrix_scan_tap_dance:0000000000000000 matrix_scan_tap_dance

UNDEFINED SYMBOLS
add_mods
add_weak_mods
send_keyboard_report
register_code16
unregister_code16
layer_move
tap_dance_actions
del_mods
del_weak_mods
timer_read
get_oneshot_mods
get_mods
get_weak_mods
timer_elapsed
__do_copy_data
__do_clear_bss
