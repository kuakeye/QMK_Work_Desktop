   1               		.file	"action_util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.add_key,"ax",@progbits
  11               	.global	add_key
  13               	add_key:
  14               	.LVL0:
  15               	.LFB1:
  16               		.file 1 "./tmk_core/common/action_util.h"
   1:./tmk_core/common/action_util.h **** /*
   2:./tmk_core/common/action_util.h **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/action_util.h **** 
   4:./tmk_core/common/action_util.h **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/action_util.h **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/action_util.h **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/action_util.h **** (at your option) any later version.
   8:./tmk_core/common/action_util.h **** 
   9:./tmk_core/common/action_util.h **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/action_util.h **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/action_util.h **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/action_util.h **** GNU General Public License for more details.
  13:./tmk_core/common/action_util.h **** 
  14:./tmk_core/common/action_util.h **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/action_util.h **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/action_util.h **** */
  17:./tmk_core/common/action_util.h **** #ifndef ACTION_UTIL_H
  18:./tmk_core/common/action_util.h **** #define ACTION_UTIL_H
  19:./tmk_core/common/action_util.h **** 
  20:./tmk_core/common/action_util.h **** #include <stdint.h>
  21:./tmk_core/common/action_util.h **** #include "report.h"
  22:./tmk_core/common/action_util.h **** 
  23:./tmk_core/common/action_util.h **** #ifdef __cplusplus
  24:./tmk_core/common/action_util.h **** extern "C" {
  25:./tmk_core/common/action_util.h **** #endif
  26:./tmk_core/common/action_util.h **** 
  27:./tmk_core/common/action_util.h **** extern report_keyboard_t *keyboard_report;
  28:./tmk_core/common/action_util.h **** 
  29:./tmk_core/common/action_util.h **** void send_keyboard_report(void);
  30:./tmk_core/common/action_util.h **** 
  31:./tmk_core/common/action_util.h **** /* key */
  32:./tmk_core/common/action_util.h **** inline void add_key(uint8_t key) {
  17               		.loc 1 32 34 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  23               		.loc 1 32 34 is_stmt 0 view .LVU1
  24 0000 682F      		mov r22,r24
  33:./tmk_core/common/action_util.h ****   add_key_to_report(keyboard_report, key);
  25               		.loc 1 33 3 is_stmt 1 view .LVU2
  26 0002 8091 0000 		lds r24,keyboard_report
  27 0006 9091 0000 		lds r25,keyboard_report+1
  28               	.LVL1:
  29               		.loc 1 33 3 is_stmt 0 view .LVU3
  30 000a 0C94 0000 		jmp add_key_to_report
  31               	.LVL2:
  32               		.loc 1 33 3 view .LVU4
  33               		.cfi_endproc
  34               	.LFE1:
  36               		.section	.text.del_key,"ax",@progbits
  37               	.global	del_key
  39               	del_key:
  40               	.LVL3:
  41               	.LFB2:
  34:./tmk_core/common/action_util.h **** }
  35:./tmk_core/common/action_util.h **** 
  36:./tmk_core/common/action_util.h **** inline void del_key(uint8_t key) {
  42               		.loc 1 36 34 is_stmt 1 view -0
  43               		.cfi_startproc
  44               	/* prologue: function */
  45               	/* frame size = 0 */
  46               	/* stack size = 0 */
  47               	.L__stack_usage = 0
  48               		.loc 1 36 34 is_stmt 0 view .LVU6
  49 0000 682F      		mov r22,r24
  37:./tmk_core/common/action_util.h ****   del_key_from_report(keyboard_report, key);
  50               		.loc 1 37 3 is_stmt 1 view .LVU7
  51 0002 8091 0000 		lds r24,keyboard_report
  52 0006 9091 0000 		lds r25,keyboard_report+1
  53               	.LVL4:
  54               		.loc 1 37 3 is_stmt 0 view .LVU8
  55 000a 0C94 0000 		jmp del_key_from_report
  56               	.LVL5:
  57               		.loc 1 37 3 view .LVU9
  58               		.cfi_endproc
  59               	.LFE2:
  61               		.section	.text.clear_keys,"ax",@progbits
  62               	.global	clear_keys
  64               	clear_keys:
  65               	.LFB3:
  38:./tmk_core/common/action_util.h **** }
  39:./tmk_core/common/action_util.h **** 
  40:./tmk_core/common/action_util.h **** inline void clear_keys(void) {
  66               		.loc 1 40 30 is_stmt 1 view -0
  67               		.cfi_startproc
  68               	/* prologue: function */
  69               	/* frame size = 0 */
  70               	/* stack size = 0 */
  71               	.L__stack_usage = 0
  41:./tmk_core/common/action_util.h ****   clear_keys_from_report(keyboard_report);
  72               		.loc 1 41 3 view .LVU11
  73 0000 8091 0000 		lds r24,keyboard_report
  74 0004 9091 0000 		lds r25,keyboard_report+1
  75 0008 0C94 0000 		jmp clear_keys_from_report
  76               	.LVL6:
  77               		.cfi_endproc
  78               	.LFE3:
  80               		.section	.text.get_oneshot_locked_mods,"ax",@progbits
  81               	.global	get_oneshot_locked_mods
  83               	get_oneshot_locked_mods:
  84               	.LFB7:
  85               		.file 2 "./tmk_core/common/action_util.c"
   1:./tmk_core/common/action_util.c **** /*
   2:./tmk_core/common/action_util.c **** Copyright 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/action_util.c **** 
   4:./tmk_core/common/action_util.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/action_util.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/action_util.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/action_util.c **** (at your option) any later version.
   8:./tmk_core/common/action_util.c **** 
   9:./tmk_core/common/action_util.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/action_util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/action_util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/action_util.c **** GNU General Public License for more details.
  13:./tmk_core/common/action_util.c **** 
  14:./tmk_core/common/action_util.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/action_util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/action_util.c **** */
  17:./tmk_core/common/action_util.c **** #include "host.h"
  18:./tmk_core/common/action_util.c **** #include "report.h"
  19:./tmk_core/common/action_util.c **** #include "debug.h"
  20:./tmk_core/common/action_util.c **** #include "action_util.h"
  21:./tmk_core/common/action_util.c **** #include "action_layer.h"
  22:./tmk_core/common/action_util.c **** #include "timer.h"
  23:./tmk_core/common/action_util.c **** #include "keycode_config.h"
  24:./tmk_core/common/action_util.c **** 
  25:./tmk_core/common/action_util.c **** extern keymap_config_t keymap_config;
  26:./tmk_core/common/action_util.c **** 
  27:./tmk_core/common/action_util.c **** 
  28:./tmk_core/common/action_util.c **** static uint8_t real_mods = 0;
  29:./tmk_core/common/action_util.c **** static uint8_t weak_mods = 0;
  30:./tmk_core/common/action_util.c **** static uint8_t macro_mods = 0;
  31:./tmk_core/common/action_util.c **** 
  32:./tmk_core/common/action_util.c **** #ifdef USB_6KRO_ENABLE
  33:./tmk_core/common/action_util.c **** #define RO_ADD(a, b) ((a + b) % KEYBOARD_REPORT_KEYS)
  34:./tmk_core/common/action_util.c **** #define RO_SUB(a, b) ((a - b + KEYBOARD_REPORT_KEYS) % KEYBOARD_REPORT_KEYS)
  35:./tmk_core/common/action_util.c **** #define RO_INC(a) RO_ADD(a, 1)
  36:./tmk_core/common/action_util.c **** #define RO_DEC(a) RO_SUB(a, 1)
  37:./tmk_core/common/action_util.c **** static int8_t cb_head = 0;
  38:./tmk_core/common/action_util.c **** static int8_t cb_tail = 0;
  39:./tmk_core/common/action_util.c **** static int8_t cb_count = 0;
  40:./tmk_core/common/action_util.c **** #endif
  41:./tmk_core/common/action_util.c **** 
  42:./tmk_core/common/action_util.c **** // TODO: pointer variable is not needed
  43:./tmk_core/common/action_util.c **** //report_keyboard_t keyboard_report = {};
  44:./tmk_core/common/action_util.c **** report_keyboard_t *keyboard_report = &(report_keyboard_t){};
  45:./tmk_core/common/action_util.c **** 
  46:./tmk_core/common/action_util.c **** extern inline void add_key(uint8_t key);
  47:./tmk_core/common/action_util.c **** extern inline void del_key(uint8_t key);
  48:./tmk_core/common/action_util.c **** extern inline void clear_keys(void);
  49:./tmk_core/common/action_util.c **** 
  50:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  51:./tmk_core/common/action_util.c **** static int8_t oneshot_mods = 0;
  52:./tmk_core/common/action_util.c **** static int8_t oneshot_locked_mods = 0;
  53:./tmk_core/common/action_util.c **** int8_t get_oneshot_locked_mods(void) { return oneshot_locked_mods; }
  86               		.loc 2 53 38 view -0
  87               		.cfi_startproc
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  92               		.loc 2 53 40 view .LVU13
  93               		.loc 2 53 1 is_stmt 0 view .LVU14
  94 0000 8091 0000 		lds r24,oneshot_locked_mods
  95               	/* epilogue start */
  96 0004 0895      		ret
  97               		.cfi_endproc
  98               	.LFE7:
 100               		.section	.text.set_oneshot_locked_mods,"ax",@progbits
 101               	.global	set_oneshot_locked_mods
 103               	set_oneshot_locked_mods:
 104               	.LVL7:
 105               	.LFB8:
  54:./tmk_core/common/action_util.c **** void set_oneshot_locked_mods(int8_t mods) { oneshot_locked_mods = mods; }
 106               		.loc 2 54 43 is_stmt 1 view -0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
 112               		.loc 2 54 45 view .LVU16
 113               		.loc 2 54 65 is_stmt 0 view .LVU17
 114 0000 8093 0000 		sts oneshot_locked_mods,r24
 115               	/* epilogue start */
 116               		.loc 2 54 1 view .LVU18
 117 0004 0895      		ret
 118               		.cfi_endproc
 119               	.LFE8:
 121               		.section	.text.clear_oneshot_locked_mods,"ax",@progbits
 122               	.global	clear_oneshot_locked_mods
 124               	clear_oneshot_locked_mods:
 125               	.LFB9:
  55:./tmk_core/common/action_util.c **** void clear_oneshot_locked_mods(void) { oneshot_locked_mods = 0; }
 126               		.loc 2 55 38 is_stmt 1 view -0
 127               		.cfi_startproc
 128               	/* prologue: function */
 129               	/* frame size = 0 */
 130               	/* stack size = 0 */
 131               	.L__stack_usage = 0
 132               		.loc 2 55 40 view .LVU20
 133               		.loc 2 55 60 is_stmt 0 view .LVU21
 134 0000 1092 0000 		sts oneshot_locked_mods,__zero_reg__
 135               	/* epilogue start */
 136               		.loc 2 55 1 view .LVU22
 137 0004 0895      		ret
 138               		.cfi_endproc
 139               	.LFE9:
 141               		.section	.text.has_oneshot_mods_timed_out,"ax",@progbits
 142               	.global	has_oneshot_mods_timed_out
 144               	has_oneshot_mods_timed_out:
 145               	.LFB10:
  56:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  57:./tmk_core/common/action_util.c **** static int16_t oneshot_time = 0;
  58:./tmk_core/common/action_util.c **** bool has_oneshot_mods_timed_out(void) {
  59:./tmk_core/common/action_util.c ****   return TIMER_DIFF_16(timer_read(), oneshot_time) >= ONESHOT_TIMEOUT;
  60:./tmk_core/common/action_util.c **** }
  61:./tmk_core/common/action_util.c **** #else
  62:./tmk_core/common/action_util.c **** bool has_oneshot_mods_timed_out(void) {
 146               		.loc 2 62 39 is_stmt 1 view -0
 147               		.cfi_startproc
 148               	/* prologue: function */
 149               	/* frame size = 0 */
 150               	/* stack size = 0 */
 151               	.L__stack_usage = 0
  63:./tmk_core/common/action_util.c ****     return false;
 152               		.loc 2 63 5 view .LVU24
  64:./tmk_core/common/action_util.c **** }
 153               		.loc 2 64 1 is_stmt 0 view .LVU25
 154 0000 80E0      		ldi r24,0
 155               	/* epilogue start */
 156 0002 0895      		ret
 157               		.cfi_endproc
 158               	.LFE10:
 160               		.section	.text.get_oneshot_layer,"ax",@progbits
 161               	.global	get_oneshot_layer
 163               	get_oneshot_layer:
 164               	.LFB11:
  65:./tmk_core/common/action_util.c **** #endif
  66:./tmk_core/common/action_util.c **** #endif
  67:./tmk_core/common/action_util.c **** 
  68:./tmk_core/common/action_util.c **** /* oneshot layer */
  69:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
  70:./tmk_core/common/action_util.c **** /** \brief oneshot_layer_data bits
  71:./tmk_core/common/action_util.c ****  * LLLL LSSS
  72:./tmk_core/common/action_util.c ****  * where:
  73:./tmk_core/common/action_util.c ****  *   L => are layer bits
  74:./tmk_core/common/action_util.c ****  *   S => oneshot state bits
  75:./tmk_core/common/action_util.c ****  */
  76:./tmk_core/common/action_util.c **** static int8_t oneshot_layer_data = 0;
  77:./tmk_core/common/action_util.c **** 
  78:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer(void) { return oneshot_layer_data >> 3; }
 165               		.loc 2 78 40 is_stmt 1 view -0
 166               		.cfi_startproc
 167               	/* prologue: function */
 168               	/* frame size = 0 */
 169               	/* stack size = 0 */
 170               	.L__stack_usage = 0
 171               		.loc 2 78 42 view .LVU27
 172               		.loc 2 78 68 is_stmt 0 view .LVU28
 173 0000 8091 0000 		lds r24,oneshot_layer_data
 174               		.loc 2 78 1 view .LVU29
 175 0004 8595      		asr r24
 176 0006 8595      		asr r24
 177 0008 8595      		asr r24
 178               	/* epilogue start */
 179 000a 0895      		ret
 180               		.cfi_endproc
 181               	.LFE11:
 183               		.section	.text.get_oneshot_layer_state,"ax",@progbits
 184               	.global	get_oneshot_layer_state
 186               	get_oneshot_layer_state:
 187               	.LFB12:
  79:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 188               		.loc 2 79 46 is_stmt 1 view -0
 189               		.cfi_startproc
 190               	/* prologue: function */
 191               	/* frame size = 0 */
 192               	/* stack size = 0 */
 193               	.L__stack_usage = 0
 194               		.loc 2 79 48 view .LVU31
 195               		.loc 2 79 74 is_stmt 0 view .LVU32
 196 0000 8091 0000 		lds r24,oneshot_layer_data
 197               		.loc 2 79 1 view .LVU33
 198 0004 8770      		andi r24,lo8(7)
 199               	/* epilogue start */
 200 0006 0895      		ret
 201               		.cfi_endproc
 202               	.LFE12:
 204               		.section	.text.set_oneshot_layer,"ax",@progbits
 205               	.global	set_oneshot_layer
 207               	set_oneshot_layer:
 208               	.LVL8:
 209               	.LFB13:
  80:./tmk_core/common/action_util.c **** 
  81:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  82:./tmk_core/common/action_util.c **** static int16_t oneshot_layer_time = 0;
  83:./tmk_core/common/action_util.c **** inline bool has_oneshot_layer_timed_out() {
  84:./tmk_core/common/action_util.c ****     return TIMER_DIFF_16(timer_read(), oneshot_layer_time) >= ONESHOT_TIMEOUT &&
  85:./tmk_core/common/action_util.c ****         !(get_oneshot_layer_state() & ONESHOT_TOGGLED);
  86:./tmk_core/common/action_util.c **** }
  87:./tmk_core/common/action_util.c **** #endif
  88:./tmk_core/common/action_util.c **** 
  89:./tmk_core/common/action_util.c **** /** \brief Set oneshot layer 
  90:./tmk_core/common/action_util.c ****  *
  91:./tmk_core/common/action_util.c ****  * FIXME: needs doc
  92:./tmk_core/common/action_util.c ****  */
  93:./tmk_core/common/action_util.c **** void set_oneshot_layer(uint8_t layer, uint8_t state)
  94:./tmk_core/common/action_util.c **** {
 210               		.loc 2 94 1 is_stmt 1 view -0
 211               		.cfi_startproc
 212               	/* prologue: function */
 213               	/* frame size = 0 */
 214               	/* stack size = 0 */
 215               	.L__stack_usage = 0
  95:./tmk_core/common/action_util.c ****     oneshot_layer_data = layer << 3 | state;
 216               		.loc 2 95 5 view .LVU35
 217               		.loc 2 95 32 is_stmt 0 view .LVU36
 218 0000 98E0      		ldi r25,lo8(8)
 219 0002 899F      		mul r24,r25
 220 0004 9001      		movw r18,r0
 221 0006 1124      		clr __zero_reg__
 222               		.loc 2 95 37 view .LVU37
 223 0008 622B      		or r22,r18
 224               	.LVL9:
 225               		.loc 2 95 24 view .LVU38
 226 000a 6093 0000 		sts oneshot_layer_data,r22
  96:./tmk_core/common/action_util.c ****     layer_on(layer);
 227               		.loc 2 96 5 is_stmt 1 view .LVU39
 228 000e 0C94 0000 		jmp layer_on
 229               	.LVL10:
 230               		.loc 2 96 5 is_stmt 0 view .LVU40
 231               		.cfi_endproc
 232               	.LFE13:
 234               		.section	.text.reset_oneshot_layer,"ax",@progbits
 235               	.global	reset_oneshot_layer
 237               	reset_oneshot_layer:
 238               	.LFB14:
  97:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
  98:./tmk_core/common/action_util.c ****     oneshot_layer_time = timer_read();
  99:./tmk_core/common/action_util.c **** #endif
 100:./tmk_core/common/action_util.c **** }
 101:./tmk_core/common/action_util.c **** /** \brief Reset oneshot layer 
 102:./tmk_core/common/action_util.c ****  *
 103:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 104:./tmk_core/common/action_util.c ****  */
 105:./tmk_core/common/action_util.c **** void reset_oneshot_layer(void) {
 239               		.loc 2 105 32 is_stmt 1 view -0
 240               		.cfi_startproc
 241               	/* prologue: function */
 242               	/* frame size = 0 */
 243               	/* stack size = 0 */
 244               	.L__stack_usage = 0
 106:./tmk_core/common/action_util.c ****     oneshot_layer_data = 0;
 245               		.loc 2 106 5 view .LVU42
 246               		.loc 2 106 24 is_stmt 0 view .LVU43
 247 0000 1092 0000 		sts oneshot_layer_data,__zero_reg__
 248               	/* epilogue start */
 107:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 108:./tmk_core/common/action_util.c ****     oneshot_layer_time = 0;
 109:./tmk_core/common/action_util.c **** #endif
 110:./tmk_core/common/action_util.c **** }
 249               		.loc 2 110 1 view .LVU44
 250 0004 0895      		ret
 251               		.cfi_endproc
 252               	.LFE14:
 254               		.section	.text.clear_oneshot_layer_state,"ax",@progbits
 255               	.global	clear_oneshot_layer_state
 257               	clear_oneshot_layer_state:
 258               	.LVL11:
 259               	.LFB15:
 111:./tmk_core/common/action_util.c **** /** \brief Clear oneshot layer 
 112:./tmk_core/common/action_util.c ****  *
 113:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 114:./tmk_core/common/action_util.c ****  */
 115:./tmk_core/common/action_util.c **** void clear_oneshot_layer_state(oneshot_fullfillment_t state)
 116:./tmk_core/common/action_util.c **** {
 260               		.loc 2 116 1 is_stmt 1 view -0
 261               		.cfi_startproc
 262               	/* prologue: function */
 263               	/* frame size = 0 */
 264               	/* stack size = 0 */
 265               	.L__stack_usage = 0
 117:./tmk_core/common/action_util.c ****     uint8_t start_state = oneshot_layer_data;
 266               		.loc 2 117 5 view .LVU46
 267               		.loc 2 117 13 is_stmt 0 view .LVU47
 268 0000 9091 0000 		lds r25,oneshot_layer_data
 269               	.LVL12:
 118:./tmk_core/common/action_util.c ****     oneshot_layer_data &= ~state;
 270               		.loc 2 118 5 is_stmt 1 view .LVU48
 271               		.loc 2 118 24 is_stmt 0 view .LVU49
 272 0004 8095      		com r24
 273               	.LVL13:
 274               		.loc 2 118 24 view .LVU50
 275 0006 8923      		and r24,r25
 276               	.LVL14:
 277               		.loc 2 118 24 view .LVU51
 278 0008 8093 0000 		sts oneshot_layer_data,r24
 119:./tmk_core/common/action_util.c ****     if (!get_oneshot_layer_state() && start_state != oneshot_layer_data) {
 279               		.loc 2 119 5 is_stmt 1 view .LVU52
 280               	.LBB8:
 281               	.LBI8:
  79:./tmk_core/common/action_util.c **** 
 282               		.loc 2 79 16 view .LVU53
 283               	.LBB9:
  79:./tmk_core/common/action_util.c **** 
 284               		.loc 2 79 48 view .LVU54
  79:./tmk_core/common/action_util.c **** 
 285               		.loc 2 79 74 is_stmt 0 view .LVU55
 286 000c 282F      		mov r18,r24
 287 000e 2770      		andi r18,lo8(7)
 288               	.LBE9:
 289               	.LBE8:
 290               		.loc 2 119 8 view .LVU56
 291 0010 01F4      		brne .L12
 292               		.loc 2 119 51 discriminator 1 view .LVU57
 293 0012 282F      		mov r18,r24
 294 0014 082E      		mov __tmp_reg__,r24
 295 0016 000C      		lsl r0
 296 0018 330B      		sbc r19,r19
 297               		.loc 2 119 36 discriminator 1 view .LVU58
 298 001a 9217      		cp r25,r18
 299 001c 1306      		cpc __zero_reg__,r19
 300 001e 01F0      		breq .L12
 120:./tmk_core/common/action_util.c ****         layer_off(get_oneshot_layer());
 301               		.loc 2 120 9 is_stmt 1 view .LVU59
 302               	.LBB10:
 303               	.LBI10:
  78:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 304               		.loc 2 78 16 view .LVU60
 305               	.LBB11:
  78:./tmk_core/common/action_util.c **** inline uint8_t get_oneshot_layer_state(void) { return oneshot_layer_data & 0b111; }
 306               		.loc 2 78 42 view .LVU61
 307               	.LBE11:
 308               	.LBE10:
 309               		.loc 2 120 9 is_stmt 0 view .LVU62
 310 0020 8595      		asr r24
 311 0022 8595      		asr r24
 312 0024 8595      		asr r24
 313 0026 0C94 0000 		jmp layer_off
 314               	.LVL15:
 315               	.L12:
 316               	/* epilogue start */
 121:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 122:./tmk_core/common/action_util.c ****     oneshot_layer_time = 0;
 123:./tmk_core/common/action_util.c **** #endif
 124:./tmk_core/common/action_util.c ****     }
 125:./tmk_core/common/action_util.c **** }
 317               		.loc 2 125 1 view .LVU63
 318 002a 0895      		ret
 319               		.cfi_endproc
 320               	.LFE15:
 322               		.section	.text.is_oneshot_layer_active,"ax",@progbits
 323               	.global	is_oneshot_layer_active
 325               	is_oneshot_layer_active:
 326               	.LFB16:
 126:./tmk_core/common/action_util.c **** /** \brief Is oneshot layer active
 127:./tmk_core/common/action_util.c ****  *
 128:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 129:./tmk_core/common/action_util.c ****  */
 130:./tmk_core/common/action_util.c **** bool is_oneshot_layer_active(void)
 131:./tmk_core/common/action_util.c **** {
 327               		.loc 2 131 1 is_stmt 1 view -0
 328               		.cfi_startproc
 329               	/* prologue: function */
 330               	/* frame size = 0 */
 331               	/* stack size = 0 */
 332               	.L__stack_usage = 0
 132:./tmk_core/common/action_util.c ****     return get_oneshot_layer_state();
 333               		.loc 2 132 5 view .LVU65
 334               	.LBB12:
 335               	.LBI12:
  79:./tmk_core/common/action_util.c **** 
 336               		.loc 2 79 16 view .LVU66
 337               	.LBB13:
  79:./tmk_core/common/action_util.c **** 
 338               		.loc 2 79 48 view .LVU67
  79:./tmk_core/common/action_util.c **** 
 339               		.loc 2 79 74 is_stmt 0 view .LVU68
 340 0000 9091 0000 		lds r25,oneshot_layer_data
 341 0004 9770      		andi r25,lo8(7)
 342               	.LBE13:
 343               	.LBE12:
 344               		.loc 2 132 12 view .LVU69
 345 0006 81E0      		ldi r24,lo8(1)
 346 0008 01F4      		brne .L15
 347 000a 80E0      		ldi r24,0
 348               	.L15:
 349               	/* epilogue start */
 133:./tmk_core/common/action_util.c **** }
 350               		.loc 2 133 1 view .LVU70
 351 000c 0895      		ret
 352               		.cfi_endproc
 353               	.LFE16:
 355               		.section	.text.send_keyboard_report,"ax",@progbits
 356               	.global	send_keyboard_report
 358               	send_keyboard_report:
 359               	.LFB17:
 134:./tmk_core/common/action_util.c **** #endif
 135:./tmk_core/common/action_util.c **** 
 136:./tmk_core/common/action_util.c **** /** \brief Send keyboard report
 137:./tmk_core/common/action_util.c ****  *
 138:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 139:./tmk_core/common/action_util.c ****  */
 140:./tmk_core/common/action_util.c **** void send_keyboard_report(void) {
 360               		.loc 2 140 33 is_stmt 1 view -0
 361               		.cfi_startproc
 362               	/* prologue: function */
 363               	/* frame size = 0 */
 364               	/* stack size = 0 */
 365               	.L__stack_usage = 0
 141:./tmk_core/common/action_util.c ****     keyboard_report->mods  = real_mods;
 366               		.loc 2 141 5 view .LVU72
 367               		.loc 2 141 20 is_stmt 0 view .LVU73
 368 0000 E091 0000 		lds r30,keyboard_report
 369 0004 F091 0000 		lds r31,keyboard_report+1
 370               		.loc 2 141 28 view .LVU74
 371 0008 8091 0000 		lds r24,real_mods
 372 000c 8083      		st Z,r24
 142:./tmk_core/common/action_util.c ****     keyboard_report->mods |= weak_mods;
 373               		.loc 2 142 5 is_stmt 1 view .LVU75
 374               		.loc 2 142 27 is_stmt 0 view .LVU76
 375 000e E091 0000 		lds r30,keyboard_report
 376 0012 F091 0000 		lds r31,keyboard_report+1
 377 0016 8081      		ld r24,Z
 378 0018 9091 0000 		lds r25,weak_mods
 379 001c 892B      		or r24,r25
 380 001e 8083      		st Z,r24
 143:./tmk_core/common/action_util.c ****     keyboard_report->mods |= macro_mods;
 381               		.loc 2 143 5 is_stmt 1 view .LVU77
 382               		.loc 2 143 27 is_stmt 0 view .LVU78
 383 0020 E091 0000 		lds r30,keyboard_report
 384 0024 F091 0000 		lds r31,keyboard_report+1
 385 0028 8081      		ld r24,Z
 386 002a 9091 0000 		lds r25,macro_mods
 387 002e 892B      		or r24,r25
 388 0030 8083      		st Z,r24
 144:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 145:./tmk_core/common/action_util.c ****     if (oneshot_mods) {
 389               		.loc 2 145 5 is_stmt 1 view .LVU79
 390               		.loc 2 145 9 is_stmt 0 view .LVU80
 391 0032 9091 0000 		lds r25,oneshot_mods
 392               		.loc 2 145 8 view .LVU81
 393 0036 9923      		tst r25
 394 0038 01F0      		breq .L18
 146:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 147:./tmk_core/common/action_util.c ****         if (has_oneshot_mods_timed_out()) {
 148:./tmk_core/common/action_util.c ****             dprintf("Oneshot: timeout\n");
 149:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 150:./tmk_core/common/action_util.c ****         }
 151:./tmk_core/common/action_util.c **** #endif
 152:./tmk_core/common/action_util.c ****         keyboard_report->mods |= oneshot_mods;
 395               		.loc 2 152 9 is_stmt 1 view .LVU82
 396               		.loc 2 152 31 is_stmt 0 view .LVU83
 397 003a E091 0000 		lds r30,keyboard_report
 398 003e F091 0000 		lds r31,keyboard_report+1
 399 0042 8081      		ld r24,Z
 400 0044 892B      		or r24,r25
 401 0046 8083      		st Z,r24
 153:./tmk_core/common/action_util.c ****         if (has_anykey(keyboard_report)) {
 402               		.loc 2 153 9 is_stmt 1 view .LVU84
 403               		.loc 2 153 13 is_stmt 0 view .LVU85
 404 0048 8091 0000 		lds r24,keyboard_report
 405 004c 9091 0000 		lds r25,keyboard_report+1
 406 0050 0E94 0000 		call has_anykey
 407               	.LVL16:
 408               		.loc 2 153 12 view .LVU86
 409 0054 8111      		cpse r24,__zero_reg__
 154:./tmk_core/common/action_util.c ****             clear_oneshot_mods();
 410               		.loc 2 154 13 is_stmt 1 view .LVU87
 411               	.LBB16:
 412               	.LBI16:
 155:./tmk_core/common/action_util.c ****         }
 156:./tmk_core/common/action_util.c ****     }
 157:./tmk_core/common/action_util.c **** 
 158:./tmk_core/common/action_util.c **** #endif
 159:./tmk_core/common/action_util.c ****     host_keyboard_send(keyboard_report);
 160:./tmk_core/common/action_util.c **** }
 161:./tmk_core/common/action_util.c **** 
 162:./tmk_core/common/action_util.c **** /** \brief Get mods
 163:./tmk_core/common/action_util.c ****  *
 164:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 165:./tmk_core/common/action_util.c ****  */
 166:./tmk_core/common/action_util.c **** uint8_t get_mods(void) { return real_mods; }
 167:./tmk_core/common/action_util.c **** /** \brief add mods
 168:./tmk_core/common/action_util.c ****  *
 169:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 170:./tmk_core/common/action_util.c ****  */
 171:./tmk_core/common/action_util.c **** void add_mods(uint8_t mods) { real_mods |= mods; }
 172:./tmk_core/common/action_util.c **** /** \brief del mods
 173:./tmk_core/common/action_util.c ****  *
 174:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 175:./tmk_core/common/action_util.c ****  */
 176:./tmk_core/common/action_util.c **** void del_mods(uint8_t mods) { real_mods &= ~mods; }
 177:./tmk_core/common/action_util.c **** /** \brief set mods
 178:./tmk_core/common/action_util.c ****  *
 179:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 180:./tmk_core/common/action_util.c ****  */
 181:./tmk_core/common/action_util.c **** void set_mods(uint8_t mods) { real_mods = mods; }
 182:./tmk_core/common/action_util.c **** /** \brief clear mods
 183:./tmk_core/common/action_util.c ****  *
 184:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 185:./tmk_core/common/action_util.c ****  */
 186:./tmk_core/common/action_util.c **** void clear_mods(void) { real_mods = 0; }
 187:./tmk_core/common/action_util.c **** 
 188:./tmk_core/common/action_util.c **** /** \brief get weak mods
 189:./tmk_core/common/action_util.c ****  *
 190:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 191:./tmk_core/common/action_util.c ****  */
 192:./tmk_core/common/action_util.c **** uint8_t get_weak_mods(void) { return weak_mods; }
 193:./tmk_core/common/action_util.c **** /** \brief add weak mods
 194:./tmk_core/common/action_util.c ****  *
 195:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 196:./tmk_core/common/action_util.c ****  */
 197:./tmk_core/common/action_util.c **** void add_weak_mods(uint8_t mods) { weak_mods |= mods; }
 198:./tmk_core/common/action_util.c **** /** \brief del weak mods
 199:./tmk_core/common/action_util.c ****  *
 200:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 201:./tmk_core/common/action_util.c ****  */
 202:./tmk_core/common/action_util.c **** void del_weak_mods(uint8_t mods) { weak_mods &= ~mods; }
 203:./tmk_core/common/action_util.c **** /** \brief set weak mods
 204:./tmk_core/common/action_util.c ****  *
 205:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 206:./tmk_core/common/action_util.c ****  */
 207:./tmk_core/common/action_util.c **** void set_weak_mods(uint8_t mods) { weak_mods = mods; }
 208:./tmk_core/common/action_util.c **** /** \brief clear weak mods
 209:./tmk_core/common/action_util.c ****  *
 210:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 211:./tmk_core/common/action_util.c ****  */
 212:./tmk_core/common/action_util.c **** void clear_weak_mods(void) { weak_mods = 0; }
 213:./tmk_core/common/action_util.c **** 
 214:./tmk_core/common/action_util.c **** /* macro modifier */
 215:./tmk_core/common/action_util.c **** /** \brief get macro mods
 216:./tmk_core/common/action_util.c ****  *
 217:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 218:./tmk_core/common/action_util.c ****  */
 219:./tmk_core/common/action_util.c **** uint8_t get_macro_mods(void) { return macro_mods; }
 220:./tmk_core/common/action_util.c **** /** \brief add macro mods
 221:./tmk_core/common/action_util.c ****  *
 222:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 223:./tmk_core/common/action_util.c ****  */
 224:./tmk_core/common/action_util.c **** void add_macro_mods(uint8_t mods) { macro_mods |= mods; }
 225:./tmk_core/common/action_util.c **** /** \brief del macro mods
 226:./tmk_core/common/action_util.c ****  *
 227:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 228:./tmk_core/common/action_util.c ****  */
 229:./tmk_core/common/action_util.c **** void del_macro_mods(uint8_t mods) { macro_mods &= ~mods; }
 230:./tmk_core/common/action_util.c **** /** \brief set macro mods
 231:./tmk_core/common/action_util.c ****  *
 232:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 233:./tmk_core/common/action_util.c ****  */
 234:./tmk_core/common/action_util.c **** void set_macro_mods(uint8_t mods) { macro_mods = mods; }
 235:./tmk_core/common/action_util.c **** /** \brief clear macro mods
 236:./tmk_core/common/action_util.c ****  *
 237:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 238:./tmk_core/common/action_util.c ****  */
 239:./tmk_core/common/action_util.c **** void clear_macro_mods(void) { macro_mods = 0; }
 240:./tmk_core/common/action_util.c **** 
 241:./tmk_core/common/action_util.c **** #ifndef NO_ACTION_ONESHOT
 242:./tmk_core/common/action_util.c **** /** \brief set oneshot mods
 243:./tmk_core/common/action_util.c ****  *
 244:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 245:./tmk_core/common/action_util.c ****  */
 246:./tmk_core/common/action_util.c **** void set_oneshot_mods(uint8_t mods)
 247:./tmk_core/common/action_util.c **** {
 248:./tmk_core/common/action_util.c ****     oneshot_mods = mods;
 249:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 250:./tmk_core/common/action_util.c ****     oneshot_time = timer_read();
 251:./tmk_core/common/action_util.c **** #endif
 252:./tmk_core/common/action_util.c **** }
 253:./tmk_core/common/action_util.c **** /** \brief clear oneshot mods
 254:./tmk_core/common/action_util.c ****  *
 255:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 256:./tmk_core/common/action_util.c ****  */
 257:./tmk_core/common/action_util.c **** void clear_oneshot_mods(void)
 413               		.loc 2 257 6 view .LVU88
 414               	.LBB17:
 258:./tmk_core/common/action_util.c **** {
 259:./tmk_core/common/action_util.c ****     oneshot_mods = 0;
 415               		.loc 2 259 5 view .LVU89
 416               		.loc 2 259 18 is_stmt 0 view .LVU90
 417 0056 1092 0000 		sts oneshot_mods,__zero_reg__
 418               	.L18:
 419               	.LBE17:
 420               	.LBE16:
 159:./tmk_core/common/action_util.c **** }
 421               		.loc 2 159 5 is_stmt 1 view .LVU91
 422 005a 8091 0000 		lds r24,keyboard_report
 423 005e 9091 0000 		lds r25,keyboard_report+1
 424 0062 0C94 0000 		jmp host_keyboard_send
 425               	.LVL17:
 426               		.cfi_endproc
 427               	.LFE17:
 429               		.section	.text.get_mods,"ax",@progbits
 430               	.global	get_mods
 432               	get_mods:
 433               	.LFB18:
 166:./tmk_core/common/action_util.c **** /** \brief add mods
 434               		.loc 2 166 24 view -0
 435               		.cfi_startproc
 436               	/* prologue: function */
 437               	/* frame size = 0 */
 438               	/* stack size = 0 */
 439               	.L__stack_usage = 0
 166:./tmk_core/common/action_util.c **** /** \brief add mods
 440               		.loc 2 166 26 view .LVU93
 166:./tmk_core/common/action_util.c **** /** \brief add mods
 441               		.loc 2 166 1 is_stmt 0 view .LVU94
 442 0000 8091 0000 		lds r24,real_mods
 443               	/* epilogue start */
 444 0004 0895      		ret
 445               		.cfi_endproc
 446               	.LFE18:
 448               		.section	.text.add_mods,"ax",@progbits
 449               	.global	add_mods
 451               	add_mods:
 452               	.LVL18:
 453               	.LFB19:
 171:./tmk_core/common/action_util.c **** /** \brief del mods
 454               		.loc 2 171 29 is_stmt 1 view -0
 455               		.cfi_startproc
 456               	/* prologue: function */
 457               	/* frame size = 0 */
 458               	/* stack size = 0 */
 459               	.L__stack_usage = 0
 171:./tmk_core/common/action_util.c **** /** \brief del mods
 460               		.loc 2 171 31 view .LVU96
 171:./tmk_core/common/action_util.c **** /** \brief del mods
 461               		.loc 2 171 41 is_stmt 0 view .LVU97
 462 0000 9091 0000 		lds r25,real_mods
 463 0004 982B      		or r25,r24
 464 0006 9093 0000 		sts real_mods,r25
 465               	/* epilogue start */
 171:./tmk_core/common/action_util.c **** /** \brief del mods
 466               		.loc 2 171 1 view .LVU98
 467 000a 0895      		ret
 468               		.cfi_endproc
 469               	.LFE19:
 471               		.section	.text.del_mods,"ax",@progbits
 472               	.global	del_mods
 474               	del_mods:
 475               	.LVL19:
 476               	.LFB20:
 176:./tmk_core/common/action_util.c **** /** \brief set mods
 477               		.loc 2 176 29 is_stmt 1 view -0
 478               		.cfi_startproc
 479               	/* prologue: function */
 480               	/* frame size = 0 */
 481               	/* stack size = 0 */
 482               	.L__stack_usage = 0
 176:./tmk_core/common/action_util.c **** /** \brief set mods
 483               		.loc 2 176 31 view .LVU100
 176:./tmk_core/common/action_util.c **** /** \brief set mods
 484               		.loc 2 176 41 is_stmt 0 view .LVU101
 485 0000 982F      		mov r25,r24
 486 0002 9095      		com r25
 487 0004 8091 0000 		lds r24,real_mods
 488               	.LVL20:
 176:./tmk_core/common/action_util.c **** /** \brief set mods
 489               		.loc 2 176 41 view .LVU102
 490 0008 8923      		and r24,r25
 491 000a 8093 0000 		sts real_mods,r24
 492               	/* epilogue start */
 176:./tmk_core/common/action_util.c **** /** \brief set mods
 493               		.loc 2 176 1 view .LVU103
 494 000e 0895      		ret
 495               		.cfi_endproc
 496               	.LFE20:
 498               		.section	.text.set_mods,"ax",@progbits
 499               	.global	set_mods
 501               	set_mods:
 502               	.LVL21:
 503               	.LFB21:
 181:./tmk_core/common/action_util.c **** /** \brief clear mods
 504               		.loc 2 181 29 is_stmt 1 view -0
 505               		.cfi_startproc
 506               	/* prologue: function */
 507               	/* frame size = 0 */
 508               	/* stack size = 0 */
 509               	.L__stack_usage = 0
 181:./tmk_core/common/action_util.c **** /** \brief clear mods
 510               		.loc 2 181 31 view .LVU105
 181:./tmk_core/common/action_util.c **** /** \brief clear mods
 511               		.loc 2 181 41 is_stmt 0 view .LVU106
 512 0000 8093 0000 		sts real_mods,r24
 513               	/* epilogue start */
 181:./tmk_core/common/action_util.c **** /** \brief clear mods
 514               		.loc 2 181 1 view .LVU107
 515 0004 0895      		ret
 516               		.cfi_endproc
 517               	.LFE21:
 519               		.section	.text.clear_mods,"ax",@progbits
 520               	.global	clear_mods
 522               	clear_mods:
 523               	.LFB22:
 186:./tmk_core/common/action_util.c **** 
 524               		.loc 2 186 23 is_stmt 1 view -0
 525               		.cfi_startproc
 526               	/* prologue: function */
 527               	/* frame size = 0 */
 528               	/* stack size = 0 */
 529               	.L__stack_usage = 0
 186:./tmk_core/common/action_util.c **** 
 530               		.loc 2 186 25 view .LVU109
 186:./tmk_core/common/action_util.c **** 
 531               		.loc 2 186 35 is_stmt 0 view .LVU110
 532 0000 1092 0000 		sts real_mods,__zero_reg__
 533               	/* epilogue start */
 186:./tmk_core/common/action_util.c **** 
 534               		.loc 2 186 1 view .LVU111
 535 0004 0895      		ret
 536               		.cfi_endproc
 537               	.LFE22:
 539               		.section	.text.get_weak_mods,"ax",@progbits
 540               	.global	get_weak_mods
 542               	get_weak_mods:
 543               	.LFB23:
 192:./tmk_core/common/action_util.c **** /** \brief add weak mods
 544               		.loc 2 192 29 is_stmt 1 view -0
 545               		.cfi_startproc
 546               	/* prologue: function */
 547               	/* frame size = 0 */
 548               	/* stack size = 0 */
 549               	.L__stack_usage = 0
 192:./tmk_core/common/action_util.c **** /** \brief add weak mods
 550               		.loc 2 192 31 view .LVU113
 192:./tmk_core/common/action_util.c **** /** \brief add weak mods
 551               		.loc 2 192 1 is_stmt 0 view .LVU114
 552 0000 8091 0000 		lds r24,weak_mods
 553               	/* epilogue start */
 554 0004 0895      		ret
 555               		.cfi_endproc
 556               	.LFE23:
 558               		.section	.text.add_weak_mods,"ax",@progbits
 559               	.global	add_weak_mods
 561               	add_weak_mods:
 562               	.LVL22:
 563               	.LFB24:
 197:./tmk_core/common/action_util.c **** /** \brief del weak mods
 564               		.loc 2 197 34 is_stmt 1 view -0
 565               		.cfi_startproc
 566               	/* prologue: function */
 567               	/* frame size = 0 */
 568               	/* stack size = 0 */
 569               	.L__stack_usage = 0
 197:./tmk_core/common/action_util.c **** /** \brief del weak mods
 570               		.loc 2 197 36 view .LVU116
 197:./tmk_core/common/action_util.c **** /** \brief del weak mods
 571               		.loc 2 197 46 is_stmt 0 view .LVU117
 572 0000 9091 0000 		lds r25,weak_mods
 573 0004 982B      		or r25,r24
 574 0006 9093 0000 		sts weak_mods,r25
 575               	/* epilogue start */
 197:./tmk_core/common/action_util.c **** /** \brief del weak mods
 576               		.loc 2 197 1 view .LVU118
 577 000a 0895      		ret
 578               		.cfi_endproc
 579               	.LFE24:
 581               		.section	.text.del_weak_mods,"ax",@progbits
 582               	.global	del_weak_mods
 584               	del_weak_mods:
 585               	.LVL23:
 586               	.LFB25:
 202:./tmk_core/common/action_util.c **** /** \brief set weak mods
 587               		.loc 2 202 34 is_stmt 1 view -0
 588               		.cfi_startproc
 589               	/* prologue: function */
 590               	/* frame size = 0 */
 591               	/* stack size = 0 */
 592               	.L__stack_usage = 0
 202:./tmk_core/common/action_util.c **** /** \brief set weak mods
 593               		.loc 2 202 36 view .LVU120
 202:./tmk_core/common/action_util.c **** /** \brief set weak mods
 594               		.loc 2 202 46 is_stmt 0 view .LVU121
 595 0000 982F      		mov r25,r24
 596 0002 9095      		com r25
 597 0004 8091 0000 		lds r24,weak_mods
 598               	.LVL24:
 202:./tmk_core/common/action_util.c **** /** \brief set weak mods
 599               		.loc 2 202 46 view .LVU122
 600 0008 8923      		and r24,r25
 601 000a 8093 0000 		sts weak_mods,r24
 602               	/* epilogue start */
 202:./tmk_core/common/action_util.c **** /** \brief set weak mods
 603               		.loc 2 202 1 view .LVU123
 604 000e 0895      		ret
 605               		.cfi_endproc
 606               	.LFE25:
 608               		.section	.text.set_weak_mods,"ax",@progbits
 609               	.global	set_weak_mods
 611               	set_weak_mods:
 612               	.LVL25:
 613               	.LFB26:
 207:./tmk_core/common/action_util.c **** /** \brief clear weak mods
 614               		.loc 2 207 34 is_stmt 1 view -0
 615               		.cfi_startproc
 616               	/* prologue: function */
 617               	/* frame size = 0 */
 618               	/* stack size = 0 */
 619               	.L__stack_usage = 0
 207:./tmk_core/common/action_util.c **** /** \brief clear weak mods
 620               		.loc 2 207 36 view .LVU125
 207:./tmk_core/common/action_util.c **** /** \brief clear weak mods
 621               		.loc 2 207 46 is_stmt 0 view .LVU126
 622 0000 8093 0000 		sts weak_mods,r24
 623               	/* epilogue start */
 207:./tmk_core/common/action_util.c **** /** \brief clear weak mods
 624               		.loc 2 207 1 view .LVU127
 625 0004 0895      		ret
 626               		.cfi_endproc
 627               	.LFE26:
 629               		.section	.text.clear_weak_mods,"ax",@progbits
 630               	.global	clear_weak_mods
 632               	clear_weak_mods:
 633               	.LFB27:
 212:./tmk_core/common/action_util.c **** 
 634               		.loc 2 212 28 is_stmt 1 view -0
 635               		.cfi_startproc
 636               	/* prologue: function */
 637               	/* frame size = 0 */
 638               	/* stack size = 0 */
 639               	.L__stack_usage = 0
 212:./tmk_core/common/action_util.c **** 
 640               		.loc 2 212 30 view .LVU129
 212:./tmk_core/common/action_util.c **** 
 641               		.loc 2 212 40 is_stmt 0 view .LVU130
 642 0000 1092 0000 		sts weak_mods,__zero_reg__
 643               	/* epilogue start */
 212:./tmk_core/common/action_util.c **** 
 644               		.loc 2 212 1 view .LVU131
 645 0004 0895      		ret
 646               		.cfi_endproc
 647               	.LFE27:
 649               		.section	.text.get_macro_mods,"ax",@progbits
 650               	.global	get_macro_mods
 652               	get_macro_mods:
 653               	.LFB28:
 219:./tmk_core/common/action_util.c **** /** \brief add macro mods
 654               		.loc 2 219 30 is_stmt 1 view -0
 655               		.cfi_startproc
 656               	/* prologue: function */
 657               	/* frame size = 0 */
 658               	/* stack size = 0 */
 659               	.L__stack_usage = 0
 219:./tmk_core/common/action_util.c **** /** \brief add macro mods
 660               		.loc 2 219 32 view .LVU133
 219:./tmk_core/common/action_util.c **** /** \brief add macro mods
 661               		.loc 2 219 1 is_stmt 0 view .LVU134
 662 0000 8091 0000 		lds r24,macro_mods
 663               	/* epilogue start */
 664 0004 0895      		ret
 665               		.cfi_endproc
 666               	.LFE28:
 668               		.section	.text.add_macro_mods,"ax",@progbits
 669               	.global	add_macro_mods
 671               	add_macro_mods:
 672               	.LVL26:
 673               	.LFB29:
 224:./tmk_core/common/action_util.c **** /** \brief del macro mods
 674               		.loc 2 224 35 is_stmt 1 view -0
 675               		.cfi_startproc
 676               	/* prologue: function */
 677               	/* frame size = 0 */
 678               	/* stack size = 0 */
 679               	.L__stack_usage = 0
 224:./tmk_core/common/action_util.c **** /** \brief del macro mods
 680               		.loc 2 224 37 view .LVU136
 224:./tmk_core/common/action_util.c **** /** \brief del macro mods
 681               		.loc 2 224 48 is_stmt 0 view .LVU137
 682 0000 9091 0000 		lds r25,macro_mods
 683 0004 982B      		or r25,r24
 684 0006 9093 0000 		sts macro_mods,r25
 685               	/* epilogue start */
 224:./tmk_core/common/action_util.c **** /** \brief del macro mods
 686               		.loc 2 224 1 view .LVU138
 687 000a 0895      		ret
 688               		.cfi_endproc
 689               	.LFE29:
 691               		.section	.text.del_macro_mods,"ax",@progbits
 692               	.global	del_macro_mods
 694               	del_macro_mods:
 695               	.LVL27:
 696               	.LFB30:
 229:./tmk_core/common/action_util.c **** /** \brief set macro mods
 697               		.loc 2 229 35 is_stmt 1 view -0
 698               		.cfi_startproc
 699               	/* prologue: function */
 700               	/* frame size = 0 */
 701               	/* stack size = 0 */
 702               	.L__stack_usage = 0
 229:./tmk_core/common/action_util.c **** /** \brief set macro mods
 703               		.loc 2 229 37 view .LVU140
 229:./tmk_core/common/action_util.c **** /** \brief set macro mods
 704               		.loc 2 229 48 is_stmt 0 view .LVU141
 705 0000 982F      		mov r25,r24
 706 0002 9095      		com r25
 707 0004 8091 0000 		lds r24,macro_mods
 708               	.LVL28:
 229:./tmk_core/common/action_util.c **** /** \brief set macro mods
 709               		.loc 2 229 48 view .LVU142
 710 0008 8923      		and r24,r25
 711 000a 8093 0000 		sts macro_mods,r24
 712               	/* epilogue start */
 229:./tmk_core/common/action_util.c **** /** \brief set macro mods
 713               		.loc 2 229 1 view .LVU143
 714 000e 0895      		ret
 715               		.cfi_endproc
 716               	.LFE30:
 718               		.section	.text.set_macro_mods,"ax",@progbits
 719               	.global	set_macro_mods
 721               	set_macro_mods:
 722               	.LVL29:
 723               	.LFB31:
 234:./tmk_core/common/action_util.c **** /** \brief clear macro mods
 724               		.loc 2 234 35 is_stmt 1 view -0
 725               		.cfi_startproc
 726               	/* prologue: function */
 727               	/* frame size = 0 */
 728               	/* stack size = 0 */
 729               	.L__stack_usage = 0
 234:./tmk_core/common/action_util.c **** /** \brief clear macro mods
 730               		.loc 2 234 37 view .LVU145
 234:./tmk_core/common/action_util.c **** /** \brief clear macro mods
 731               		.loc 2 234 48 is_stmt 0 view .LVU146
 732 0000 8093 0000 		sts macro_mods,r24
 733               	/* epilogue start */
 234:./tmk_core/common/action_util.c **** /** \brief clear macro mods
 734               		.loc 2 234 1 view .LVU147
 735 0004 0895      		ret
 736               		.cfi_endproc
 737               	.LFE31:
 739               		.section	.text.clear_macro_mods,"ax",@progbits
 740               	.global	clear_macro_mods
 742               	clear_macro_mods:
 743               	.LFB32:
 239:./tmk_core/common/action_util.c **** 
 744               		.loc 2 239 29 is_stmt 1 view -0
 745               		.cfi_startproc
 746               	/* prologue: function */
 747               	/* frame size = 0 */
 748               	/* stack size = 0 */
 749               	.L__stack_usage = 0
 239:./tmk_core/common/action_util.c **** 
 750               		.loc 2 239 31 view .LVU149
 239:./tmk_core/common/action_util.c **** 
 751               		.loc 2 239 42 is_stmt 0 view .LVU150
 752 0000 1092 0000 		sts macro_mods,__zero_reg__
 753               	/* epilogue start */
 239:./tmk_core/common/action_util.c **** 
 754               		.loc 2 239 1 view .LVU151
 755 0004 0895      		ret
 756               		.cfi_endproc
 757               	.LFE32:
 759               		.section	.text.set_oneshot_mods,"ax",@progbits
 760               	.global	set_oneshot_mods
 762               	set_oneshot_mods:
 763               	.LVL30:
 764               	.LFB33:
 247:./tmk_core/common/action_util.c ****     oneshot_mods = mods;
 765               		.loc 2 247 1 is_stmt 1 view -0
 766               		.cfi_startproc
 767               	/* prologue: function */
 768               	/* frame size = 0 */
 769               	/* stack size = 0 */
 770               	.L__stack_usage = 0
 248:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 771               		.loc 2 248 5 view .LVU153
 248:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 772               		.loc 2 248 18 is_stmt 0 view .LVU154
 773 0000 8093 0000 		sts oneshot_mods,r24
 774               	/* epilogue start */
 252:./tmk_core/common/action_util.c **** /** \brief clear oneshot mods
 775               		.loc 2 252 1 view .LVU155
 776 0004 0895      		ret
 777               		.cfi_endproc
 778               	.LFE33:
 780               		.section	.text.clear_oneshot_mods,"ax",@progbits
 781               	.global	clear_oneshot_mods
 783               	clear_oneshot_mods:
 784               	.LFB34:
 258:./tmk_core/common/action_util.c ****     oneshot_mods = 0;
 785               		.loc 2 258 1 is_stmt 1 view -0
 786               		.cfi_startproc
 787               	/* prologue: function */
 788               	/* frame size = 0 */
 789               	/* stack size = 0 */
 790               	.L__stack_usage = 0
 791               		.loc 2 259 5 view .LVU157
 792               		.loc 2 259 18 is_stmt 0 view .LVU158
 793 0000 1092 0000 		sts oneshot_mods,__zero_reg__
 794               	/* epilogue start */
 260:./tmk_core/common/action_util.c **** #if (defined(ONESHOT_TIMEOUT) && (ONESHOT_TIMEOUT > 0))
 261:./tmk_core/common/action_util.c ****     oneshot_time = 0;
 262:./tmk_core/common/action_util.c **** #endif
 263:./tmk_core/common/action_util.c **** }
 795               		.loc 2 263 1 view .LVU159
 796 0004 0895      		ret
 797               		.cfi_endproc
 798               	.LFE34:
 800               		.section	.text.get_oneshot_mods,"ax",@progbits
 801               	.global	get_oneshot_mods
 803               	get_oneshot_mods:
 804               	.LFB35:
 264:./tmk_core/common/action_util.c **** /** \brief get oneshot mods
 265:./tmk_core/common/action_util.c ****  *
 266:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 267:./tmk_core/common/action_util.c ****  */
 268:./tmk_core/common/action_util.c **** uint8_t get_oneshot_mods(void)
 269:./tmk_core/common/action_util.c **** {
 805               		.loc 2 269 1 is_stmt 1 view -0
 806               		.cfi_startproc
 807               	/* prologue: function */
 808               	/* frame size = 0 */
 809               	/* stack size = 0 */
 810               	.L__stack_usage = 0
 270:./tmk_core/common/action_util.c ****     return oneshot_mods;
 811               		.loc 2 270 5 view .LVU161
 271:./tmk_core/common/action_util.c **** }
 812               		.loc 2 271 1 is_stmt 0 view .LVU162
 813 0000 8091 0000 		lds r24,oneshot_mods
 814               	/* epilogue start */
 815 0004 0895      		ret
 816               		.cfi_endproc
 817               	.LFE35:
 819               		.section	.text.has_anymod,"ax",@progbits
 820               	.global	has_anymod
 822               	has_anymod:
 823               	.LFB36:
 272:./tmk_core/common/action_util.c **** #endif
 273:./tmk_core/common/action_util.c **** 
 274:./tmk_core/common/action_util.c **** /** \brief inspect keyboard state
 275:./tmk_core/common/action_util.c ****  *
 276:./tmk_core/common/action_util.c ****  * FIXME: needs doc
 277:./tmk_core/common/action_util.c ****  */
 278:./tmk_core/common/action_util.c **** uint8_t has_anymod(void)
 279:./tmk_core/common/action_util.c **** {
 824               		.loc 2 279 1 is_stmt 1 view -0
 825               		.cfi_startproc
 826               	/* prologue: function */
 827               	/* frame size = 0 */
 828               	/* stack size = 0 */
 829               	.L__stack_usage = 0
 280:./tmk_core/common/action_util.c ****     return bitpop(real_mods);
 830               		.loc 2 280 5 view .LVU164
 831               		.loc 2 280 12 is_stmt 0 view .LVU165
 832 0000 8091 0000 		lds r24,real_mods
 833 0004 0C94 0000 		jmp bitpop
 834               	.LVL31:
 835               		.cfi_endproc
 836               	.LFE36:
 838               		.section	.bss.oneshot_layer_data,"aw",@nobits
 841               	oneshot_layer_data:
 842 0000 00        		.zero	1
 843               		.section	.bss.oneshot_locked_mods,"aw",@nobits
 846               	oneshot_locked_mods:
 847 0000 00        		.zero	1
 848               		.section	.bss.oneshot_mods,"aw",@nobits
 851               	oneshot_mods:
 852 0000 00        		.zero	1
 853               	.global	keyboard_report
 854               		.section	.data.keyboard_report,"aw"
 857               	keyboard_report:
 858 0000 0000      		.word	__compound_literal.0
 859               		.section	.bss.__compound_literal.0,"aw",@nobits
 862               	__compound_literal.0:
 863 0000 0000 0000 		.zero	8
 863      0000 0000 
 864               		.section	.bss.macro_mods,"aw",@nobits
 867               	macro_mods:
 868 0000 00        		.zero	1
 869               		.section	.bss.weak_mods,"aw",@nobits
 872               	weak_mods:
 873 0000 00        		.zero	1
 874               		.section	.bss.real_mods,"aw",@nobits
 877               	real_mods:
 878 0000 00        		.zero	1
 879               		.text
 880               	.Letext0:
 881               		.file 3 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 882               		.file 4 "./tmk_core/common/report.h"
 883               		.file 5 "./tmk_core/common/host.h"
 884               		.file 6 "./tmk_core/common/avr/xprintf.h"
 885               		.file 7 "./tmk_core/common/debug.h"
 886               		.file 8 "./tmk_core/common/action_layer.h"
 887               		.file 9 "./tmk_core/common/timer.h"
 888               		.file 10 "./quantum/keycode_config.h"
 889               		.file 11 "./tmk_core/common/util.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_util.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:13     .text.add_key:0000000000000000 add_key
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:857    .data.keyboard_report:0000000000000000 keyboard_report
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:39     .text.del_key:0000000000000000 del_key
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:64     .text.clear_keys:0000000000000000 clear_keys
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:83     .text.get_oneshot_locked_mods:0000000000000000 get_oneshot_locked_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:846    .bss.oneshot_locked_mods:0000000000000000 oneshot_locked_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:103    .text.set_oneshot_locked_mods:0000000000000000 set_oneshot_locked_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:124    .text.clear_oneshot_locked_mods:0000000000000000 clear_oneshot_locked_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:144    .text.has_oneshot_mods_timed_out:0000000000000000 has_oneshot_mods_timed_out
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:163    .text.get_oneshot_layer:0000000000000000 get_oneshot_layer
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:841    .bss.oneshot_layer_data:0000000000000000 oneshot_layer_data
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:186    .text.get_oneshot_layer_state:0000000000000000 get_oneshot_layer_state
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:207    .text.set_oneshot_layer:0000000000000000 set_oneshot_layer
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:237    .text.reset_oneshot_layer:0000000000000000 reset_oneshot_layer
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:257    .text.clear_oneshot_layer_state:0000000000000000 clear_oneshot_layer_state
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:325    .text.is_oneshot_layer_active:0000000000000000 is_oneshot_layer_active
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:358    .text.send_keyboard_report:0000000000000000 send_keyboard_report
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:877    .bss.real_mods:0000000000000000 real_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:872    .bss.weak_mods:0000000000000000 weak_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:867    .bss.macro_mods:0000000000000000 macro_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:851    .bss.oneshot_mods:0000000000000000 oneshot_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:432    .text.get_mods:0000000000000000 get_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:451    .text.add_mods:0000000000000000 add_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:474    .text.del_mods:0000000000000000 del_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:501    .text.set_mods:0000000000000000 set_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:522    .text.clear_mods:0000000000000000 clear_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:542    .text.get_weak_mods:0000000000000000 get_weak_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:561    .text.add_weak_mods:0000000000000000 add_weak_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:584    .text.del_weak_mods:0000000000000000 del_weak_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:611    .text.set_weak_mods:0000000000000000 set_weak_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:632    .text.clear_weak_mods:0000000000000000 clear_weak_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:652    .text.get_macro_mods:0000000000000000 get_macro_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:671    .text.add_macro_mods:0000000000000000 add_macro_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:694    .text.del_macro_mods:0000000000000000 del_macro_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:721    .text.set_macro_mods:0000000000000000 set_macro_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:742    .text.clear_macro_mods:0000000000000000 clear_macro_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:762    .text.set_oneshot_mods:0000000000000000 set_oneshot_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:783    .text.clear_oneshot_mods:0000000000000000 clear_oneshot_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:803    .text.get_oneshot_mods:0000000000000000 get_oneshot_mods
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:822    .text.has_anymod:0000000000000000 has_anymod
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc55Ckd2.s:862    .bss.__compound_literal.0:0000000000000000 __compound_literal.0

UNDEFINED SYMBOLS
add_key_to_report
del_key_from_report
clear_keys_from_report
layer_on
layer_off
has_anykey
host_keyboard_send
bitpop
__do_copy_data
__do_clear_bss
