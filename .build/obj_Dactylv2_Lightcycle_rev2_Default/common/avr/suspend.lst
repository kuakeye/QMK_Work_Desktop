   1               		.file	"suspend.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.suspend_idle,"ax",@progbits
  11               	.global	suspend_idle
  13               	suspend_idle:
  14               	.LVL0:
  15               	.LFB108:
  16               		.file 1 "./tmk_core/common/avr/suspend.c"
   1:./tmk_core/common/avr/suspend.c **** #include <stdbool.h>
   2:./tmk_core/common/avr/suspend.c **** #include <avr/sleep.h>
   3:./tmk_core/common/avr/suspend.c **** #include <avr/wdt.h>
   4:./tmk_core/common/avr/suspend.c **** #include <avr/interrupt.h>
   5:./tmk_core/common/avr/suspend.c **** #include "matrix.h"
   6:./tmk_core/common/avr/suspend.c **** #include "action.h"
   7:./tmk_core/common/avr/suspend.c **** #include "backlight.h"
   8:./tmk_core/common/avr/suspend.c **** #include "suspend_avr.h"
   9:./tmk_core/common/avr/suspend.c **** #include "suspend.h"
  10:./tmk_core/common/avr/suspend.c **** #include "timer.h"
  11:./tmk_core/common/avr/suspend.c **** #include "led.h"
  12:./tmk_core/common/avr/suspend.c **** #include "host.h"
  13:./tmk_core/common/avr/suspend.c **** 
  14:./tmk_core/common/avr/suspend.c **** #ifdef PROTOCOL_LUFA
  15:./tmk_core/common/avr/suspend.c **** 	#include "lufa.h"
  16:./tmk_core/common/avr/suspend.c **** #endif
  17:./tmk_core/common/avr/suspend.c **** 
  18:./tmk_core/common/avr/suspend.c **** #ifdef AUDIO_ENABLE
  19:./tmk_core/common/avr/suspend.c ****     #include "audio.h"
  20:./tmk_core/common/avr/suspend.c **** #endif /* AUDIO_ENABLE */
  21:./tmk_core/common/avr/suspend.c **** 
  22:./tmk_core/common/avr/suspend.c **** #ifdef RGBLIGHT_SLEEP
  23:./tmk_core/common/avr/suspend.c ****   #include "rgblight.h"
  24:./tmk_core/common/avr/suspend.c **** #endif
  25:./tmk_core/common/avr/suspend.c **** 
  26:./tmk_core/common/avr/suspend.c **** 
  27:./tmk_core/common/avr/suspend.c **** #define wdt_intr_enable(value)   \
  28:./tmk_core/common/avr/suspend.c **** __asm__ __volatile__ (  \
  29:./tmk_core/common/avr/suspend.c ****     "in __tmp_reg__,__SREG__" "\n\t"    \
  30:./tmk_core/common/avr/suspend.c ****     "cli" "\n\t"    \
  31:./tmk_core/common/avr/suspend.c ****     "wdr" "\n\t"    \
  32:./tmk_core/common/avr/suspend.c ****     "sts %0,%1" "\n\t"  \
  33:./tmk_core/common/avr/suspend.c ****     "out __SREG__,__tmp_reg__" "\n\t"   \
  34:./tmk_core/common/avr/suspend.c ****     "sts %0,%2" "\n\t" \
  35:./tmk_core/common/avr/suspend.c ****     : /* no outputs */  \
  36:./tmk_core/common/avr/suspend.c ****     : "M" (_SFR_MEM_ADDR(_WD_CONTROL_REG)), \
  37:./tmk_core/common/avr/suspend.c ****     "r" (_BV(_WD_CHANGE_BIT) | _BV(WDE)), \
  38:./tmk_core/common/avr/suspend.c ****     "r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) | \
  39:./tmk_core/common/avr/suspend.c ****         _BV(WDIE) | (value & 0x07)) ) \
  40:./tmk_core/common/avr/suspend.c ****     : "r0"  \
  41:./tmk_core/common/avr/suspend.c **** )
  42:./tmk_core/common/avr/suspend.c **** 
  43:./tmk_core/common/avr/suspend.c **** 
  44:./tmk_core/common/avr/suspend.c **** /** \brief Suspend idle
  45:./tmk_core/common/avr/suspend.c ****  *
  46:./tmk_core/common/avr/suspend.c ****  * FIXME: needs doc
  47:./tmk_core/common/avr/suspend.c ****  */
  48:./tmk_core/common/avr/suspend.c **** void suspend_idle(uint8_t time)
  49:./tmk_core/common/avr/suspend.c **** {
  17               		.loc 1 49 1 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  50:./tmk_core/common/avr/suspend.c ****     cli();
  23               		.loc 1 50 5 view .LVU1
  24               	/* #APP */
  25               	 ;  50 "./tmk_core/common/avr/suspend.c" 1
  26 0000 F894      		cli
  27               	 ;  0 "" 2
  51:./tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_IDLE);
  28               		.loc 1 51 5 view .LVU2
  29               		.loc 1 51 5 view .LVU3
  30               	/* #NOAPP */
  31 0002 83B7      		in r24,0x33
  32               	.LVL1:
  33               		.loc 1 51 5 is_stmt 0 view .LVU4
  34 0004 817F      		andi r24,lo8(-15)
  35 0006 83BF      		out 0x33,r24
  36               		.loc 1 51 5 is_stmt 1 view .LVU5
  52:./tmk_core/common/avr/suspend.c ****     sleep_enable();
  37               		.loc 1 52 5 view .LVU6
  38               		.loc 1 52 5 view .LVU7
  39 0008 83B7      		in r24,0x33
  40 000a 8160      		ori r24,lo8(1)
  41 000c 83BF      		out 0x33,r24
  42               		.loc 1 52 5 view .LVU8
  53:./tmk_core/common/avr/suspend.c ****     sei();
  43               		.loc 1 53 5 view .LVU9
  44               	/* #APP */
  45               	 ;  53 "./tmk_core/common/avr/suspend.c" 1
  46 000e 7894      		sei
  47               	 ;  0 "" 2
  54:./tmk_core/common/avr/suspend.c ****     sleep_cpu();
  48               		.loc 1 54 5 view .LVU10
  49               		.loc 1 54 5 view .LVU11
  50               	 ;  54 "./tmk_core/common/avr/suspend.c" 1
  51 0010 8895      		sleep
  52               		
  53               	 ;  0 "" 2
  54               		.loc 1 54 5 view .LVU12
  55:./tmk_core/common/avr/suspend.c ****     sleep_disable();
  55               		.loc 1 55 5 view .LVU13
  56               		.loc 1 55 5 view .LVU14
  57               	/* #NOAPP */
  58 0012 83B7      		in r24,0x33
  59 0014 8E7F      		andi r24,lo8(-2)
  60 0016 83BF      		out 0x33,r24
  61               		.loc 1 55 5 view .LVU15
  62               	/* epilogue start */
  56:./tmk_core/common/avr/suspend.c **** }
  63               		.loc 1 56 1 is_stmt 0 view .LVU16
  64 0018 0895      		ret
  65               		.cfi_endproc
  66               	.LFE108:
  68               		.section	.text.suspend_power_down,"ax",@progbits
  69               	.global	suspend_power_down
  71               	suspend_power_down:
  72               	.LFB110:
  57:./tmk_core/common/avr/suspend.c **** 
  58:./tmk_core/common/avr/suspend.c **** #ifndef NO_SUSPEND_POWER_DOWN
  59:./tmk_core/common/avr/suspend.c **** /** \brief Power down MCU with watchdog timer
  60:./tmk_core/common/avr/suspend.c ****  *
  61:./tmk_core/common/avr/suspend.c ****  * wdto: watchdog timer timeout defined in <avr/wdt.h>
  62:./tmk_core/common/avr/suspend.c ****  *          WDTO_15MS
  63:./tmk_core/common/avr/suspend.c ****  *          WDTO_30MS
  64:./tmk_core/common/avr/suspend.c ****  *          WDTO_60MS
  65:./tmk_core/common/avr/suspend.c ****  *          WDTO_120MS
  66:./tmk_core/common/avr/suspend.c ****  *          WDTO_250MS
  67:./tmk_core/common/avr/suspend.c ****  *          WDTO_500MS
  68:./tmk_core/common/avr/suspend.c ****  *          WDTO_1S
  69:./tmk_core/common/avr/suspend.c ****  *          WDTO_2S
  70:./tmk_core/common/avr/suspend.c ****  *          WDTO_4S
  71:./tmk_core/common/avr/suspend.c ****  *          WDTO_8S
  72:./tmk_core/common/avr/suspend.c ****  */
  73:./tmk_core/common/avr/suspend.c **** static uint8_t wdt_timeout = 0;
  74:./tmk_core/common/avr/suspend.c **** 
  75:./tmk_core/common/avr/suspend.c **** /** \brief Power down
  76:./tmk_core/common/avr/suspend.c ****  *
  77:./tmk_core/common/avr/suspend.c ****  * FIXME: needs doc
  78:./tmk_core/common/avr/suspend.c ****  */
  79:./tmk_core/common/avr/suspend.c **** static void power_down(uint8_t wdto)
  80:./tmk_core/common/avr/suspend.c **** {
  81:./tmk_core/common/avr/suspend.c **** #ifdef PROTOCOL_LUFA
  82:./tmk_core/common/avr/suspend.c ****     if (USB_DeviceState == DEVICE_STATE_Configured) return;
  83:./tmk_core/common/avr/suspend.c **** #endif
  84:./tmk_core/common/avr/suspend.c ****     wdt_timeout = wdto;
  85:./tmk_core/common/avr/suspend.c **** 
  86:./tmk_core/common/avr/suspend.c ****     // Watchdog Interrupt Mode
  87:./tmk_core/common/avr/suspend.c ****     wdt_intr_enable(wdto);
  88:./tmk_core/common/avr/suspend.c **** 
  89:./tmk_core/common/avr/suspend.c **** #ifdef BACKLIGHT_ENABLE
  90:./tmk_core/common/avr/suspend.c **** 	backlight_set(0);
  91:./tmk_core/common/avr/suspend.c **** #endif
  92:./tmk_core/common/avr/suspend.c **** 
  93:./tmk_core/common/avr/suspend.c **** 	// Turn off LED indicators
  94:./tmk_core/common/avr/suspend.c **** 	led_set(0);
  95:./tmk_core/common/avr/suspend.c **** 
  96:./tmk_core/common/avr/suspend.c **** 	#ifdef AUDIO_ENABLE
  97:./tmk_core/common/avr/suspend.c ****         // This sometimes disables the start-up noise, so it's been disabled
  98:./tmk_core/common/avr/suspend.c **** 		// stop_all_notes();
  99:./tmk_core/common/avr/suspend.c **** 	#endif /* AUDIO_ENABLE */
 100:./tmk_core/common/avr/suspend.c **** #ifdef RGBLIGHT_SLEEP
 101:./tmk_core/common/avr/suspend.c **** #ifdef RGBLIGHT_ANIMATIONS
 102:./tmk_core/common/avr/suspend.c ****   rgblight_timer_disable();
 103:./tmk_core/common/avr/suspend.c **** #endif
 104:./tmk_core/common/avr/suspend.c ****   rgblight_disable();
 105:./tmk_core/common/avr/suspend.c **** #endif
 106:./tmk_core/common/avr/suspend.c ****     // TODO: more power saving
 107:./tmk_core/common/avr/suspend.c ****     // See PicoPower application note
 108:./tmk_core/common/avr/suspend.c ****     // - I/O port input with pullup
 109:./tmk_core/common/avr/suspend.c ****     // - prescale clock
 110:./tmk_core/common/avr/suspend.c ****     // - BOD disable
 111:./tmk_core/common/avr/suspend.c ****     // - Power Reduction Register PRR
 112:./tmk_core/common/avr/suspend.c ****     set_sleep_mode(SLEEP_MODE_PWR_DOWN);
 113:./tmk_core/common/avr/suspend.c ****     sleep_enable();
 114:./tmk_core/common/avr/suspend.c ****     sei();
 115:./tmk_core/common/avr/suspend.c ****     sleep_cpu();
 116:./tmk_core/common/avr/suspend.c ****     sleep_disable();
 117:./tmk_core/common/avr/suspend.c **** 
 118:./tmk_core/common/avr/suspend.c ****     // Disable watchdog after sleep
 119:./tmk_core/common/avr/suspend.c ****     wdt_disable();
 120:./tmk_core/common/avr/suspend.c **** }
 121:./tmk_core/common/avr/suspend.c **** #endif
 122:./tmk_core/common/avr/suspend.c **** 
 123:./tmk_core/common/avr/suspend.c **** /** \brief Suspend power down
 124:./tmk_core/common/avr/suspend.c ****  *
 125:./tmk_core/common/avr/suspend.c ****  * FIXME: needs doc
 126:./tmk_core/common/avr/suspend.c ****  */
 127:./tmk_core/common/avr/suspend.c **** void suspend_power_down(void)
 128:./tmk_core/common/avr/suspend.c **** {
  73               		.loc 1 128 1 is_stmt 1 view -0
  74               		.cfi_startproc
  75               	/* prologue: function */
  76               	/* frame size = 0 */
  77               	/* stack size = 0 */
  78               	.L__stack_usage = 0
 129:./tmk_core/common/avr/suspend.c **** #ifndef NO_SUSPEND_POWER_DOWN
 130:./tmk_core/common/avr/suspend.c ****     power_down(WDTO_15MS);
  79               		.loc 1 130 5 view .LVU18
  80               	.LBB13:
  81               	.LBI13:
  79:./tmk_core/common/avr/suspend.c **** {
  82               		.loc 1 79 13 view .LVU19
  83               	.LVL2:
  84               	.LBB14:
  82:./tmk_core/common/avr/suspend.c **** #endif
  85               		.loc 1 82 5 view .LVU20
  82:./tmk_core/common/avr/suspend.c **** #endif
  86               		.loc 1 82 25 is_stmt 0 view .LVU21
  87 0000 8091 0000 		lds r24,USB_DeviceState
  82:./tmk_core/common/avr/suspend.c **** #endif
  88               		.loc 1 82 8 view .LVU22
  89 0004 8430      		cpi r24,lo8(4)
  90 0006 01F0      		breq .L2
  84:./tmk_core/common/avr/suspend.c **** 
  91               		.loc 1 84 5 is_stmt 1 view .LVU23
  84:./tmk_core/common/avr/suspend.c **** 
  92               		.loc 1 84 17 is_stmt 0 view .LVU24
  93 0008 1092 0000 		sts wdt_timeout,__zero_reg__
  87:./tmk_core/common/avr/suspend.c **** 
  94               		.loc 1 87 5 is_stmt 1 view .LVU25
  95 000c 88E1      		ldi r24,lo8(24)
  96 000e 90E0      		ldi r25,0
  97 0010 20E4      		ldi r18,lo8(64)
  98               	/* #APP */
  99               	 ;  87 "./tmk_core/common/avr/suspend.c" 1
 100 0012 0FB6      		in __tmp_reg__,__SREG__
 101 0014 F894      		cli
 102 0016 A895      		wdr
 103 0018 8093 6000 		sts 96,r24
 104 001c 0FBE      		out __SREG__,__tmp_reg__
 105 001e 2093 6000 		sts 96,r18
 106               		
 107               	 ;  0 "" 2
  94:./tmk_core/common/avr/suspend.c **** 
 108               		.loc 1 94 2 view .LVU26
 109               	/* #NOAPP */
 110 0022 80E0      		ldi r24,0
 111 0024 0E94 0000 		call led_set
 112               	.LVL3:
 112:./tmk_core/common/avr/suspend.c ****     sleep_enable();
 113               		.loc 1 112 5 view .LVU27
 112:./tmk_core/common/avr/suspend.c ****     sleep_enable();
 114               		.loc 1 112 5 view .LVU28
 115 0028 83B7      		in r24,0x33
 116 002a 817F      		andi r24,lo8(-15)
 117 002c 8460      		ori r24,lo8(4)
 118 002e 83BF      		out 0x33,r24
 112:./tmk_core/common/avr/suspend.c ****     sleep_enable();
 119               		.loc 1 112 5 view .LVU29
 113:./tmk_core/common/avr/suspend.c ****     sei();
 120               		.loc 1 113 5 view .LVU30
 113:./tmk_core/common/avr/suspend.c ****     sei();
 121               		.loc 1 113 5 view .LVU31
 122 0030 83B7      		in r24,0x33
 123 0032 8160      		ori r24,lo8(1)
 124 0034 83BF      		out 0x33,r24
 113:./tmk_core/common/avr/suspend.c ****     sei();
 125               		.loc 1 113 5 view .LVU32
 114:./tmk_core/common/avr/suspend.c ****     sleep_cpu();
 126               		.loc 1 114 5 view .LVU33
 127               	/* #APP */
 128               	 ;  114 "./tmk_core/common/avr/suspend.c" 1
 129 0036 7894      		sei
 130               	 ;  0 "" 2
 115:./tmk_core/common/avr/suspend.c ****     sleep_disable();
 131               		.loc 1 115 5 view .LVU34
 115:./tmk_core/common/avr/suspend.c ****     sleep_disable();
 132               		.loc 1 115 5 view .LVU35
 133               	 ;  115 "./tmk_core/common/avr/suspend.c" 1
 134 0038 8895      		sleep
 135               		
 136               	 ;  0 "" 2
 115:./tmk_core/common/avr/suspend.c ****     sleep_disable();
 137               		.loc 1 115 5 view .LVU36
 116:./tmk_core/common/avr/suspend.c **** 
 138               		.loc 1 116 5 view .LVU37
 116:./tmk_core/common/avr/suspend.c **** 
 139               		.loc 1 116 5 view .LVU38
 140               	/* #NOAPP */
 141 003a 83B7      		in r24,0x33
 142 003c 8E7F      		andi r24,lo8(-2)
 143 003e 83BF      		out 0x33,r24
 116:./tmk_core/common/avr/suspend.c **** 
 144               		.loc 1 116 5 view .LVU39
 119:./tmk_core/common/avr/suspend.c **** }
 145               		.loc 1 119 5 view .LVU40
 146               	.LBB15:
 147               	.LBI15:
 148               		.file 2 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h"
   1:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /* Copyright (c) 2002, 2004 Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    Copyright (c) 2005, 2006, 2007 Eric B. Weddington
   3:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    All rights reserved.
   4:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
   5:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    Redistribution and use in source and binary forms, with or without
   6:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    modification, are permitted provided that the following conditions are met:
   7:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
   8:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    * Redistributions of source code must retain the above copyright
   9:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer.
  10:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  11:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    * Redistributions in binary form must reproduce the above copyright
  12:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****      notice, this list of conditions and the following disclaimer in
  13:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****      the documentation and/or other materials provided with the
  14:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****      distribution.
  15:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  16:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    * Neither the name of the copyright holders nor the names of
  17:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****      contributors may be used to endorse or promote products derived
  18:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****      from this software without specific prior written permission.
  19:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  20:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  24:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  25:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  26:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  27:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  28:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  29:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  30:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****   POSSIBILITY OF SUCH DAMAGE. */
  31:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  32:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /* $Id: wdt.h 2503 2016-02-07 22:59:47Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  34:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /*
  35:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    avr/wdt.h - macros for AVR watchdog timer
  36:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****  */
  37:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  38:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #ifndef _AVR_WDT_H_
  39:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define _AVR_WDT_H_
  40:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  41:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #include <avr/io.h>
  42:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #include <stdint.h>
  43:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  44:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /** \file */
  45:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /** \defgroup avr_watchdog <avr/wdt.h>: Watchdog timer handling
  46:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     \code #include <avr/wdt.h> \endcode
  47:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     This header file declares the interface to some inline macros
  49:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     handling the watchdog timer present in many AVR devices.  In order
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     to prevent the watchdog timer configuration from being
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     accidentally altered by a crashing application, a special timed
  52:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     sequence is required in order to change it.  The macros within
  53:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     this header file handle the required sequence automatically
  54:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     before changing any value.  Interrupts will be disabled during
  55:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     the manipulation.
  56:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  57:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     \note Depending on the fuse configuration of the particular
  58:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     device, further restrictions might apply, in particular it might
  59:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     be disallowed to turn off the watchdog timer.
  60:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  61:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     Note that for newer devices (ATmega88 and newer, effectively any
  62:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     AVR that has the option to also generate interrupts), the watchdog
  63:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     timer remains active even after a system reset (except a power-on
  64:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     condition), using the fastest prescaler value (approximately 15
  65:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     ms).  It is therefore required to turn off the watchdog early
  66:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     during program startup, the datasheet recommends a sequence like
  67:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     the following:
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  69:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     \code
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     #include <stdint.h>
  71:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     #include <avr/wdt.h>
  72:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  73:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     uint8_t mcusr_mirror __attribute__ ((section (".noinit")));
  74:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  75:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     void get_mcusr(void) \
  76:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       __attribute__((naked)) \
  77:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       __attribute__((section(".init3")));
  78:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     void get_mcusr(void)
  79:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     {
  80:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       mcusr_mirror = MCUSR;
  81:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       MCUSR = 0;
  82:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       wdt_disable();
  83:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     }
  84:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     \endcode
  85:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  86:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     Saving the value of MCUSR in \c mcusr_mirror is only needed if the
  87:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     application later wants to examine the reset source, but in particular, 
  88:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     clearing the watchdog reset flag before disabling the
  89:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     watchdog is required, according to the datasheet.
  90:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** */
  91:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  92:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /**
  93:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
  94:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    Reset the watchdog timer.  When the watchdog timer is enabled,
  95:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    a call to this instruction is required before the timer expires,
  96:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    otherwise a watchdog-initiated device reset will occur. 
  97:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** */
  98:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
  99:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define wdt_reset() __asm__ __volatile__ ("wdr")
 100:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 101:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #ifndef __DOXYGEN__
 102:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 103:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #if defined(WDP3)
 104:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       _BV(WDP3)
 105:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #else
 106:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** # define _WD_PS3_MASK       0x00
 107:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #endif
 108:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 109:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #if defined(WDTCSR)
 110:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCSR
 111:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #elif defined(WDTCR)
 112:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDTCR
 113:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #else
 114:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #  define _WD_CONTROL_REG     WDT
 115:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #endif
 116:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 117:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #if defined(WDTOE)
 118:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDTOE
 119:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #else
 120:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define _WD_CHANGE_BIT      WDCE
 121:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #endif
 122:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 123:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #endif	/* !__DOXYGEN__ */
 124:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 125:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 126:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /**
 127:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    \ingroup avr_watchdog
 128:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    Enable the watchdog timer, configuring it for expiry after
 129:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    \c timeout (which is a combination of the \c WDP0 through
 130:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    \c WDP2 bits to write into the \c WDTCR register; For those devices 
 131:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    that have a \c WDTCSR register, it uses the combination of the \c WDP0 
 132:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    through \c WDP3 bits).
 133:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 134:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    See also the symbolic constants \c WDTO_15MS et al.
 135:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** */
 136:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 137:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 138:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #if defined(__AVR_XMEGA__)
 139:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 140:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** /*
 141:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    wdt_enable(timeout) for xmega devices
 142:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** ** write signature (CCP_IOREG_gc) that enables change of protected I/O
 143:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    registers to the CCP register
 144:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** ** At the same time,
 145:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    1) set WDT change enable (WDT_CEN_bm)
 146:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    2) enable WDT (WDT_ENABLE_bm)
 147:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    3) set timeout (timeout)
 148:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** ** Synchronization starts when ENABLE bit of WDT is set. So, wait till it
 149:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    finishes (SYNCBUSY of STATUS register is automatically cleared after the
 150:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****    sync is finished).
 151:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** */
 152:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define wdt_enable(timeout) \
 153:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** do { \
 154:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** uint8_t temp; \
 155:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __asm__ __volatile__ (         \
 156:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"              "\n\t" \
 157:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"            "\n\t" \
 158:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]"     "\n\t" \
 159:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[wdt_enable_timeout]" "\n\t" \
 160:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "1:lds %[tmp], %[wdt_status_reg]"       "\n\t" \
 161:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "sbrc %[tmp], %[wdt_syncbusy_bit]"      "\n\t" \
 162:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "rjmp 1b"                               "\n\t" \
 163:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"             "\n\t" \
 164:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : [tmp]                "=r" (temp) \
 165:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : [rampd]              "I" (_SFR_IO_ADDR(RAMPD)),      \
 166:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [ccp_reg]            "I" (_SFR_IO_ADDR(CCP)),        \
 167:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [ioreg_cen_mask]     "r" ((uint8_t)CCP_IOREG_gc),     \
 168:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [wdt_reg]            "n" (_SFR_MEM_ADDR(WDT_CTRL)),   \
 169:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [wdt_enable_timeout] "r" ((uint8_t)(WDT_CEN_bm | WDT_ENABLE_bm | timeout)), \
 170:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [wdt_status_reg]     "n" (_SFR_MEM_ADDR(WDT_STATUS)), \
 171:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [wdt_syncbusy_bit]   "I" (WDT_SYNCBUSY_bm)            \
 172:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : "r0" \
 173:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** ); \
 174:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** } while(0)
 175:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 176:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define wdt_disable() \
 177:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __asm__ __volatile__ (  \
 178:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "in __tmp_reg__, %[rampd]"          "\n\t" \
 179:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[rampd], __zero_reg__"        "\n\t" \
 180:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[ccp_reg], %[ioreg_cen_mask]" "\n\t" \
 181:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "sts %[wdt_reg], %[disable_mask]"   "\n\t" \
 182:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[rampd], __tmp_reg__"         "\n\t" \
 183:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : \
 184:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : [rampd]             "I" (_SFR_IO_ADDR(RAMPD)),    \
 185:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [ccp_reg]           "I" (_SFR_IO_ADDR(CCP)),      \
 186:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [ioreg_cen_mask]    "r" ((uint8_t)CCP_IOREG_gc),   \
 187:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [wdt_reg]           "n" (_SFR_MEM_ADDR(WDT_CTRL)), \
 188:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [disable_mask]      "r" ((uint8_t)((~WDT_ENABLE_bm) | WDT_CEN_bm)) \
 189:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : "r0" \
 190:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** );
 191:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 192:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #elif defined(__AVR_TINY__)
 193:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 194:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define wdt_enable(value) \
 195:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 196:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 197:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 198:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 199:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 200:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[WDTREG],%[WDVALUE]" "\n\t"  \
 201:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t"  \
 202:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : /* no outputs */  \
 203:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),  \
 204:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 205:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 206:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00) \
 207:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       | _BV(WDE) | (value & 0x07) )) \
 208:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : "r16" \
 209:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** )
 210:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 211:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #define wdt_disable() \
 212:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** do { \
 213:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** uint8_t temp_wd; \
 214:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __asm__ __volatile__ ( \
 215:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "in __tmp_reg__,__SREG__" "\n\t"  \
 216:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "cli" "\n\t"  \
 217:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "wdr" "\n\t"  \
 218:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[CCPADDRESS],%[SIGNATURE]" "\n\t"  \
 219:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "in  %[TEMP_WD],%[WDTREG]" "\n\t" \
 220:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "cbr %[TEMP_WD],%[WDVALUE]" "\n\t" \
 221:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out %[WDTREG],%[TEMP_WD]" "\n\t" \
 222:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     "out __SREG__,__tmp_reg__" "\n\t" \
 223:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : /*no output */ \
 224:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)), \
 225:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [SIGNATURE] "r" ((uint8_t)0xD8), \
 226:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)), \
 227:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [TEMP_WD] "d" (temp_wd), \
 228:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****       [WDVALUE] "n" (1 << WDE) \
 229:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****     : "r16" \
 230:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** ); \
 231:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** }while(0)
 232:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 233:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #elif defined(CCP)
 234:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 235:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** static __inline__
 236:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 237:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 238:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** {
 239:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 240:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 241:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 242:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 243:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 244:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 245:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 246:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 247:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 248:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: /* no outputs */
 249:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 250:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 251:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 252:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 253:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 254:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: "r0"
 255:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			);
 256:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 257:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P (_WD_CONTROL_REG))
 258:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 259:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 260:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 261:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 262:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 263:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 264:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 265:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 266:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: /* no outputs */
 267:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 268:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 269:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 270:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 271:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 272:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: "r0"
 273:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			);
 274:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 275:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P (_WD_CONTROL_REG))
 276:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 277:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 278:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 279:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 280:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 281:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 282:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"sts %[WDTREG],%[WDVALUE]" "\n\t"
 283:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 284:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: /* no outputs */
 285:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 286:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 287:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 288:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 289:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 290:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: "r0"
 291:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			);
 292:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 293:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else
 294:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****  	{
 295:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 296:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"in __tmp_reg__,__SREG__" "\n\t"
 297:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"cli" "\n\t"
 298:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"wdr" "\n\t"
 299:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 300:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out %[WDTREG],%[WDVALUE]" "\n\t"
 301:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			"out __SREG__,__tmp_reg__" "\n\t"
 302:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: /* no outputs */
 303:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 304:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[SIGNATURE] "r" ((uint8_t)0xD8),
 305:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 306:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			[WDVALUE] "r" ((uint8_t)((value & 0x08 ? _WD_PS3_MASK : 0x00)
 307:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				| _BV(WDE) | (value & 0x07) ))
 308:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			: "r0"
 309:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 			);
 310:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 311:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** }
 312:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 313:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** static __inline__
 314:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 315:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** void wdt_disable (void)
 316:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** {
 317:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	if (!_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 318:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 319:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 320:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 321:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 322:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 323:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 324:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 325:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 326:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 327:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 328:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 329:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: /*no output */
 330:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 331:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 332:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 333:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 334:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 335:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 336:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				);
 337:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 338:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else if (!_SFR_IO_REG_P (CCP) && _SFR_IO_REG_P(_WD_CONTROL_REG))
 339:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 340:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 341:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 342:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 343:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 344:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 345:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"sts %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 346:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 347:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 348:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 349:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 350:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: /*no output */
 351:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "n" (_SFR_MEM_ADDR(CCP)),
 352:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 353:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 354:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 355:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 356:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 357:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				);
 358:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 359:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else if (_SFR_IO_REG_P (CCP) && !_SFR_IO_REG_P(_WD_CONTROL_REG))
 360:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 361:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 362:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 363:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 364:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 365:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 366:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 367:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"lds %[TEMP_WD],%[WDTREG]" "\n\t"
 368:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 369:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"sts %[WDTREG],%[TEMP_WD]" "\n\t"
 370:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 371:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: /*no output */
 372:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 373:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 374:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDTREG] "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 375:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 376:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 377:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 378:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				);
 379:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 380:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else
 381:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 382:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         uint8_t temp_wd;
 383:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         __asm__ __volatile__ (
 384:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 385:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 386:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 387:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %[CCPADDRESS],%[SIGNATURE]" "\n\t"
 388:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in %[TEMP_WD],%[WDTREG]" "\n\t"
 389:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cbr %[TEMP_WD],%[WDVALUE]" "\n\t"
 390:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMP_WD]" "\n\t"
 391:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 392:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: /*no output */
 393:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: [CCPADDRESS] "I" (_SFR_IO_ADDR(CCP)),
 394:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[SIGNATURE] "r" ((uint8_t)0xD8),
 395:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDTREG] "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 396:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[TEMP_WD] "d" (temp_wd),
 397:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDVALUE] "n" (1 << WDE)
 398:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 399:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				);
 400:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 401:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** }
 402:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 403:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** #else
 404:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 405:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** static __inline__
 406:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 407:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** void wdt_enable (const uint8_t value)
 408:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** {
 409:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 410:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 411:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 412:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 413:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 414:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 415:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %0, %1" "\n\t"
 416:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 417:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %0, %2" "\n \t"
 418:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: /* no outputs */
 419:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "I" (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 420:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 421:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 422:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 423:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 424:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		);
 425:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 426:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else
 427:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 428:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 429:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__" "\n\t"
 430:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli" "\n\t"
 431:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr" "\n\t"
 432:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"sts %0, %1" "\n\t"
 433:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__" "\n\t"
 434:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"sts %0, %2" "\n \t"
 435:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: /* no outputs */
 436:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "n" (_SFR_MEM_ADDR(_WD_CONTROL_REG)),
 437:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"r" ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE))),
 438:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"r" ((uint8_t) ((value & 0x08 ? _WD_PS3_MASK : 0x00) |
 439:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 						_BV(WDE) | (value & 0x07)) )
 440:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 441:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		);
 442:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 443:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** }
 444:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 
 445:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** static __inline__
 446:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** __attribute__ ((__always_inline__))
 447:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** void wdt_disable (void)
 149               		.loc 2 447 6 view .LVU41
 150               	.LBB16:
 448:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** {
 449:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	if (_SFR_IO_REG_P (_WD_CONTROL_REG))
 151               		.loc 2 449 2 view .LVU42
 152               	.LBB17:
 450:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 451:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 452:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 453:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in __tmp_reg__,__SREG__"    "\n\t"
 454:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"cli"                        "\n\t"
 455:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"wdr"                        "\n\t"
 456:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"in  %[TEMPREG],%[WDTREG]"   "\n\t"
 457:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"ori %[TEMPREG],%[WDCE_WDE]" "\n\t"
 458:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %[WDTREG],%[TEMPREG]"   "\n\t"
 459:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out %[WDTREG],__zero_reg__" "\n\t"
 460:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				"out __SREG__,__tmp_reg__"   "\n\t"
 461:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: [TEMPREG] "=d" (temp_reg)
 462:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: [WDTREG]  "I"  (_SFR_IO_ADDR(_WD_CONTROL_REG)),
 463:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				[WDCE_WDE]  "n"  ((uint8_t)(_BV(_WD_CHANGE_BIT) | _BV(WDE)))
 464:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 				: "r0"
 465:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		);
 466:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	}
 467:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	else
 468:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 	{
 469:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h ****         uint8_t register temp_reg;
 153               		.loc 2 469 9 view .LVU43
 470:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h **** 		__asm__ __volatile__ (
 154               		.loc 2 470 3 view .LVU44
 155               	/* #APP */
 156               	 ;  470 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/avr/wdt.h" 1
 157 0040 0FB6      		in __tmp_reg__,__SREG__
 158 0042 F894      		cli
 159 0044 A895      		wdr
 160 0046 8091 6000 		lds r24,96
 161 004a 8861      		ori r24,24
 162 004c 8093 6000 		sts 96,r24
 163 0050 1092 6000 		sts 96,__zero_reg__
 164 0054 0FBE      		out __SREG__,__tmp_reg__
 165               		
 166               	 ;  0 "" 2
 167               	.LVL4:
 168               	/* #NOAPP */
 169               	.L2:
 170               	/* epilogue start */
 171               		.loc 2 470 3 is_stmt 0 view .LVU45
 172               	.LBE17:
 173               	.LBE16:
 174               	.LBE15:
 175               	.LBE14:
 176               	.LBE13:
 131:./tmk_core/common/avr/suspend.c **** #endif
 132:./tmk_core/common/avr/suspend.c **** }
 177               		.loc 1 132 1 view .LVU46
 178 0056 0895      		ret
 179               		.cfi_endproc
 180               	.LFE110:
 182               		.section	.text.matrix_power_up,"ax",@progbits
 183               		.weak	matrix_power_up
 185               	matrix_power_up:
 186               	.LFB111:
 133:./tmk_core/common/avr/suspend.c **** 
 134:./tmk_core/common/avr/suspend.c **** __attribute__ ((weak)) void matrix_power_up(void) {}
 187               		.loc 1 134 51 is_stmt 1 view -0
 188               		.cfi_startproc
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 191               	/* stack size = 0 */
 192               	.L__stack_usage = 0
 193               		.loc 1 134 52 view .LVU48
 194               	/* epilogue start */
 195               		.loc 1 134 1 is_stmt 0 view .LVU49
 196 0000 0895      		ret
 197               		.cfi_endproc
 198               	.LFE111:
 200               		.set	matrix_power_up.localalias,matrix_power_up
 201               		.section	.text.matrix_power_down,"ax",@progbits
 202               		.weak	matrix_power_down
 204               	matrix_power_down:
 205               	.LFB117:
 206               		.cfi_startproc
 207               	/* prologue: function */
 208               	/* frame size = 0 */
 209               	/* stack size = 0 */
 210               	.L__stack_usage = 0
 211               	/* epilogue start */
 212 0000 0895      		ret
 213               		.cfi_endproc
 214               	.LFE117:
 216               		.section	.text.suspend_wakeup_condition,"ax",@progbits
 217               	.global	suspend_wakeup_condition
 219               	suspend_wakeup_condition:
 220               	.LFB113:
 135:./tmk_core/common/avr/suspend.c **** __attribute__ ((weak)) void matrix_power_down(void) {}
 136:./tmk_core/common/avr/suspend.c **** bool suspend_wakeup_condition(void)
 137:./tmk_core/common/avr/suspend.c **** {
 221               		.loc 1 137 1 is_stmt 1 view -0
 222               		.cfi_startproc
 223               		.loc 1 137 1 is_stmt 0 view .LVU51
 224 0000 CF93      		push r28
 225               	.LCFI0:
 226               		.cfi_def_cfa_offset 3
 227               		.cfi_offset 28, -2
 228               	/* prologue: function */
 229               	/* frame size = 0 */
 230               	/* stack size = 1 */
 231               	.L__stack_usage = 1
 138:./tmk_core/common/avr/suspend.c ****     matrix_power_up();
 232               		.loc 1 138 5 is_stmt 1 view .LVU52
 233 0002 0E94 0000 		call matrix_power_up
 234               	.LVL5:
 139:./tmk_core/common/avr/suspend.c ****     matrix_scan();
 235               		.loc 1 139 5 view .LVU53
 236 0006 0E94 0000 		call matrix_scan
 237               	.LVL6:
 140:./tmk_core/common/avr/suspend.c ****     matrix_power_down();
 238               		.loc 1 140 5 view .LVU54
 239 000a 0E94 0000 		call matrix_power_down
 240               	.LVL7:
 141:./tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 241               		.loc 1 141 5 view .LVU55
 242               	.LBB18:
 243               		.loc 1 141 10 view .LVU56
 244               		.loc 1 141 25 view .LVU57
 245               		.loc 1 141 18 is_stmt 0 view .LVU58
 246 000e C0E0      		ldi r28,0
 247               	.LVL8:
 248               	.L11:
 142:./tmk_core/common/avr/suspend.c ****         if (matrix_get_row(r)) return true;
 249               		.loc 1 142 9 is_stmt 1 view .LVU59
 250               		.loc 1 142 13 is_stmt 0 view .LVU60
 251 0010 8C2F      		mov r24,r28
 252 0012 0E94 0000 		call matrix_get_row
 253               	.LVL9:
 254               		.loc 1 142 12 view .LVU61
 255 0016 8111      		cpse r24,__zero_reg__
 256 0018 00C0      		rjmp .L12
 141:./tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 257               		.loc 1 141 42 is_stmt 1 discriminator 2 view .LVU62
 141:./tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 258               		.loc 1 141 43 is_stmt 0 discriminator 2 view .LVU63
 259 001a CF5F      		subi r28,lo8(-(1))
 260               	.LVL10:
 141:./tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 261               		.loc 1 141 25 is_stmt 1 discriminator 2 view .LVU64
 141:./tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 262               		.loc 1 141 5 is_stmt 0 discriminator 2 view .LVU65
 263 001c CE30      		cpi r28,lo8(14)
 264 001e 01F4      		brne .L11
 265               	.L9:
 266               	/* epilogue start */
 141:./tmk_core/common/avr/suspend.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 267               		.loc 1 141 5 discriminator 2 view .LVU66
 268               	.LBE18:
 143:./tmk_core/common/avr/suspend.c ****     }
 144:./tmk_core/common/avr/suspend.c ****      return false;
 145:./tmk_core/common/avr/suspend.c **** }
 269               		.loc 1 145 1 view .LVU67
 270 0020 CF91      		pop r28
 271               	.LVL11:
 272               		.loc 1 145 1 view .LVU68
 273 0022 0895      		ret
 274               	.LVL12:
 275               	.L12:
 276               	.LBB19:
 142:./tmk_core/common/avr/suspend.c ****         if (matrix_get_row(r)) return true;
 277               		.loc 1 142 39 view .LVU69
 278 0024 81E0      		ldi r24,lo8(1)
 279 0026 00C0      		rjmp .L9
 280               	.LBE19:
 281               		.cfi_endproc
 282               	.LFE113:
 284               		.section	.text.suspend_wakeup_init,"ax",@progbits
 285               	.global	suspend_wakeup_init
 287               	suspend_wakeup_init:
 288               	.LFB114:
 146:./tmk_core/common/avr/suspend.c **** 
 147:./tmk_core/common/avr/suspend.c **** /** \brief run immediately after wakeup
 148:./tmk_core/common/avr/suspend.c ****  *
 149:./tmk_core/common/avr/suspend.c ****  * FIXME: needs doc
 150:./tmk_core/common/avr/suspend.c ****  */
 151:./tmk_core/common/avr/suspend.c **** void suspend_wakeup_init(void)
 152:./tmk_core/common/avr/suspend.c **** {
 289               		.loc 1 152 1 is_stmt 1 view -0
 290               		.cfi_startproc
 291               	/* prologue: function */
 292               	/* frame size = 0 */
 293               	/* stack size = 0 */
 294               	.L__stack_usage = 0
 153:./tmk_core/common/avr/suspend.c ****     // clear keyboard state
 154:./tmk_core/common/avr/suspend.c ****     clear_keyboard();
 295               		.loc 1 154 5 view .LVU71
 296 0000 0E94 0000 		call clear_keyboard
 297               	.LVL13:
 155:./tmk_core/common/avr/suspend.c **** #ifdef BACKLIGHT_ENABLE
 156:./tmk_core/common/avr/suspend.c ****     backlight_init();
 157:./tmk_core/common/avr/suspend.c **** #endif
 158:./tmk_core/common/avr/suspend.c **** 	led_set(host_keyboard_leds());
 298               		.loc 1 158 2 view .LVU72
 299 0004 0E94 0000 		call host_keyboard_leds
 300               	.LVL14:
 301 0008 0C94 0000 		jmp led_set
 302               	.LVL15:
 303               		.cfi_endproc
 304               	.LFE114:
 306               		.section	.text.__vector_12,"ax",@progbits
 307               	.global	__vector_12
 309               	__vector_12:
 310               	.LFB115:
 159:./tmk_core/common/avr/suspend.c **** #ifdef RGBLIGHT_SLEEP
 160:./tmk_core/common/avr/suspend.c ****   rgblight_enable();
 161:./tmk_core/common/avr/suspend.c **** #ifdef RGBLIGHT_ANIMATIONS
 162:./tmk_core/common/avr/suspend.c ****   rgblight_timer_enable();
 163:./tmk_core/common/avr/suspend.c **** #endif
 164:./tmk_core/common/avr/suspend.c **** #endif
 165:./tmk_core/common/avr/suspend.c **** }
 166:./tmk_core/common/avr/suspend.c **** 
 167:./tmk_core/common/avr/suspend.c **** #ifndef NO_SUSPEND_POWER_DOWN
 168:./tmk_core/common/avr/suspend.c **** /* watchdog timeout */
 169:./tmk_core/common/avr/suspend.c **** ISR(WDT_vect)
 170:./tmk_core/common/avr/suspend.c **** {
 311               		.loc 1 170 1 view -0
 312               		.cfi_startproc
 313 0000 1F92 1FB6 		__gcc_isr 1
 313      1F92 1124 
 313      8F93 
 314 000a 9F93      		push r25
 315               	.LCFI1:
 316               		.cfi_def_cfa_offset 3
 317               		.cfi_offset 25, -2
 318 000c AF93      		push r26
 319               	.LCFI2:
 320               		.cfi_def_cfa_offset 4
 321               		.cfi_offset 26, -3
 322 000e BF93      		push r27
 323               	.LCFI3:
 324               		.cfi_def_cfa_offset 5
 325               		.cfi_offset 27, -4
 326               	/* prologue: Signal */
 327               	/* frame size = 0 */
 328               	/* stack size = 3...7 */
 329               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 171:./tmk_core/common/avr/suspend.c ****     // compensate timer for sleep
 172:./tmk_core/common/avr/suspend.c ****     switch (wdt_timeout) {
 330               		.loc 1 172 5 view .LVU74
 331 0010 8091 0000 		lds r24,wdt_timeout
 332 0014 8111      		cpse r24,__zero_reg__
 333 0016 00C0      		rjmp .L15
 173:./tmk_core/common/avr/suspend.c ****         case WDTO_15MS:
 174:./tmk_core/common/avr/suspend.c ****             timer_count += 15 + 2;  // WDTO_15MS + 2(from observation)
 334               		.loc 1 174 13 view .LVU75
 335               		.loc 1 174 25 is_stmt 0 view .LVU76
 336 0018 8091 0000 		lds r24,timer_count
 337 001c 9091 0000 		lds r25,timer_count+1
 338 0020 A091 0000 		lds r26,timer_count+2
 339 0024 B091 0000 		lds r27,timer_count+3
 340 0028 4196      		adiw r24,17
 341 002a A11D      		adc r26,__zero_reg__
 342 002c B11D      		adc r27,__zero_reg__
 343 002e 8093 0000 		sts timer_count,r24
 344 0032 9093 0000 		sts timer_count+1,r25
 345 0036 A093 0000 		sts timer_count+2,r26
 346 003a B093 0000 		sts timer_count+3,r27
 175:./tmk_core/common/avr/suspend.c ****             break;
 347               		.loc 1 175 13 is_stmt 1 view .LVU77
 176:./tmk_core/common/avr/suspend.c ****         default:
 177:./tmk_core/common/avr/suspend.c ****             ;
 348               		.loc 1 177 13 view .LVU78
 349               	.L15:
 350               	/* epilogue start */
 178:./tmk_core/common/avr/suspend.c ****     }
 179:./tmk_core/common/avr/suspend.c **** }
 351               		.loc 1 179 1 is_stmt 0 view .LVU79
 352 003e BF91      		pop r27
 353 0040 AF91      		pop r26
 354 0042 9F91      		pop r25
 355 0044 8F91 1F90 		__gcc_isr 2
 355      1FBE 1F90 
 356 004c 1895      		reti
 357               		__gcc_isr 0,r24
 358               		.cfi_endproc
 359               	.LFE115:
 361               		.section	.bss.wdt_timeout,"aw",@nobits
 364               	wdt_timeout:
 365 0000 00        		.zero	1
 366               		.text
 367               	.Letext0:
 368               		.file 3 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 369               		.file 4 "./tmk_core/common/report.h"
 370               		.file 5 "./tmk_core/common/host_driver.h"
 371               		.file 6 "./tmk_core/common/timer.h"
 372               		.file 7 "./tmk_core/common/host.h"
 373               		.file 8 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 374               		.file 9 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
 375               		.file 10 "./lib/lufa/LUFA/Drivers/USB/Core/USBTask.h"
 376               		.file 11 "./lib/lufa/LUFA/Drivers/USB/Core/HostStandardReq.h"
 377               		.file 12 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdio.h"
 378               		.file 13 "./tmk_core/protocol/lufa/lufa.h"
 379               		.file 14 "./tmk_core/common/action.h"
 380               		.file 15 "./tmk_core/common/led.h"
 381               		.file 16 "./tmk_core/common/matrix.h"
 382               		.file 17 "./lib/lufa/LUFA/Drivers/USB/Core/AVR8/../Device.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 suspend.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:13     .text.suspend_idle:0000000000000000 suspend_idle
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:71     .text.suspend_power_down:0000000000000000 suspend_power_down
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:364    .bss.wdt_timeout:0000000000000000 wdt_timeout
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:185    .text.matrix_power_up:0000000000000000 matrix_power_up
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:185    .text.matrix_power_up:0000000000000000 matrix_power_up.localalias
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:204    .text.matrix_power_down:0000000000000000 matrix_power_down
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:219    .text.suspend_wakeup_condition:0000000000000000 suspend_wakeup_condition
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:287    .text.suspend_wakeup_init:0000000000000000 suspend_wakeup_init
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cc89Lba3.s:309    .text.__vector_12:0000000000000000 __vector_12
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001

UNDEFINED SYMBOLS
USB_DeviceState
led_set
matrix_scan
matrix_get_row
clear_keyboard
host_keyboard_leds
timer_count
__do_clear_bss
