   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.timer_init,"ax",@progbits
  11               	.global	timer_init
  13               	timer_init:
  14               	.LFB5:
  15               		.file 1 "./tmk_core/common/avr/timer.c"
   1:./tmk_core/common/avr/timer.c **** /*
   2:./tmk_core/common/avr/timer.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/avr/timer.c **** 
   4:./tmk_core/common/avr/timer.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/avr/timer.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/avr/timer.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/avr/timer.c **** (at your option) any later version.
   8:./tmk_core/common/avr/timer.c **** 
   9:./tmk_core/common/avr/timer.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/avr/timer.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/avr/timer.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/avr/timer.c **** GNU General Public License for more details.
  13:./tmk_core/common/avr/timer.c **** 
  14:./tmk_core/common/avr/timer.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/avr/timer.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/avr/timer.c **** */
  17:./tmk_core/common/avr/timer.c **** 
  18:./tmk_core/common/avr/timer.c **** #include <avr/io.h>
  19:./tmk_core/common/avr/timer.c **** #include <avr/interrupt.h>
  20:./tmk_core/common/avr/timer.c **** #include <util/atomic.h>
  21:./tmk_core/common/avr/timer.c **** #include <stdint.h>
  22:./tmk_core/common/avr/timer.c **** #include "timer_avr.h"
  23:./tmk_core/common/avr/timer.c **** #include "timer.h"
  24:./tmk_core/common/avr/timer.c **** 
  25:./tmk_core/common/avr/timer.c **** 
  26:./tmk_core/common/avr/timer.c **** // counter resolution 1ms
  27:./tmk_core/common/avr/timer.c **** // NOTE: union { uint32_t timer32; struct { uint16_t dummy; uint16_t timer16; }}
  28:./tmk_core/common/avr/timer.c **** volatile uint32_t timer_count;
  29:./tmk_core/common/avr/timer.c **** 
  30:./tmk_core/common/avr/timer.c **** /** \brief timer initialization
  31:./tmk_core/common/avr/timer.c ****  *
  32:./tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  33:./tmk_core/common/avr/timer.c ****  */
  34:./tmk_core/common/avr/timer.c **** void timer_init(void)
  35:./tmk_core/common/avr/timer.c **** {
  16               		.loc 1 35 1 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  36:./tmk_core/common/avr/timer.c **** #if TIMER_PRESCALER == 1
  37:./tmk_core/common/avr/timer.c ****     uint8_t prescaler = 0x01;
  38:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 8
  39:./tmk_core/common/avr/timer.c ****     uint8_t prescaler = 0x02;
  40:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 64
  41:./tmk_core/common/avr/timer.c ****     uint8_t prescaler = 0x03;
  22               		.loc 1 41 5 view .LVU1
  23               	.LVL0:
  42:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 256
  43:./tmk_core/common/avr/timer.c ****     uint8_t prescaler = 0x04;
  44:./tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 1024
  45:./tmk_core/common/avr/timer.c ****     uint8_t prescaler = 0x05;
  46:./tmk_core/common/avr/timer.c **** #else
  47:./tmk_core/common/avr/timer.c **** #   error "Timer prescaler value is NOT vaild."
  48:./tmk_core/common/avr/timer.c **** #endif
  49:./tmk_core/common/avr/timer.c **** 
  50:./tmk_core/common/avr/timer.c **** #ifndef __AVR_ATmega32A__
  51:./tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  52:./tmk_core/common/avr/timer.c ****     TCCR0A = 0x02;
  24               		.loc 1 52 5 view .LVU2
  25               		.loc 1 52 12 is_stmt 0 view .LVU3
  26 0000 82E0      		ldi r24,lo8(2)
  27 0002 84BD      		out 0x24,r24
  53:./tmk_core/common/avr/timer.c **** 
  54:./tmk_core/common/avr/timer.c ****     TCCR0B = prescaler;
  28               		.loc 1 54 5 is_stmt 1 view .LVU4
  29               		.loc 1 54 12 is_stmt 0 view .LVU5
  30 0004 93E0      		ldi r25,lo8(3)
  31 0006 95BD      		out 0x25,r25
  55:./tmk_core/common/avr/timer.c **** 
  56:./tmk_core/common/avr/timer.c ****     OCR0A = TIMER_RAW_TOP;
  32               		.loc 1 56 5 is_stmt 1 view .LVU6
  33               		.loc 1 56 11 is_stmt 0 view .LVU7
  34 0008 9AEF      		ldi r25,lo8(-6)
  35 000a 97BD      		out 0x27,r25
  57:./tmk_core/common/avr/timer.c ****     TIMSK0 = (1<<OCIE0A);
  36               		.loc 1 57 5 is_stmt 1 view .LVU8
  37               		.loc 1 57 12 is_stmt 0 view .LVU9
  38 000c 8093 6E00 		sts 110,r24
  39               	/* epilogue start */
  58:./tmk_core/common/avr/timer.c **** #else
  59:./tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  60:./tmk_core/common/avr/timer.c ****     TCCR0 = (1 << WGM01) | prescaler;
  61:./tmk_core/common/avr/timer.c **** 
  62:./tmk_core/common/avr/timer.c ****     OCR0 = TIMER_RAW_TOP;
  63:./tmk_core/common/avr/timer.c ****     TIMSK = (1 << OCIE0);
  64:./tmk_core/common/avr/timer.c **** #endif
  65:./tmk_core/common/avr/timer.c **** }
  40               		.loc 1 65 1 view .LVU10
  41 0010 0895      		ret
  42               		.cfi_endproc
  43               	.LFE5:
  45               		.section	.text.timer_clear,"ax",@progbits
  46               	.global	timer_clear
  48               	timer_clear:
  49               	.LFB6:
  66:./tmk_core/common/avr/timer.c **** 
  67:./tmk_core/common/avr/timer.c **** /** \brief timer clear
  68:./tmk_core/common/avr/timer.c ****  *
  69:./tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  70:./tmk_core/common/avr/timer.c ****  */
  71:./tmk_core/common/avr/timer.c **** inline
  72:./tmk_core/common/avr/timer.c **** void timer_clear(void)
  73:./tmk_core/common/avr/timer.c **** {
  50               		.loc 1 73 1 is_stmt 1 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
  74:./tmk_core/common/avr/timer.c ****   ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
  56               		.loc 1 74 3 view .LVU12
  57               	.LBB27:
  58               		.loc 1 74 3 view .LVU13
  59 0000 8FB7      		in r24,__SREG__
  60               	.LVL1:
  61               	.LBB28:
  62               	.LBI28:
  63               		.file 2 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h"
   1:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
   4:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
   7:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  10:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****      distribution.
  14:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  15:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  19:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** */
  31:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  32:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  34:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  37:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  40:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
  44:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     sei();
  45:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     return 1;
  46:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
  47:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  64               		.loc 2 48 27 view .LVU14
  65               	.LBB29:
  49:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     cli();
  66               		.loc 2 50 5 view .LVU15
  67               	/* #APP */
  68               	 ;  50 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h" 1
  69 0002 F894      		cli
  70               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     return 1;
  71               		.loc 2 51 5 view .LVU16
  72               	.LVL2:
  73               		.loc 2 51 5 is_stmt 0 view .LVU17
  74               	/* #NOAPP */
  75               	.LBE29:
  76               	.LBE28:
  77               		.loc 1 74 3 is_stmt 1 view .LVU18
  75:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  78               		.loc 1 75 5 view .LVU19
  79               		.loc 1 75 17 is_stmt 0 view .LVU20
  80 0004 1092 0000 		sts timer_count,__zero_reg__
  81 0008 1092 0000 		sts timer_count+1,__zero_reg__
  82 000c 1092 0000 		sts timer_count+2,__zero_reg__
  83 0010 1092 0000 		sts timer_count+3,__zero_reg__
  74:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  84               		.loc 1 74 3 is_stmt 1 view .LVU21
  85               	.LVL3:
  74:./tmk_core/common/avr/timer.c ****     timer_count = 0;
  86               		.loc 1 74 3 view .LVU22
  87               	.LBB30:
  88               	.LBI30:
  52:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
  53:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  54:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
  56:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     sei();
  57:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  58:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     (void)__s;
  59:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
  60:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  61:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** static __inline__ void __iCliParam(const uint8_t *__s)
  62:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
  63:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     cli();
  64:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  65:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     (void)__s;
  66:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
  67:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** 
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** static __inline__ void __iRestore(const  uint8_t *__s)
  89               		.loc 2 68 24 view .LVU23
  90               	.LBB31:
  69:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     SREG = *__s;
  91               		.loc 2 70 5 view .LVU24
  92               		.loc 2 70 10 is_stmt 0 view .LVU25
  93 0014 8FBF      		out __SREG__,r24
  71:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  94               		.loc 2 71 5 is_stmt 1 view .LVU26
  95               	.LVL4:
  96               	/* epilogue start */
  97               		.loc 2 71 5 is_stmt 0 view .LVU27
  98               	.LBE31:
  99               	.LBE30:
 100               	.LBE27:
  76:./tmk_core/common/avr/timer.c ****   }
  77:./tmk_core/common/avr/timer.c **** }
 101               		.loc 1 77 1 view .LVU28
 102 0016 0895      		ret
 103               		.cfi_endproc
 104               	.LFE6:
 106               		.section	.text.timer_read,"ax",@progbits
 107               	.global	timer_read
 109               	timer_read:
 110               	.LFB7:
  78:./tmk_core/common/avr/timer.c **** 
  79:./tmk_core/common/avr/timer.c **** /** \brief timer read
  80:./tmk_core/common/avr/timer.c ****  *
  81:./tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  82:./tmk_core/common/avr/timer.c ****  */
  83:./tmk_core/common/avr/timer.c **** inline
  84:./tmk_core/common/avr/timer.c **** uint16_t timer_read(void)
  85:./tmk_core/common/avr/timer.c **** {
 111               		.loc 1 85 1 is_stmt 1 view -0
 112               		.cfi_startproc
 113               	/* prologue: function */
 114               	/* frame size = 0 */
 115               	/* stack size = 0 */
 116               	.L__stack_usage = 0
  86:./tmk_core/common/avr/timer.c ****     uint32_t t;
 117               		.loc 1 86 5 view .LVU30
  87:./tmk_core/common/avr/timer.c **** 
  88:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 118               		.loc 1 88 5 view .LVU31
 119               	.LBB32:
 120               		.loc 1 88 5 view .LVU32
 121 0000 2FB7      		in r18,__SREG__
 122               	.LVL5:
 123               	.LBB33:
 124               	.LBI33:
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 125               		.loc 2 48 27 view .LVU33
 126               	.LBB34:
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     return 1;
 127               		.loc 2 50 5 view .LVU34
 128               	/* #APP */
 129               	 ;  50 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h" 1
 130 0002 F894      		cli
 131               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 132               		.loc 2 51 5 view .LVU35
 133               	.LVL6:
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 134               		.loc 2 51 5 is_stmt 0 view .LVU36
 135               	/* #NOAPP */
 136               	.LBE34:
 137               	.LBE33:
 138               		.loc 1 88 5 is_stmt 1 view .LVU37
  89:./tmk_core/common/avr/timer.c ****       t = timer_count;
 139               		.loc 1 89 7 view .LVU38
 140               		.loc 1 89 9 is_stmt 0 view .LVU39
 141 0004 8091 0000 		lds r24,timer_count
 142 0008 9091 0000 		lds r25,timer_count+1
 143 000c A091 0000 		lds r26,timer_count+2
 144 0010 B091 0000 		lds r27,timer_count+3
  88:./tmk_core/common/avr/timer.c ****       t = timer_count;
 145               		.loc 1 88 5 is_stmt 1 view .LVU40
 146               	.LVL7:
  88:./tmk_core/common/avr/timer.c ****       t = timer_count;
 147               		.loc 1 88 5 view .LVU41
 148               	.LBB35:
 149               	.LBI35:
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 150               		.loc 2 68 24 view .LVU42
 151               	.LBB36:
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 152               		.loc 2 70 5 view .LVU43
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 153               		.loc 2 70 10 is_stmt 0 view .LVU44
 154 0014 2FBF      		out __SREG__,r18
 155               		.loc 2 71 5 is_stmt 1 view .LVU45
 156               	.LVL8:
 157               		.loc 2 71 5 is_stmt 0 view .LVU46
 158               	.LBE36:
 159               	.LBE35:
 160               	.LBE32:
  90:./tmk_core/common/avr/timer.c ****     }
  91:./tmk_core/common/avr/timer.c **** 
  92:./tmk_core/common/avr/timer.c ****     return (t & 0xFFFF);
 161               		.loc 1 92 5 is_stmt 1 view .LVU47
 162               	/* epilogue start */
  93:./tmk_core/common/avr/timer.c **** }
 163               		.loc 1 93 1 is_stmt 0 view .LVU48
 164 0016 0895      		ret
 165               		.cfi_endproc
 166               	.LFE7:
 168               		.section	.text.timer_read32,"ax",@progbits
 169               	.global	timer_read32
 171               	timer_read32:
 172               	.LFB8:
  94:./tmk_core/common/avr/timer.c **** 
  95:./tmk_core/common/avr/timer.c **** /** \brief timer read32
  96:./tmk_core/common/avr/timer.c ****  *
  97:./tmk_core/common/avr/timer.c ****  * FIXME: needs doc
  98:./tmk_core/common/avr/timer.c ****  */
  99:./tmk_core/common/avr/timer.c **** inline
 100:./tmk_core/common/avr/timer.c **** uint32_t timer_read32(void)
 101:./tmk_core/common/avr/timer.c **** {
 173               		.loc 1 101 1 is_stmt 1 view -0
 174               		.cfi_startproc
 175 0000 CF93      		push r28
 176               	.LCFI0:
 177               		.cfi_def_cfa_offset 3
 178               		.cfi_offset 28, -2
 179 0002 DF93      		push r29
 180               	.LCFI1:
 181               		.cfi_def_cfa_offset 4
 182               		.cfi_offset 29, -3
 183 0004 00D0      		rcall .
 184 0006 00D0      		rcall .
 185               	.LCFI2:
 186               		.cfi_def_cfa_offset 8
 187 0008 CDB7      		in r28,__SP_L__
 188 000a DEB7      		in r29,__SP_H__
 189               	.LCFI3:
 190               		.cfi_def_cfa_register 28
 191               	/* prologue: function */
 192               	/* frame size = 4 */
 193               	/* stack size = 6 */
 194               	.L__stack_usage = 6
 102:./tmk_core/common/avr/timer.c ****     uint32_t t;
 195               		.loc 1 102 5 view .LVU50
 103:./tmk_core/common/avr/timer.c **** 
 104:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 196               		.loc 1 104 5 view .LVU51
 197               	.LBB37:
 198               		.loc 1 104 5 view .LVU52
 199 000c 8FB7      		in r24,__SREG__
 200               	.LVL9:
 201               	.LBB38:
 202               	.LBI38:
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 203               		.loc 2 48 27 view .LVU53
 204               	.LBB39:
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     return 1;
 205               		.loc 2 50 5 view .LVU54
 206               	/* #APP */
 207               	 ;  50 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h" 1
 208 000e F894      		cli
 209               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 210               		.loc 2 51 5 view .LVU55
 211               	.LVL10:
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 212               		.loc 2 51 5 is_stmt 0 view .LVU56
 213               	/* #NOAPP */
 214               	.LBE39:
 215               	.LBE38:
 216               		.loc 1 104 5 is_stmt 1 view .LVU57
 105:./tmk_core/common/avr/timer.c ****       t = timer_count;
 217               		.loc 1 105 7 view .LVU58
 218               		.loc 1 105 9 is_stmt 0 view .LVU59
 219 0010 2091 0000 		lds r18,timer_count
 220 0014 3091 0000 		lds r19,timer_count+1
 221 0018 4091 0000 		lds r20,timer_count+2
 222 001c 5091 0000 		lds r21,timer_count+3
 223 0020 2983      		std Y+1,r18
 224 0022 3A83      		std Y+2,r19
 225 0024 4B83      		std Y+3,r20
 226 0026 5C83      		std Y+4,r21
 227               	.LVL11:
 104:./tmk_core/common/avr/timer.c ****       t = timer_count;
 228               		.loc 1 104 5 is_stmt 1 view .LVU60
 104:./tmk_core/common/avr/timer.c ****       t = timer_count;
 229               		.loc 1 104 5 view .LVU61
 230               	.LBB40:
 231               	.LBI40:
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 232               		.loc 2 68 24 view .LVU62
 233               	.LBB41:
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 234               		.loc 2 70 5 view .LVU63
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 235               		.loc 2 70 10 is_stmt 0 view .LVU64
 236 0028 8FBF      		out __SREG__,r24
 237               		.loc 2 71 5 is_stmt 1 view .LVU65
 238               	.LVL12:
 239               		.loc 2 71 5 is_stmt 0 view .LVU66
 240               	.LBE41:
 241               	.LBE40:
 242               	.LBE37:
 106:./tmk_core/common/avr/timer.c ****     }
 107:./tmk_core/common/avr/timer.c **** 
 108:./tmk_core/common/avr/timer.c ****     return t;
 243               		.loc 1 108 5 is_stmt 1 view .LVU67
 109:./tmk_core/common/avr/timer.c **** }
 244               		.loc 1 109 1 is_stmt 0 view .LVU68
 245 002a 6981      		ldd r22,Y+1
 246 002c 7A81      		ldd r23,Y+2
 247 002e 8B81      		ldd r24,Y+3
 248 0030 9C81      		ldd r25,Y+4
 249               	/* epilogue start */
 250 0032 0F90      		pop __tmp_reg__
 251 0034 0F90      		pop __tmp_reg__
 252 0036 0F90      		pop __tmp_reg__
 253 0038 0F90      		pop __tmp_reg__
 254 003a DF91      		pop r29
 255 003c CF91      		pop r28
 256 003e 0895      		ret
 257               		.cfi_endproc
 258               	.LFE8:
 260               		.section	.text.timer_elapsed,"ax",@progbits
 261               	.global	timer_elapsed
 263               	timer_elapsed:
 264               	.LVL13:
 265               	.LFB9:
 110:./tmk_core/common/avr/timer.c **** 
 111:./tmk_core/common/avr/timer.c **** /** \brief timer elapsed
 112:./tmk_core/common/avr/timer.c ****  *
 113:./tmk_core/common/avr/timer.c ****  * FIXME: needs doc
 114:./tmk_core/common/avr/timer.c ****  */
 115:./tmk_core/common/avr/timer.c **** inline
 116:./tmk_core/common/avr/timer.c **** uint16_t timer_elapsed(uint16_t last)
 117:./tmk_core/common/avr/timer.c **** {
 266               		.loc 1 117 1 is_stmt 1 view -0
 267               		.cfi_startproc
 268               		.loc 1 117 1 is_stmt 0 view .LVU70
 269 0000 CF92      		push r12
 270               	.LCFI4:
 271               		.cfi_def_cfa_offset 3
 272               		.cfi_offset 12, -2
 273 0002 DF92      		push r13
 274               	.LCFI5:
 275               		.cfi_def_cfa_offset 4
 276               		.cfi_offset 13, -3
 277 0004 EF92      		push r14
 278               	.LCFI6:
 279               		.cfi_def_cfa_offset 5
 280               		.cfi_offset 14, -4
 281 0006 FF92      		push r15
 282               	.LCFI7:
 283               		.cfi_def_cfa_offset 6
 284               		.cfi_offset 15, -5
 285               	/* prologue: function */
 286               	/* frame size = 0 */
 287               	/* stack size = 4 */
 288               	.L__stack_usage = 4
 289 0008 9C01      		movw r18,r24
 118:./tmk_core/common/avr/timer.c ****     uint32_t t;
 290               		.loc 1 118 5 is_stmt 1 view .LVU71
 119:./tmk_core/common/avr/timer.c **** 
 120:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 291               		.loc 1 120 5 view .LVU72
 292               	.LBB42:
 293               		.loc 1 120 5 view .LVU73
 294 000a 4FB7      		in r20,__SREG__
 295               	.LVL14:
 296               	.LBB43:
 297               	.LBI43:
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 298               		.loc 2 48 27 view .LVU74
 299               	.LBB44:
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     return 1;
 300               		.loc 2 50 5 view .LVU75
 301               	/* #APP */
 302               	 ;  50 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h" 1
 303 000c F894      		cli
 304               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 305               		.loc 2 51 5 view .LVU76
 306               	.LVL15:
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 307               		.loc 2 51 5 is_stmt 0 view .LVU77
 308               	/* #NOAPP */
 309               	.LBE44:
 310               	.LBE43:
 311               		.loc 1 120 5 is_stmt 1 view .LVU78
 121:./tmk_core/common/avr/timer.c ****       t = timer_count;
 312               		.loc 1 121 7 view .LVU79
 313               		.loc 1 121 9 is_stmt 0 view .LVU80
 314 000e 8091 0000 		lds r24,timer_count
 315 0012 9091 0000 		lds r25,timer_count+1
 316 0016 A091 0000 		lds r26,timer_count+2
 317 001a B091 0000 		lds r27,timer_count+3
 318               	.LVL16:
 120:./tmk_core/common/avr/timer.c ****       t = timer_count;
 319               		.loc 1 120 5 is_stmt 1 view .LVU81
 120:./tmk_core/common/avr/timer.c ****       t = timer_count;
 320               		.loc 1 120 5 view .LVU82
 321               	.LBB45:
 322               	.LBI45:
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 323               		.loc 2 68 24 view .LVU83
 324               	.LBB46:
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 325               		.loc 2 70 5 view .LVU84
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 326               		.loc 2 70 10 is_stmt 0 view .LVU85
 327 001e 4FBF      		out __SREG__,r20
 328               		.loc 2 71 5 is_stmt 1 view .LVU86
 329               	.LVL17:
 330               		.loc 2 71 5 is_stmt 0 view .LVU87
 331               	.LBE46:
 332               	.LBE45:
 333               	.LBE42:
 122:./tmk_core/common/avr/timer.c ****     }
 123:./tmk_core/common/avr/timer.c **** 
 124:./tmk_core/common/avr/timer.c ****     return TIMER_DIFF_16((t & 0xFFFF), last);
 334               		.loc 1 124 5 is_stmt 1 view .LVU88
 335               		.loc 1 124 12 is_stmt 0 view .LVU89
 336 0020 6C01      		movw r12,r24
 337 0022 7D01      		movw r14,r26
 338 0024 EE24      		clr r14
 339 0026 FF24      		clr r15
 340 0028 A901      		movw r20,r18
 341 002a 70E0      		ldi r23,0
 342 002c 60E0      		ldi r22,0
 343 002e C416      		cp r12,r20
 344 0030 D506      		cpc r13,r21
 345 0032 E606      		cpc r14,r22
 346 0034 F706      		cpc r15,r23
 347 0036 00F0      		brlo .L6
 348               	.LVL18:
 349               	.L8:
 350               		.loc 1 124 12 discriminator 2 view .LVU90
 351 0038 821B      		sub r24,r18
 352 003a 930B      		sbc r25,r19
 353               	/* epilogue start */
 125:./tmk_core/common/avr/timer.c **** }
 354               		.loc 1 125 1 discriminator 2 view .LVU91
 355 003c FF90      		pop r15
 356 003e EF90      		pop r14
 357 0040 DF90      		pop r13
 358 0042 CF90      		pop r12
 359 0044 0895      		ret
 360               	.LVL19:
 361               	.L6:
 124:./tmk_core/common/avr/timer.c **** }
 362               		.loc 1 124 12 discriminator 2 view .LVU92
 363 0046 0197      		sbiw r24,1
 364               	.LVL20:
 124:./tmk_core/common/avr/timer.c **** }
 365               		.loc 1 124 12 discriminator 2 view .LVU93
 366 0048 00C0      		rjmp .L8
 367               		.cfi_endproc
 368               	.LFE9:
 370               		.section	.text.timer_elapsed32,"ax",@progbits
 371               	.global	timer_elapsed32
 373               	timer_elapsed32:
 374               	.LVL21:
 375               	.LFB10:
 126:./tmk_core/common/avr/timer.c **** 
 127:./tmk_core/common/avr/timer.c **** /** \brief timer elapsed32
 128:./tmk_core/common/avr/timer.c ****  *
 129:./tmk_core/common/avr/timer.c ****  * FIXME: needs doc
 130:./tmk_core/common/avr/timer.c ****  */
 131:./tmk_core/common/avr/timer.c **** inline
 132:./tmk_core/common/avr/timer.c **** uint32_t timer_elapsed32(uint32_t last)
 133:./tmk_core/common/avr/timer.c **** {
 376               		.loc 1 133 1 is_stmt 1 view -0
 377               		.cfi_startproc
 378               		.loc 1 133 1 is_stmt 0 view .LVU95
 379 0000 0F93      		push r16
 380               	.LCFI8:
 381               		.cfi_def_cfa_offset 3
 382               		.cfi_offset 16, -2
 383 0002 1F93      		push r17
 384               	.LCFI9:
 385               		.cfi_def_cfa_offset 4
 386               		.cfi_offset 17, -3
 387 0004 CF93      		push r28
 388               	.LCFI10:
 389               		.cfi_def_cfa_offset 5
 390               		.cfi_offset 28, -4
 391 0006 DF93      		push r29
 392               	.LCFI11:
 393               		.cfi_def_cfa_offset 6
 394               		.cfi_offset 29, -5
 395 0008 00D0      		rcall .
 396 000a 00D0      		rcall .
 397               	.LCFI12:
 398               		.cfi_def_cfa_offset 10
 399 000c CDB7      		in r28,__SP_L__
 400 000e DEB7      		in r29,__SP_H__
 401               	.LCFI13:
 402               		.cfi_def_cfa_register 28
 403               	/* prologue: function */
 404               	/* frame size = 4 */
 405               	/* stack size = 8 */
 406               	.L__stack_usage = 8
 407 0010 462F      		mov r20,r22
 408 0012 572F      		mov r21,r23
 409 0014 BC01      		movw r22,r24
 410               	.LVL22:
 134:./tmk_core/common/avr/timer.c ****     uint32_t t;
 411               		.loc 1 134 5 is_stmt 1 view .LVU96
 135:./tmk_core/common/avr/timer.c **** 
 136:./tmk_core/common/avr/timer.c ****     ATOMIC_BLOCK(ATOMIC_RESTORESTATE) {
 412               		.loc 1 136 5 view .LVU97
 413               	.LBB47:
 414               		.loc 1 136 5 view .LVU98
 415 0016 2FB7      		in r18,__SREG__
 416               	.LVL23:
 417               	.LBB48:
 418               	.LBI48:
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 419               		.loc 2 48 27 view .LVU99
 420               	.LBB49:
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     return 1;
 421               		.loc 2 50 5 view .LVU100
 422               	/* #APP */
 423               	 ;  50 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h" 1
 424 0018 F894      		cli
 425               	 ;  0 "" 2
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 426               		.loc 2 51 5 view .LVU101
 427               	.LVL24:
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** }
 428               		.loc 2 51 5 is_stmt 0 view .LVU102
 429               	/* #NOAPP */
 430               	.LBE49:
 431               	.LBE48:
 432               		.loc 1 136 5 is_stmt 1 view .LVU103
 137:./tmk_core/common/avr/timer.c ****       t = timer_count;
 433               		.loc 1 137 7 view .LVU104
 434               		.loc 1 137 9 is_stmt 0 view .LVU105
 435 001a 8091 0000 		lds r24,timer_count
 436 001e 9091 0000 		lds r25,timer_count+1
 437 0022 A091 0000 		lds r26,timer_count+2
 438 0026 B091 0000 		lds r27,timer_count+3
 439               	.LVL25:
 136:./tmk_core/common/avr/timer.c ****       t = timer_count;
 440               		.loc 1 136 5 is_stmt 1 view .LVU106
 136:./tmk_core/common/avr/timer.c ****       t = timer_count;
 441               		.loc 1 136 5 view .LVU107
 442               	.LBB50:
 443               	.LBI50:
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h **** {
 444               		.loc 2 68 24 view .LVU108
 445               	.LBB51:
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 446               		.loc 2 70 5 view .LVU109
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
 447               		.loc 2 70 10 is_stmt 0 view .LVU110
 448 002a 2FBF      		out __SREG__,r18
 449               		.loc 2 71 5 is_stmt 1 view .LVU111
 450               	.LVL26:
 451               		.loc 2 71 5 is_stmt 0 view .LVU112
 452               	.LBE51:
 453               	.LBE50:
 454               	.LBE47:
 138:./tmk_core/common/avr/timer.c ****     }
 139:./tmk_core/common/avr/timer.c **** 
 140:./tmk_core/common/avr/timer.c ****     return TIMER_DIFF_32(t, last);
 455               		.loc 1 140 5 is_stmt 1 view .LVU113
 456               		.loc 1 140 12 is_stmt 0 view .LVU114
 457 002c 8417      		cp r24,r20
 458 002e 9507      		cpc r25,r21
 459 0030 A607      		cpc r26,r22
 460 0032 B707      		cpc r27,r23
 461 0034 00F0      		brlo .L10
 462               	.LVL27:
 463               	.L12:
 464               		.loc 1 140 12 discriminator 2 view .LVU115
 465 0036 8C01      		movw r16,r24
 466 0038 9D01      		movw r18,r26
 467 003a 041B      		sub r16,r20
 468 003c 150B      		sbc r17,r21
 469 003e 260B      		sbc r18,r22
 470 0040 370B      		sbc r19,r23
 471 0042 0983      		std Y+1,r16
 472 0044 1A83      		std Y+2,r17
 473 0046 2B83      		std Y+3,r18
 474 0048 3C83      		std Y+4,r19
 141:./tmk_core/common/avr/timer.c **** }
 475               		.loc 1 141 1 discriminator 2 view .LVU116
 476 004a 6981      		ldd r22,Y+1
 477 004c 7A81      		ldd r23,Y+2
 478 004e 8B81      		ldd r24,Y+3
 479 0050 9C81      		ldd r25,Y+4
 480               	/* epilogue start */
 481 0052 0F90      		pop __tmp_reg__
 482 0054 0F90      		pop __tmp_reg__
 483 0056 0F90      		pop __tmp_reg__
 484 0058 0F90      		pop __tmp_reg__
 485 005a DF91      		pop r29
 486 005c CF91      		pop r28
 487 005e 1F91      		pop r17
 488 0060 0F91      		pop r16
 489 0062 0895      		ret
 490               	.LVL28:
 491               	.L10:
 140:./tmk_core/common/avr/timer.c **** }
 492               		.loc 1 140 12 discriminator 2 view .LVU117
 493 0064 0197      		sbiw r24,1
 494 0066 A109      		sbc r26,__zero_reg__
 495 0068 B109      		sbc r27,__zero_reg__
 496               	.LVL29:
 140:./tmk_core/common/avr/timer.c **** }
 497               		.loc 1 140 12 discriminator 2 view .LVU118
 498 006a 00C0      		rjmp .L12
 499               		.cfi_endproc
 500               	.LFE10:
 502               		.section	.text.__vector_21,"ax",@progbits
 503               	.global	__vector_21
 505               	__vector_21:
 506               	.LFB11:
 142:./tmk_core/common/avr/timer.c **** 
 143:./tmk_core/common/avr/timer.c **** // excecuted once per 1ms.(excess for just timer count?)
 144:./tmk_core/common/avr/timer.c **** #ifndef __AVR_ATmega32A__
 145:./tmk_core/common/avr/timer.c **** #define TIMER_INTERRUPT_VECTOR TIMER0_COMPA_vect
 146:./tmk_core/common/avr/timer.c **** #else
 147:./tmk_core/common/avr/timer.c **** #define TIMER_INTERRUPT_VECTOR TIMER0_COMP_vect
 148:./tmk_core/common/avr/timer.c **** #endif
 149:./tmk_core/common/avr/timer.c **** ISR(TIMER_INTERRUPT_VECTOR, ISR_NOBLOCK)
 150:./tmk_core/common/avr/timer.c **** {
 507               		.loc 1 150 1 is_stmt 1 view -0
 508               		.cfi_startproc
 509 0000 7894      		sei
 510 0002 1F92 1FB6 		__gcc_isr 1
 510      1F92 1124 
 510      8F93 
 511 000c 9F93      		push r25
 512               	.LCFI14:
 513               		.cfi_def_cfa_offset 3
 514               		.cfi_offset 25, -2
 515 000e AF93      		push r26
 516               	.LCFI15:
 517               		.cfi_def_cfa_offset 4
 518               		.cfi_offset 26, -3
 519 0010 BF93      		push r27
 520               	.LCFI16:
 521               		.cfi_def_cfa_offset 5
 522               		.cfi_offset 27, -4
 523               	/* prologue: Interrupt */
 524               	/* frame size = 0 */
 525               	/* stack size = 3...7 */
 526               	.L__stack_usage = 3 + __gcc_isr.n_pushed
 151:./tmk_core/common/avr/timer.c ****     timer_count++;
 527               		.loc 1 151 5 view .LVU120
 528               		.loc 1 151 16 is_stmt 0 view .LVU121
 529 0012 8091 0000 		lds r24,timer_count
 530 0016 9091 0000 		lds r25,timer_count+1
 531 001a A091 0000 		lds r26,timer_count+2
 532 001e B091 0000 		lds r27,timer_count+3
 533 0022 0196      		adiw r24,1
 534 0024 A11D      		adc r26,__zero_reg__
 535 0026 B11D      		adc r27,__zero_reg__
 536 0028 8093 0000 		sts timer_count,r24
 537 002c 9093 0000 		sts timer_count+1,r25
 538 0030 A093 0000 		sts timer_count+2,r26
 539 0034 B093 0000 		sts timer_count+3,r27
 540               	/* epilogue start */
 152:./tmk_core/common/avr/timer.c **** }
 541               		.loc 1 152 1 view .LVU122
 542 0038 BF91      		pop r27
 543 003a AF91      		pop r26
 544 003c 9F91      		pop r25
 545 003e 8F91 1F90 		__gcc_isr 2
 545      1FBE 1F90 
 546 0046 1895      		reti
 547               		__gcc_isr 0,r24
 548               		.cfi_endproc
 549               	.LFE11:
 551               		.comm	timer_count,4,1
 552               		.text
 553               	.Letext0:
 554               		.file 3 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 555               		.file 4 "./tmk_core/common/timer.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:13     .text.timer_init:0000000000000000 timer_init
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:48     .text.timer_clear:0000000000000000 timer_clear
                            *COM*:0000000000000004 timer_count
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:109    .text.timer_read:0000000000000000 timer_read
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:171    .text.timer_read32:0000000000000000 timer_read32
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:263    .text.timer_elapsed:0000000000000000 timer_elapsed
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:373    .text.timer_elapsed32:0000000000000000 timer_elapsed32
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccfnzzHP.s:505    .text.__vector_21:0000000000000000 __vector_21
                            *ABS*:0000000000000003 __gcc_isr.n_pushed.001

UNDEFINED SYMBOLS
__do_clear_bss
