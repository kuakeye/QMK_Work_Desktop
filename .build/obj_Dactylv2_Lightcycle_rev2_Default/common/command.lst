   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB40:
  14               		.file 1 "./tmk_core/common/command.c"
   1:./tmk_core/common/command.c **** /*
   2:./tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/command.c **** 
   4:./tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/command.c **** (at your option) any later version.
   8:./tmk_core/common/command.c **** 
   9:./tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/command.c **** GNU General Public License for more details.
  13:./tmk_core/common/command.c **** 
  14:./tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/command.c **** */
  17:./tmk_core/common/command.c **** #include <stdint.h>
  18:./tmk_core/common/command.c **** #include <stdbool.h>
  19:./tmk_core/common/command.c **** #include "wait.h"
  20:./tmk_core/common/command.c **** #include "keycode.h"
  21:./tmk_core/common/command.c **** #include "host.h"
  22:./tmk_core/common/command.c **** #include "keymap.h"
  23:./tmk_core/common/command.c **** #include "print.h"
  24:./tmk_core/common/command.c **** #include "debug.h"
  25:./tmk_core/common/command.c **** #include "util.h"
  26:./tmk_core/common/command.c **** #include "timer.h"
  27:./tmk_core/common/command.c **** #include "keyboard.h"
  28:./tmk_core/common/command.c **** #include "bootloader.h"
  29:./tmk_core/common/command.c **** #include "action_layer.h"
  30:./tmk_core/common/command.c **** #include "action_util.h"
  31:./tmk_core/common/command.c **** #include "eeconfig.h"
  32:./tmk_core/common/command.c **** #include "sleep_led.h"
  33:./tmk_core/common/command.c **** #include "led.h"
  34:./tmk_core/common/command.c **** #include "command.h"
  35:./tmk_core/common/command.c **** #include "backlight.h"
  36:./tmk_core/common/command.c **** #include "quantum.h"
  37:./tmk_core/common/command.c **** #include "version.h"
  38:./tmk_core/common/command.c **** 
  39:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  40:./tmk_core/common/command.c **** #include "mousekey.h"
  41:./tmk_core/common/command.c **** #endif
  42:./tmk_core/common/command.c **** 
  43:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  44:./tmk_core/common/command.c **** 	#include "usb_keyboard.h"
  45:./tmk_core/common/command.c **** 		#ifdef EXTRAKEY_ENABLE
  46:./tmk_core/common/command.c **** 		#include "usb_extra.h"
  47:./tmk_core/common/command.c **** 	#endif
  48:./tmk_core/common/command.c **** #endif
  49:./tmk_core/common/command.c **** 
  50:./tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  51:./tmk_core/common/command.c **** 	#include "usbdrv.h"
  52:./tmk_core/common/command.c **** #endif
  53:./tmk_core/common/command.c **** 
  54:./tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
  55:./tmk_core/common/command.c ****     #include "audio.h"
  56:./tmk_core/common/command.c **** #endif /* AUDIO_ENABLE */
  57:./tmk_core/common/command.c **** 
  58:./tmk_core/common/command.c **** 
  59:./tmk_core/common/command.c **** static bool command_common(uint8_t code);
  60:./tmk_core/common/command.c **** static void command_common_help(void);
  61:./tmk_core/common/command.c **** static void print_version(void);
  62:./tmk_core/common/command.c **** static void print_status(void);
  63:./tmk_core/common/command.c **** static bool command_console(uint8_t code);
  64:./tmk_core/common/command.c **** static void command_console_help(void);
  65:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  66:./tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  67:./tmk_core/common/command.c **** static void mousekey_console_help(void);
  68:./tmk_core/common/command.c **** #endif
  69:./tmk_core/common/command.c **** 
  70:./tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  71:./tmk_core/common/command.c **** 
  72:./tmk_core/common/command.c **** 
  73:./tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  74:./tmk_core/common/command.c **** 
  75:./tmk_core/common/command.c **** 
  76:./tmk_core/common/command.c **** bool command_proc(uint8_t code)
  77:./tmk_core/common/command.c **** {
  78:./tmk_core/common/command.c ****     switch (command_state) {
  79:./tmk_core/common/command.c ****         case ONESHOT:
  80:./tmk_core/common/command.c ****             if (!IS_COMMAND())
  81:./tmk_core/common/command.c ****                 return false;
  82:./tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  83:./tmk_core/common/command.c ****             break;
  84:./tmk_core/common/command.c ****         case CONSOLE:
  85:./tmk_core/common/command.c ****             if (IS_COMMAND())
  86:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  87:./tmk_core/common/command.c ****             else
  88:./tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  89:./tmk_core/common/command.c ****             break;
  90:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  91:./tmk_core/common/command.c ****         case MOUSEKEY:
  92:./tmk_core/common/command.c ****             mousekey_console(code);
  93:./tmk_core/common/command.c ****             break;
  94:./tmk_core/common/command.c **** #endif
  95:./tmk_core/common/command.c ****         default:
  96:./tmk_core/common/command.c ****             command_state = ONESHOT;
  97:./tmk_core/common/command.c ****             return false;
  98:./tmk_core/common/command.c ****     }
  99:./tmk_core/common/command.c ****     return true;
 100:./tmk_core/common/command.c **** }
 101:./tmk_core/common/command.c **** 
 102:./tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
 103:./tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
 104:./tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
 105:./tmk_core/common/command.c **** bool command_extra(uint8_t code)
 106:./tmk_core/common/command.c **** {
 107:./tmk_core/common/command.c ****     (void)code;
 108:./tmk_core/common/command.c ****     return false;
 109:./tmk_core/common/command.c **** }
 110:./tmk_core/common/command.c **** 
 111:./tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 112:./tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 113:./tmk_core/common/command.c **** {
 114:./tmk_core/common/command.c ****     (void)code;
 115:./tmk_core/common/command.c ****     return false;
 116:./tmk_core/common/command.c **** }
 117:./tmk_core/common/command.c **** 
 118:./tmk_core/common/command.c **** 
 119:./tmk_core/common/command.c **** /***********************************************************
 120:./tmk_core/common/command.c ****  * Command common
 121:./tmk_core/common/command.c ****  ***********************************************************/
 122:./tmk_core/common/command.c **** static void command_common_help(void)
 123:./tmk_core/common/command.c **** {
 124:./tmk_core/common/command.c **** 	print(                            "\n\t- Magic -\n"
 125:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 126:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG_MATRIX) ":	Matrix Debug Mode Toggle - Show keypresses in matrix grid\n"
 127:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG_KBD   ) ":	Keyboard Debug Toggle - Show keypress report\n"
 128:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG_MOUSE ) ":	Debug Mouse Toggle\n"
 129:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_VERSION     ) ":	Version\n"
 130:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_STATUS      ) ":	Status\n"
 131:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_CONSOLE     ) ":	Activate Console Mode\n"
 132:./tmk_core/common/command.c **** 
 133:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 134:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER0      ) ":	Switch to Layer 0\n"
 135:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER1      ) ":	Switch to Layer 1\n"
 136:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER2      ) ":	Switch to Layer 2\n"
 137:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER3      ) ":	Switch to Layer 3\n"
 138:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER4      ) ":	Switch to Layer 4\n"
 139:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER5      ) ":	Switch to Layer 5\n"
 140:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER6      ) ":	Switch to Layer 6\n"
 141:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER7      ) ":	Switch to Layer 7\n"
 142:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER8      ) ":	Switch to Layer 8\n"
 143:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER9      ) ":	Switch to Layer 9\n"
 144:./tmk_core/common/command.c **** #endif
 145:./tmk_core/common/command.c **** 
 146:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 147:./tmk_core/common/command.c **** 		                            "F1-F10:	Switch to Layer 0-9 (F10 = L0)\n"
 148:./tmk_core/common/command.c **** #endif
 149:./tmk_core/common/command.c **** 
 150:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 151:./tmk_core/common/command.c **** 		                            "0-9:	Switch to Layer 0-9\n"
 152:./tmk_core/common/command.c **** #endif
 153:./tmk_core/common/command.c **** 
 154:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER0_ALT1 ) ":	Switch to Layer 0 (alternate key 1)\n"
 155:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER0_ALT2 ) ":	Switch to Layer 0 (alternate key 2)\n"
 156:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_BOOTLOADER  ) ":	Jump to Bootloader (Reset)\n"
 157:./tmk_core/common/command.c **** 
 158:./tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 159:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LOCK        ) ":	Lock\n"
 160:./tmk_core/common/command.c **** #endif
 161:./tmk_core/common/command.c **** 
 162:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 163:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_EEPROM      ) ":	Print EEPROM Settings\n"
 164:./tmk_core/common/command.c **** #endif
 165:./tmk_core/common/command.c **** 
 166:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 167:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_NKRO        ) ":	NKRO Toggle\n"
 168:./tmk_core/common/command.c **** #endif
 169:./tmk_core/common/command.c **** 
 170:./tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 171:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_SLEEP_LED   ) ":	Sleep LED Test\n"
 172:./tmk_core/common/command.c **** #endif
 173:./tmk_core/common/command.c ****     );
 174:./tmk_core/common/command.c **** }
 175:./tmk_core/common/command.c **** 
 176:./tmk_core/common/command.c **** static void print_version(void)
 177:./tmk_core/common/command.c **** {
 178:./tmk_core/common/command.c **** 	// print version & information
 179:./tmk_core/common/command.c ****     print("\n\t- Version -\n");
 180:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 181:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 182:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 183:./tmk_core/common/command.c ****           "VER: " STR(DEVICE_VER) "\n");
 184:./tmk_core/common/command.c ****     print("BUILD: " STR(QMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 185:./tmk_core/common/command.c **** 
 186:./tmk_core/common/command.c ****     /* build options */
 187:./tmk_core/common/command.c ****     print("OPTIONS:"
 188:./tmk_core/common/command.c **** 
 189:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 190:./tmk_core/common/command.c **** 	    " PJRC"
 191:./tmk_core/common/command.c **** #endif
 192:./tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 193:./tmk_core/common/command.c **** 	    " LUFA"
 194:./tmk_core/common/command.c **** #endif
 195:./tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 196:./tmk_core/common/command.c **** 	    " VUSB"
 197:./tmk_core/common/command.c **** #endif
 198:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 199:./tmk_core/common/command.c **** 	    " BOOTMAGIC"
 200:./tmk_core/common/command.c **** #endif
 201:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 202:./tmk_core/common/command.c **** 	    " MOUSEKEY"
 203:./tmk_core/common/command.c **** #endif
 204:./tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 205:./tmk_core/common/command.c **** 	    " EXTRAKEY"
 206:./tmk_core/common/command.c **** #endif
 207:./tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 208:./tmk_core/common/command.c **** 	    " CONSOLE"
 209:./tmk_core/common/command.c **** #endif
 210:./tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 211:./tmk_core/common/command.c **** 	    " COMMAND"
 212:./tmk_core/common/command.c **** #endif
 213:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 214:./tmk_core/common/command.c **** 	    " NKRO"
 215:./tmk_core/common/command.c **** #endif
 216:./tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 217:./tmk_core/common/command.c **** 	    " KEYMAP_SECTION"
 218:./tmk_core/common/command.c **** #endif
 219:./tmk_core/common/command.c **** 
 220:./tmk_core/common/command.c **** 	    " " STR(BOOTLOADER_SIZE) "\n");
 221:./tmk_core/common/command.c **** 
 222:./tmk_core/common/command.c ****     print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 223:./tmk_core/common/command.c **** #if defined(__AVR__)
 224:./tmk_core/common/command.c ****           " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 225:./tmk_core/common/command.c ****           " AVR_ARCH: avr" STR(__AVR_ARCH__)
 226:./tmk_core/common/command.c **** #endif
 227:./tmk_core/common/command.c **** 		  "\n");
 228:./tmk_core/common/command.c **** 
 229:./tmk_core/common/command.c **** 	return;
 230:./tmk_core/common/command.c **** }
 231:./tmk_core/common/command.c **** 
 232:./tmk_core/common/command.c **** static void print_status(void)
 233:./tmk_core/common/command.c **** {
 234:./tmk_core/common/command.c **** 
 235:./tmk_core/common/command.c ****     print("\n\t- Status -\n");
 236:./tmk_core/common/command.c **** 
 237:./tmk_core/common/command.c ****     print_val_hex8(host_keyboard_leds());
 238:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 239:./tmk_core/common/command.c ****     // these aren't set on the V-USB protocol, so we just ignore them for now
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_protocol);
 241:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 242:./tmk_core/common/command.c **** #endif
 243:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 244:./tmk_core/common/command.c ****     print_val_hex8(keymap_config.nkro);
 245:./tmk_core/common/command.c **** #endif
 246:./tmk_core/common/command.c ****     print_val_hex32(timer_read32());
 247:./tmk_core/common/command.c **** 
 248:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 249:./tmk_core/common/command.c ****     print_val_hex8(UDCON);
 250:./tmk_core/common/command.c ****     print_val_hex8(UDIEN);
 251:./tmk_core/common/command.c ****     print_val_hex8(UDINT);
 252:./tmk_core/common/command.c ****     print_val_hex8(usb_keyboard_leds);
 253:./tmk_core/common/command.c ****     print_val_hex8(usb_keyboard_idle_count);
 254:./tmk_core/common/command.c **** #endif
 255:./tmk_core/common/command.c **** 
 256:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 257:./tmk_core/common/command.c **** #   if USB_COUNT_SOF
 258:./tmk_core/common/command.c ****     print_val_hex8(usbSofCount);
 259:./tmk_core/common/command.c **** #   endif
 260:./tmk_core/common/command.c **** #endif
 261:./tmk_core/common/command.c **** 	return;
 262:./tmk_core/common/command.c **** }
 263:./tmk_core/common/command.c **** 
 264:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 265:./tmk_core/common/command.c **** static void print_eeconfig(void)
 266:./tmk_core/common/command.c **** {
 267:./tmk_core/common/command.c **** 
 268:./tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 269:./tmk_core/common/command.c **** #if !defined(NO_PRINT) && !defined(USER_PRINT)
 270:./tmk_core/common/command.c **** 
 271:./tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 272:./tmk_core/common/command.c **** 
 273:./tmk_core/common/command.c ****     debug_config_t dc;
 274:./tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 275:./tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 276:./tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 277:./tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 278:./tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 279:./tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 280:./tmk_core/common/command.c **** 
 281:./tmk_core/common/command.c ****     keymap_config_t kc;
 282:./tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 283:./tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 284:./tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 285:./tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 286:./tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 287:./tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 288:./tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 289:./tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 290:./tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 291:./tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 292:./tmk_core/common/command.c **** 
 293:./tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 294:./tmk_core/common/command.c ****     backlight_config_t bc;
 295:./tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 296:./tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 297:./tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 298:./tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 299:./tmk_core/common/command.c **** #endif /* BACKLIGHT_ENABLE */
 300:./tmk_core/common/command.c **** 
 301:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 302:./tmk_core/common/command.c **** 
 303:./tmk_core/common/command.c **** }
 304:./tmk_core/common/command.c **** #endif /* BOOTMAGIC_ENABLE */
 305:./tmk_core/common/command.c **** 
 306:./tmk_core/common/command.c **** static bool command_common(uint8_t code)
 307:./tmk_core/common/command.c **** {
 308:./tmk_core/common/command.c **** 
 309:./tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 310:./tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 311:./tmk_core/common/command.c **** #endif
 312:./tmk_core/common/command.c **** 
 313:./tmk_core/common/command.c ****     switch (code) {
 314:./tmk_core/common/command.c **** 
 315:./tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 316:./tmk_core/common/command.c **** 
 317:./tmk_core/common/command.c **** 		// test breathing sleep LED
 318:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_SLEEP_LED):
 319:./tmk_core/common/command.c ****             print("Sleep LED Test\n");
 320:./tmk_core/common/command.c ****             sleep_led_toggle();
 321:./tmk_core/common/command.c ****             led_set(host_keyboard_leds());
 322:./tmk_core/common/command.c ****             break;
 323:./tmk_core/common/command.c **** #endif
 324:./tmk_core/common/command.c **** 
 325:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 326:./tmk_core/common/command.c **** 
 327:./tmk_core/common/command.c **** 		// print stored eeprom config
 328:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_EEPROM):
 329:./tmk_core/common/command.c ****             print("eeconfig:\n");
 330:./tmk_core/common/command.c ****             print_eeconfig();
 331:./tmk_core/common/command.c ****             break;
 332:./tmk_core/common/command.c **** #endif
 333:./tmk_core/common/command.c **** 
 334:./tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 335:./tmk_core/common/command.c **** 
 336:./tmk_core/common/command.c **** 		// lock/unlock keyboard
 337:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LOCK):
 338:./tmk_core/common/command.c ****             if (host_get_driver()) {
 339:./tmk_core/common/command.c ****                 host_driver = host_get_driver();
 340:./tmk_core/common/command.c ****                 clear_keyboard();
 341:./tmk_core/common/command.c ****                 host_set_driver(0);
 342:./tmk_core/common/command.c ****                 print("Locked.\n");
 343:./tmk_core/common/command.c ****             } else {
 344:./tmk_core/common/command.c ****                 host_set_driver(host_driver);
 345:./tmk_core/common/command.c ****                 print("Unlocked.\n");
 346:./tmk_core/common/command.c ****             }
 347:./tmk_core/common/command.c ****             break;
 348:./tmk_core/common/command.c **** #endif
 349:./tmk_core/common/command.c **** 
 350:./tmk_core/common/command.c **** 		// print help
 351:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP1):
 352:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP2):
 353:./tmk_core/common/command.c ****             command_common_help();
 354:./tmk_core/common/command.c ****             break;
 355:./tmk_core/common/command.c **** 
 356:./tmk_core/common/command.c **** 		// activate console
 357:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_CONSOLE):
 358:./tmk_core/common/command.c ****             debug_matrix   = false;
 359:./tmk_core/common/command.c ****             debug_keyboard = false;
 360:./tmk_core/common/command.c ****             debug_mouse    = false;
 361:./tmk_core/common/command.c ****             debug_enable   = false;
 362:./tmk_core/common/command.c ****             command_console_help();
 363:./tmk_core/common/command.c ****             print("C> ");
 364:./tmk_core/common/command.c ****             command_state = CONSOLE;
 365:./tmk_core/common/command.c ****             break;
 366:./tmk_core/common/command.c **** 
 367:./tmk_core/common/command.c ****         // jump to bootloader
 368:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_BOOTLOADER):
 369:./tmk_core/common/command.c ****             clear_keyboard(); // clear to prevent stuck keys
 370:./tmk_core/common/command.c ****             print("\n\nJumping to bootloader... ");
 371:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 372:./tmk_core/common/command.c **** 	            stop_all_notes();
 373:./tmk_core/common/command.c ****                 shutdown_user();
 374:./tmk_core/common/command.c ****             #else
 375:./tmk_core/common/command.c **** 	            wait_ms(1000);
 376:./tmk_core/common/command.c ****             #endif
 377:./tmk_core/common/command.c ****             bootloader_jump(); // not return
 378:./tmk_core/common/command.c ****             break;
 379:./tmk_core/common/command.c **** 
 380:./tmk_core/common/command.c ****         // debug toggle
 381:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG):
 382:./tmk_core/common/command.c ****             debug_enable = !debug_enable;
 383:./tmk_core/common/command.c ****             if (debug_enable) {
 384:./tmk_core/common/command.c ****                 print("\ndebug: on\n");
 385:./tmk_core/common/command.c ****             } else {
 386:./tmk_core/common/command.c ****                 print("\ndebug: off\n");
 387:./tmk_core/common/command.c ****                 debug_matrix   = false;
 388:./tmk_core/common/command.c ****                 debug_keyboard = false;
 389:./tmk_core/common/command.c ****                 debug_mouse    = false;
 390:./tmk_core/common/command.c ****             }
 391:./tmk_core/common/command.c ****             break;
 392:./tmk_core/common/command.c **** 
 393:./tmk_core/common/command.c ****         // debug matrix toggle
 394:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MATRIX):
 395:./tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 396:./tmk_core/common/command.c ****             if (debug_matrix) {
 397:./tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 398:./tmk_core/common/command.c ****                 debug_enable = true;
 399:./tmk_core/common/command.c ****             } else {
 400:./tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 401:./tmk_core/common/command.c ****             }
 402:./tmk_core/common/command.c ****             break;
 403:./tmk_core/common/command.c **** 
 404:./tmk_core/common/command.c ****         // debug keyboard toggle
 405:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_KBD):
 406:./tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 407:./tmk_core/common/command.c ****             if (debug_keyboard) {
 408:./tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 409:./tmk_core/common/command.c ****                 debug_enable = true;
 410:./tmk_core/common/command.c ****             } else {
 411:./tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 412:./tmk_core/common/command.c ****             }
 413:./tmk_core/common/command.c ****             break;
 414:./tmk_core/common/command.c **** 
 415:./tmk_core/common/command.c ****         // debug mouse toggle
 416:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MOUSE):
 417:./tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 418:./tmk_core/common/command.c ****             if (debug_mouse) {
 419:./tmk_core/common/command.c ****                 print("\nmouse: on\n");
 420:./tmk_core/common/command.c ****                 debug_enable = true;
 421:./tmk_core/common/command.c ****             } else {
 422:./tmk_core/common/command.c **** 				print("\nmouse: off\n");
 423:./tmk_core/common/command.c ****             }
 424:./tmk_core/common/command.c ****             break;
 425:./tmk_core/common/command.c **** 
 426:./tmk_core/common/command.c **** 		// print version
 427:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_VERSION):
 428:./tmk_core/common/command.c ****         	print_version();
 429:./tmk_core/common/command.c **** 		    break;
 430:./tmk_core/common/command.c **** 
 431:./tmk_core/common/command.c **** 		// print status
 432:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_STATUS):
 433:./tmk_core/common/command.c **** 			print_status();
 434:./tmk_core/common/command.c ****             break;
 435:./tmk_core/common/command.c **** 
 436:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 437:./tmk_core/common/command.c **** 
 438:./tmk_core/common/command.c **** 		// NKRO toggle
 439:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_NKRO):
 440:./tmk_core/common/command.c ****             clear_keyboard(); // clear to prevent stuck keys
 441:./tmk_core/common/command.c ****             keymap_config.nkro = !keymap_config.nkro;
 442:./tmk_core/common/command.c ****             if (keymap_config.nkro) {
 443:./tmk_core/common/command.c ****                 print("NKRO: on\n");
 444:./tmk_core/common/command.c ****             } else {
 445:./tmk_core/common/command.c ****                 print("NKRO: off\n");
 446:./tmk_core/common/command.c ****             }
 447:./tmk_core/common/command.c ****             break;
 448:./tmk_core/common/command.c **** #endif
 449:./tmk_core/common/command.c **** 
 450:./tmk_core/common/command.c **** 		// switch layers
 451:./tmk_core/common/command.c **** 
 452:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER0_ALT1):
 453:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER0_ALT2):
 454:./tmk_core/common/command.c ****             switch_default_layer(0);
 455:./tmk_core/common/command.c ****             break;
 456:./tmk_core/common/command.c **** 
 457:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 458:./tmk_core/common/command.c **** 
 459:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER0):
 460:./tmk_core/common/command.c ****             switch_default_layer(0);
 461:./tmk_core/common/command.c ****             break;
 462:./tmk_core/common/command.c **** 
 463:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER1):
 464:./tmk_core/common/command.c ****             switch_default_layer(1);
 465:./tmk_core/common/command.c ****             break;
 466:./tmk_core/common/command.c **** 
 467:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER2):
 468:./tmk_core/common/command.c ****             switch_default_layer(2);
 469:./tmk_core/common/command.c ****             break;
 470:./tmk_core/common/command.c **** 
 471:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER3):
 472:./tmk_core/common/command.c ****             switch_default_layer(3);
 473:./tmk_core/common/command.c ****             break;
 474:./tmk_core/common/command.c **** 
 475:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER4):
 476:./tmk_core/common/command.c ****             switch_default_layer(4);
 477:./tmk_core/common/command.c ****             break;
 478:./tmk_core/common/command.c **** 
 479:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER5):
 480:./tmk_core/common/command.c ****             switch_default_layer(5);
 481:./tmk_core/common/command.c ****             break;
 482:./tmk_core/common/command.c **** 
 483:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER6):
 484:./tmk_core/common/command.c ****             switch_default_layer(6);
 485:./tmk_core/common/command.c ****             break;
 486:./tmk_core/common/command.c **** 
 487:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER7):
 488:./tmk_core/common/command.c ****             switch_default_layer(7);
 489:./tmk_core/common/command.c ****             break;
 490:./tmk_core/common/command.c **** 
 491:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER8):
 492:./tmk_core/common/command.c ****             switch_default_layer(8);
 493:./tmk_core/common/command.c ****             break;
 494:./tmk_core/common/command.c **** 
 495:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER9):
 496:./tmk_core/common/command.c ****             switch_default_layer(9);
 497:./tmk_core/common/command.c ****             break;
 498:./tmk_core/common/command.c **** #endif
 499:./tmk_core/common/command.c **** 
 500:./tmk_core/common/command.c **** 
 501:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 502:./tmk_core/common/command.c **** 
 503:./tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 504:./tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 505:./tmk_core/common/command.c ****             break;
 506:./tmk_core/common/command.c ****         case KC_F10:
 507:./tmk_core/common/command.c ****             switch_default_layer(0);
 508:./tmk_core/common/command.c ****             break;
 509:./tmk_core/common/command.c **** #endif
 510:./tmk_core/common/command.c **** 
 511:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 512:./tmk_core/common/command.c **** 
 513:./tmk_core/common/command.c ****         case KC_1 ... KC_9:
 514:./tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 515:./tmk_core/common/command.c ****             break;
 516:./tmk_core/common/command.c ****         case KC_0:
 517:./tmk_core/common/command.c ****             switch_default_layer(0);
 518:./tmk_core/common/command.c ****             break;
 519:./tmk_core/common/command.c **** #endif
 520:./tmk_core/common/command.c **** 
 521:./tmk_core/common/command.c ****         default:
 522:./tmk_core/common/command.c ****             print("?");
 523:./tmk_core/common/command.c ****             return false;
 524:./tmk_core/common/command.c ****     }
 525:./tmk_core/common/command.c ****     return true;
 526:./tmk_core/common/command.c **** }
 527:./tmk_core/common/command.c **** 
 528:./tmk_core/common/command.c **** 
 529:./tmk_core/common/command.c **** /***********************************************************
 530:./tmk_core/common/command.c ****  * Command console
 531:./tmk_core/common/command.c ****  ***********************************************************/
 532:./tmk_core/common/command.c **** static void command_console_help(void)
 533:./tmk_core/common/command.c **** {
 534:./tmk_core/common/command.c ****     print("\n\t- Console -\n"
 535:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 536:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 537:./tmk_core/common/command.c ****           "m:	mousekey\n"
 538:./tmk_core/common/command.c **** #endif
 539:./tmk_core/common/command.c ****     );
 540:./tmk_core/common/command.c **** }
 541:./tmk_core/common/command.c **** 
 542:./tmk_core/common/command.c **** static bool command_console(uint8_t code)
 543:./tmk_core/common/command.c **** {
 544:./tmk_core/common/command.c ****     switch (code) {
 545:./tmk_core/common/command.c ****         case KC_H:
 546:./tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 547:./tmk_core/common/command.c ****             command_console_help();
 548:./tmk_core/common/command.c ****             break;
 549:./tmk_core/common/command.c ****         case KC_Q:
 550:./tmk_core/common/command.c ****         case KC_ESC:
 551:./tmk_core/common/command.c ****             command_state = ONESHOT;
 552:./tmk_core/common/command.c ****             return false;
 553:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 554:./tmk_core/common/command.c ****         case KC_M:
 555:./tmk_core/common/command.c ****             mousekey_console_help();
 556:./tmk_core/common/command.c ****             print("M> ");
 557:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 558:./tmk_core/common/command.c ****             return true;
 559:./tmk_core/common/command.c **** #endif
 560:./tmk_core/common/command.c ****         default:
 561:./tmk_core/common/command.c ****             print("?");
 562:./tmk_core/common/command.c ****             return false;
 563:./tmk_core/common/command.c ****     }
 564:./tmk_core/common/command.c ****     print("C> ");
 565:./tmk_core/common/command.c ****     return true;
 566:./tmk_core/common/command.c **** }
 567:./tmk_core/common/command.c **** 
 568:./tmk_core/common/command.c **** 
 569:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 570:./tmk_core/common/command.c **** /***********************************************************
 571:./tmk_core/common/command.c ****  * Mousekey console
 572:./tmk_core/common/command.c ****  ***********************************************************/
 573:./tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 574:./tmk_core/common/command.c **** 
 575:./tmk_core/common/command.c **** static void mousekey_param_print(void)
 576:./tmk_core/common/command.c **** {
 577:./tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 578:./tmk_core/common/command.c **** #if !defined(NO_PRINT) && !defined(USER_PRINT)
 579:./tmk_core/common/command.c ****     print("\n\t- Values -\n");
 580:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 581:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 582:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 583:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 584:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 585:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 586:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 587:./tmk_core/common/command.c **** 
 588:./tmk_core/common/command.c **** }
 589:./tmk_core/common/command.c **** 
 590:./tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 591:./tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 592:./tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 593:./tmk_core/common/command.c **** {
 594:./tmk_core/common/command.c ****     switch (param) {
 595:./tmk_core/common/command.c ****         case 1:
 596:./tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 597:./tmk_core/common/command.c ****                 mk_delay += inc;
 598:./tmk_core/common/command.c ****             else
 599:./tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 600:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 601:./tmk_core/common/command.c ****             break;
 602:./tmk_core/common/command.c ****         case 2:
 603:./tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 604:./tmk_core/common/command.c ****                 mk_interval += inc;
 605:./tmk_core/common/command.c ****             else
 606:./tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 607:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 608:./tmk_core/common/command.c ****             break;
 609:./tmk_core/common/command.c ****         case 3:
 610:./tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 611:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 612:./tmk_core/common/command.c ****             else
 613:./tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 614:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 615:./tmk_core/common/command.c ****             break;
 616:./tmk_core/common/command.c ****         case 4:
 617:./tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 618:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 619:./tmk_core/common/command.c ****             else
 620:./tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 621:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 622:./tmk_core/common/command.c ****             break;
 623:./tmk_core/common/command.c ****         case 5:
 624:./tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 625:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 626:./tmk_core/common/command.c ****             else
 627:./tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 628:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 629:./tmk_core/common/command.c ****             break;
 630:./tmk_core/common/command.c ****         case 6:
 631:./tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 632:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 633:./tmk_core/common/command.c ****             else
 634:./tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 635:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 636:./tmk_core/common/command.c ****             break;
 637:./tmk_core/common/command.c ****     }
 638:./tmk_core/common/command.c **** }
 639:./tmk_core/common/command.c **** 
 640:./tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 641:./tmk_core/common/command.c **** {
 642:./tmk_core/common/command.c ****     switch (param) {
 643:./tmk_core/common/command.c ****         case 1:
 644:./tmk_core/common/command.c ****             if (mk_delay > dec)
 645:./tmk_core/common/command.c ****                 mk_delay -= dec;
 646:./tmk_core/common/command.c ****             else
 647:./tmk_core/common/command.c ****                 mk_delay = 0;
 648:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 649:./tmk_core/common/command.c ****             break;
 650:./tmk_core/common/command.c ****         case 2:
 651:./tmk_core/common/command.c ****             if (mk_interval > dec)
 652:./tmk_core/common/command.c ****                 mk_interval -= dec;
 653:./tmk_core/common/command.c ****             else
 654:./tmk_core/common/command.c ****                 mk_interval = 0;
 655:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 656:./tmk_core/common/command.c ****             break;
 657:./tmk_core/common/command.c ****         case 3:
 658:./tmk_core/common/command.c ****             if (mk_max_speed > dec)
 659:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 660:./tmk_core/common/command.c ****             else
 661:./tmk_core/common/command.c ****                 mk_max_speed = 0;
 662:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 663:./tmk_core/common/command.c ****             break;
 664:./tmk_core/common/command.c ****         case 4:
 665:./tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 666:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 667:./tmk_core/common/command.c ****             else
 668:./tmk_core/common/command.c ****                 mk_time_to_max = 0;
 669:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 670:./tmk_core/common/command.c ****             break;
 671:./tmk_core/common/command.c ****         case 5:
 672:./tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 673:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 674:./tmk_core/common/command.c ****             else
 675:./tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 676:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 677:./tmk_core/common/command.c ****             break;
 678:./tmk_core/common/command.c ****         case 6:
 679:./tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 680:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 681:./tmk_core/common/command.c ****             else
 682:./tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 683:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 684:./tmk_core/common/command.c ****             break;
 685:./tmk_core/common/command.c ****     }
 686:./tmk_core/common/command.c **** }
 687:./tmk_core/common/command.c **** 
 688:./tmk_core/common/command.c **** static void mousekey_console_help(void)
 689:./tmk_core/common/command.c **** {
  15               		.loc 1 689 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 690:./tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 690 5 view .LVU1
  22               	.LBB15:
  23               		.loc 1 690 5 view .LVU2
  24               		.loc 1 690 5 view .LVU3
  25               	.LBE15:
  26 0000 80E0      		ldi r24,lo8(__c.3498)
  27 0002 90E0      		ldi r25,hi8(__c.3498)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 691:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 692:./tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 693:./tmk_core/common/command.c ****           "2:	interval(ms)\n"
 694:./tmk_core/common/command.c ****           "3:	max_speed\n"
 695:./tmk_core/common/command.c ****           "4:	time_to_max\n"
 696:./tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 697:./tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 698:./tmk_core/common/command.c ****           "\n"
 699:./tmk_core/common/command.c ****           "p:	print values\n"
 700:./tmk_core/common/command.c ****           "d:	set defaults\n"
 701:./tmk_core/common/command.c ****           "up:	+1\n"
 702:./tmk_core/common/command.c ****           "down:	-1\n"
 703:./tmk_core/common/command.c ****           "pgup:	+10\n"
 704:./tmk_core/common/command.c ****           "pgdown:	-10\n"
 705:./tmk_core/common/command.c ****           "\n"
 706:./tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 707:./tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n"
  30               		.loc 1 707 5 view .LVU4
  31               	.LBB16:
  32               		.loc 1 707 5 view .LVU5
  33               		.loc 1 707 5 view .LVU6
  34               	.LBE16:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.3500)
  50 0016 90E0      		ldi r25,hi8(__c.3500)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 708:./tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 709:./tmk_core/common/command.c **** }
  59               		.loc 1 709 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE40:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB38:
 593:./tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 593 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 594:./tmk_core/common/command.c ****         case 1:
  84               		.loc 1 594 5 view .LVU9
  85 0000 8430      		cpi r24,lo8(4)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8230      		cpi r24,lo8(2)
  90 000a 01F0      		breq .L5
  91 000c 8330      		cpi r24,lo8(3)
  92 000e 01F4      		brne .+2
  93 0010 00C0      		rjmp .L6
  94 0012 8130      		cpi r24,lo8(1)
  95 0014 01F0      		breq .L7
  96 0016 0895      		ret
  97               	.L4:
  98 0018 8530      		cpi r24,lo8(5)
  99 001a 01F4      		brne .+2
 100 001c 00C0      		rjmp .L9
 101 001e 8630      		cpi r24,lo8(6)
 102 0020 01F4      		brne .+2
 103 0022 00C0      		rjmp .L10
 104 0024 0895      		ret
 105               	.L7:
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 596 13 view .LVU10
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 107               		.loc 1 596 26 is_stmt 0 view .LVU11
 108 0026 8091 0000 		lds r24,mk_delay
 109               	.LVL3:
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 110               		.loc 1 596 26 view .LVU12
 111 002a 482F      		mov r20,r24
 112 002c 460F      		add r20,r22
 113 002e 5527      		clr r21
 114 0030 551F      		rol r21
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 115               		.loc 1 596 16 view .LVU13
 116 0032 4F3F      		cpi r20,-1
 117 0034 5105      		cpc r21,__zero_reg__
 118 0036 04F4      		brge .L11
 597:./tmk_core/common/command.c ****             else
 119               		.loc 1 597 17 is_stmt 1 view .LVU14
 597:./tmk_core/common/command.c ****             else
 120               		.loc 1 597 26 is_stmt 0 view .LVU15
 121 0038 680F      		add r22,r24
 122               	.LVL4:
 597:./tmk_core/common/command.c ****             else
 123               		.loc 1 597 26 view .LVU16
 124 003a 6093 0000 		sts mk_delay,r22
 125               	.L12:
 600:./tmk_core/common/command.c ****             break;
 126               		.loc 1 600 13 is_stmt 1 view .LVU17
 127               	.LBB17:
 600:./tmk_core/common/command.c ****             break;
 128               		.loc 1 600 13 view .LVU18
 600:./tmk_core/common/command.c ****             break;
 129               		.loc 1 600 13 view .LVU19
 130               	.LBE17:
 131 003e 8091 0000 		lds r24,mk_delay
 132 0042 1F92      		push __zero_reg__
 133               	.LCFI7:
 134               		.cfi_def_cfa_offset 3
 135 0044 8F93      		push r24
 136               	.LCFI8:
 137               		.cfi_def_cfa_offset 4
 138 0046 80E0      		ldi r24,lo8(__c.3454)
 139 0048 90E0      		ldi r25,hi8(__c.3454)
 140               	.L23:
 635:./tmk_core/common/command.c ****             break;
 141               		.loc 1 635 13 is_stmt 0 view .LVU20
 142 004a 9F93      		push r25
 143               	.LCFI9:
 144               		.cfi_def_cfa_offset 5
 145 004c 8F93      		push r24
 146               	.LCFI10:
 147               		.cfi_def_cfa_offset 6
 148 004e 0E94 0000 		call __xprintf
 149               	.LVL5:
 636:./tmk_core/common/command.c ****     }
 150               		.loc 1 636 13 is_stmt 1 view .LVU21
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154 0058 0F90      		pop __tmp_reg__
 155               	.LCFI11:
 156               		.cfi_def_cfa_offset 2
 157               	/* epilogue start */
 638:./tmk_core/common/command.c **** 
 158               		.loc 1 638 1 is_stmt 0 view .LVU22
 159 005a 0895      		ret
 160               	.LVL6:
 161               	.L11:
 599:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 599 17 is_stmt 1 view .LVU23
 599:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 163               		.loc 1 599 26 is_stmt 0 view .LVU24
 164 005c 8FEF      		ldi r24,lo8(-1)
 165 005e 8093 0000 		sts mk_delay,r24
 166 0062 00C0      		rjmp .L12
 167               	.LVL7:
 168               	.L5:
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 603 13 is_stmt 1 view .LVU25
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 170               		.loc 1 603 29 is_stmt 0 view .LVU26
 171 0064 8091 0000 		lds r24,mk_interval
 172               	.LVL8:
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 173               		.loc 1 603 29 view .LVU27
 174 0068 482F      		mov r20,r24
 175 006a 460F      		add r20,r22
 176 006c 5527      		clr r21
 177 006e 551F      		rol r21
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 178               		.loc 1 603 16 view .LVU28
 179 0070 4F3F      		cpi r20,-1
 180 0072 5105      		cpc r21,__zero_reg__
 181 0074 04F4      		brge .L13
 604:./tmk_core/common/command.c ****             else
 182               		.loc 1 604 17 is_stmt 1 view .LVU29
 604:./tmk_core/common/command.c ****             else
 183               		.loc 1 604 29 is_stmt 0 view .LVU30
 184 0076 680F      		add r22,r24
 185               	.LVL9:
 604:./tmk_core/common/command.c ****             else
 186               		.loc 1 604 29 view .LVU31
 187 0078 6093 0000 		sts mk_interval,r22
 188               	.L14:
 607:./tmk_core/common/command.c ****             break;
 189               		.loc 1 607 13 is_stmt 1 view .LVU32
 190               	.LBB18:
 607:./tmk_core/common/command.c ****             break;
 191               		.loc 1 607 13 view .LVU33
 607:./tmk_core/common/command.c ****             break;
 192               		.loc 1 607 13 view .LVU34
 193               	.LBE18:
 194 007c 8091 0000 		lds r24,mk_interval
 195 0080 1F92      		push __zero_reg__
 196               	.LCFI12:
 197               		.cfi_remember_state
 198               		.cfi_def_cfa_offset 3
 199 0082 8F93      		push r24
 200               	.LCFI13:
 201               		.cfi_def_cfa_offset 4
 202 0084 80E0      		ldi r24,lo8(__c.3458)
 203 0086 90E0      		ldi r25,hi8(__c.3458)
 204 0088 00C0      		rjmp .L23
 205               	.LVL10:
 206               	.L13:
 207               	.LCFI14:
 208               		.cfi_restore_state
 606:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 606 17 view .LVU35
 606:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 210               		.loc 1 606 29 is_stmt 0 view .LVU36
 211 008a 8FEF      		ldi r24,lo8(-1)
 212 008c 8093 0000 		sts mk_interval,r24
 213 0090 00C0      		rjmp .L14
 214               	.LVL11:
 215               	.L6:
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 610 13 is_stmt 1 view .LVU37
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 217               		.loc 1 610 30 is_stmt 0 view .LVU38
 218 0092 8091 0000 		lds r24,mk_max_speed
 219               	.LVL12:
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 220               		.loc 1 610 30 view .LVU39
 221 0096 482F      		mov r20,r24
 222 0098 460F      		add r20,r22
 223 009a 5527      		clr r21
 224 009c 551F      		rol r21
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 225               		.loc 1 610 16 view .LVU40
 226 009e 4F3F      		cpi r20,-1
 227 00a0 5105      		cpc r21,__zero_reg__
 228 00a2 04F4      		brge .L15
 611:./tmk_core/common/command.c ****             else
 229               		.loc 1 611 17 is_stmt 1 view .LVU41
 611:./tmk_core/common/command.c ****             else
 230               		.loc 1 611 30 is_stmt 0 view .LVU42
 231 00a4 680F      		add r22,r24
 232               	.LVL13:
 611:./tmk_core/common/command.c ****             else
 233               		.loc 1 611 30 view .LVU43
 234 00a6 6093 0000 		sts mk_max_speed,r22
 235               	.L16:
 614:./tmk_core/common/command.c ****             break;
 236               		.loc 1 614 13 is_stmt 1 view .LVU44
 237               	.LBB19:
 614:./tmk_core/common/command.c ****             break;
 238               		.loc 1 614 13 view .LVU45
 614:./tmk_core/common/command.c ****             break;
 239               		.loc 1 614 13 view .LVU46
 240               	.LBE19:
 241 00aa 8091 0000 		lds r24,mk_max_speed
 242 00ae 1F92      		push __zero_reg__
 243               	.LCFI15:
 244               		.cfi_remember_state
 245               		.cfi_def_cfa_offset 3
 246 00b0 8F93      		push r24
 247               	.LCFI16:
 248               		.cfi_def_cfa_offset 4
 249 00b2 80E0      		ldi r24,lo8(__c.3461)
 250 00b4 90E0      		ldi r25,hi8(__c.3461)
 251 00b6 00C0      		rjmp .L23
 252               	.LVL14:
 253               	.L15:
 254               	.LCFI17:
 255               		.cfi_restore_state
 613:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 613 17 view .LVU47
 613:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 257               		.loc 1 613 30 is_stmt 0 view .LVU48
 258 00b8 8FEF      		ldi r24,lo8(-1)
 259 00ba 8093 0000 		sts mk_max_speed,r24
 260 00be 00C0      		rjmp .L16
 261               	.LVL15:
 262               	.L3:
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 617 13 is_stmt 1 view .LVU49
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 264               		.loc 1 617 32 is_stmt 0 view .LVU50
 265 00c0 8091 0000 		lds r24,mk_time_to_max
 266               	.LVL16:
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 267               		.loc 1 617 32 view .LVU51
 268 00c4 482F      		mov r20,r24
 269 00c6 460F      		add r20,r22
 270 00c8 5527      		clr r21
 271 00ca 551F      		rol r21
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 272               		.loc 1 617 16 view .LVU52
 273 00cc 4F3F      		cpi r20,-1
 274 00ce 5105      		cpc r21,__zero_reg__
 275 00d0 04F4      		brge .L17
 618:./tmk_core/common/command.c ****             else
 276               		.loc 1 618 17 is_stmt 1 view .LVU53
 618:./tmk_core/common/command.c ****             else
 277               		.loc 1 618 32 is_stmt 0 view .LVU54
 278 00d2 680F      		add r22,r24
 279               	.LVL17:
 618:./tmk_core/common/command.c ****             else
 280               		.loc 1 618 32 view .LVU55
 281 00d4 6093 0000 		sts mk_time_to_max,r22
 282               	.L18:
 621:./tmk_core/common/command.c ****             break;
 283               		.loc 1 621 13 is_stmt 1 view .LVU56
 284               	.LBB20:
 621:./tmk_core/common/command.c ****             break;
 285               		.loc 1 621 13 view .LVU57
 621:./tmk_core/common/command.c ****             break;
 286               		.loc 1 621 13 view .LVU58
 287               	.LBE20:
 288 00d8 8091 0000 		lds r24,mk_time_to_max
 289 00dc 1F92      		push __zero_reg__
 290               	.LCFI18:
 291               		.cfi_remember_state
 292               		.cfi_def_cfa_offset 3
 293 00de 8F93      		push r24
 294               	.LCFI19:
 295               		.cfi_def_cfa_offset 4
 296 00e0 80E0      		ldi r24,lo8(__c.3464)
 297 00e2 90E0      		ldi r25,hi8(__c.3464)
 298 00e4 00C0      		rjmp .L23
 299               	.LVL18:
 300               	.L17:
 301               	.LCFI20:
 302               		.cfi_restore_state
 620:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 620 17 view .LVU59
 620:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 304               		.loc 1 620 32 is_stmt 0 view .LVU60
 305 00e6 8FEF      		ldi r24,lo8(-1)
 306 00e8 8093 0000 		sts mk_time_to_max,r24
 307 00ec 00C0      		rjmp .L18
 308               	.LVL19:
 309               	.L9:
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 624 13 is_stmt 1 view .LVU61
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 311               		.loc 1 624 36 is_stmt 0 view .LVU62
 312 00ee 8091 0000 		lds r24,mk_wheel_max_speed
 313               	.LVL20:
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 314               		.loc 1 624 36 view .LVU63
 315 00f2 482F      		mov r20,r24
 316 00f4 460F      		add r20,r22
 317 00f6 5527      		clr r21
 318 00f8 551F      		rol r21
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 319               		.loc 1 624 16 view .LVU64
 320 00fa 4F3F      		cpi r20,-1
 321 00fc 5105      		cpc r21,__zero_reg__
 322 00fe 04F4      		brge .L19
 625:./tmk_core/common/command.c ****             else
 323               		.loc 1 625 17 is_stmt 1 view .LVU65
 625:./tmk_core/common/command.c ****             else
 324               		.loc 1 625 36 is_stmt 0 view .LVU66
 325 0100 680F      		add r22,r24
 326               	.LVL21:
 625:./tmk_core/common/command.c ****             else
 327               		.loc 1 625 36 view .LVU67
 328 0102 6093 0000 		sts mk_wheel_max_speed,r22
 329               	.L20:
 628:./tmk_core/common/command.c ****             break;
 330               		.loc 1 628 13 is_stmt 1 view .LVU68
 331               	.LBB21:
 628:./tmk_core/common/command.c ****             break;
 332               		.loc 1 628 13 view .LVU69
 628:./tmk_core/common/command.c ****             break;
 333               		.loc 1 628 13 view .LVU70
 334               	.LBE21:
 335 0106 8091 0000 		lds r24,mk_wheel_max_speed
 336 010a 1F92      		push __zero_reg__
 337               	.LCFI21:
 338               		.cfi_remember_state
 339               		.cfi_def_cfa_offset 3
 340 010c 8F93      		push r24
 341               	.LCFI22:
 342               		.cfi_def_cfa_offset 4
 343 010e 80E0      		ldi r24,lo8(__c.3467)
 344 0110 90E0      		ldi r25,hi8(__c.3467)
 345 0112 00C0      		rjmp .L23
 346               	.LVL22:
 347               	.L19:
 348               	.LCFI23:
 349               		.cfi_restore_state
 627:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 627 17 view .LVU71
 627:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 351               		.loc 1 627 36 is_stmt 0 view .LVU72
 352 0114 8FEF      		ldi r24,lo8(-1)
 353 0116 8093 0000 		sts mk_wheel_max_speed,r24
 354 011a 00C0      		rjmp .L20
 355               	.LVL23:
 356               	.L10:
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 631 13 is_stmt 1 view .LVU73
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 358               		.loc 1 631 38 is_stmt 0 view .LVU74
 359 011c 8091 0000 		lds r24,mk_wheel_time_to_max
 360               	.LVL24:
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 361               		.loc 1 631 38 view .LVU75
 362 0120 482F      		mov r20,r24
 363 0122 460F      		add r20,r22
 364 0124 5527      		clr r21
 365 0126 551F      		rol r21
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 366               		.loc 1 631 16 view .LVU76
 367 0128 4F3F      		cpi r20,-1
 368 012a 5105      		cpc r21,__zero_reg__
 369 012c 04F4      		brge .L21
 632:./tmk_core/common/command.c ****             else
 370               		.loc 1 632 17 is_stmt 1 view .LVU77
 632:./tmk_core/common/command.c ****             else
 371               		.loc 1 632 38 is_stmt 0 view .LVU78
 372 012e 680F      		add r22,r24
 373               	.LVL25:
 632:./tmk_core/common/command.c ****             else
 374               		.loc 1 632 38 view .LVU79
 375 0130 6093 0000 		sts mk_wheel_time_to_max,r22
 376               	.L22:
 635:./tmk_core/common/command.c ****             break;
 377               		.loc 1 635 13 is_stmt 1 view .LVU80
 378               	.LBB22:
 635:./tmk_core/common/command.c ****             break;
 379               		.loc 1 635 13 view .LVU81
 635:./tmk_core/common/command.c ****             break;
 380               		.loc 1 635 13 view .LVU82
 381               	.LBE22:
 382 0134 8091 0000 		lds r24,mk_wheel_time_to_max
 383 0138 1F92      		push __zero_reg__
 384               	.LCFI24:
 385               		.cfi_remember_state
 386               		.cfi_def_cfa_offset 3
 387 013a 8F93      		push r24
 388               	.LCFI25:
 389               		.cfi_def_cfa_offset 4
 390 013c 80E0      		ldi r24,lo8(__c.3470)
 391 013e 90E0      		ldi r25,hi8(__c.3470)
 392 0140 00C0      		rjmp .L23
 393               	.LVL26:
 394               	.L21:
 395               	.LCFI26:
 396               		.cfi_restore_state
 634:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 634 17 view .LVU83
 634:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 398               		.loc 1 634 38 is_stmt 0 view .LVU84
 399 0142 8FEF      		ldi r24,lo8(-1)
 400 0144 8093 0000 		sts mk_wheel_time_to_max,r24
 401 0148 00C0      		rjmp .L22
 402               		.cfi_endproc
 403               	.LFE38:
 405               		.section	.text.mousekey_param_dec,"ax",@progbits
 407               	mousekey_param_dec:
 408               	.LVL27:
 409               	.LFB39:
 641:./tmk_core/common/command.c ****     switch (param) {
 410               		.loc 1 641 1 is_stmt 1 view -0
 411               		.cfi_startproc
 412               	/* prologue: function */
 413               	/* frame size = 0 */
 414               	/* stack size = 0 */
 415               	.L__stack_usage = 0
 642:./tmk_core/common/command.c ****         case 1:
 416               		.loc 1 642 5 view .LVU86
 417 0000 8430      		cpi r24,lo8(4)
 418 0002 01F4      		brne .+2
 419 0004 00C0      		rjmp .L25
 420 0006 00F4      		brsh .L26
 421 0008 8230      		cpi r24,lo8(2)
 422 000a 01F0      		breq .L27
 423 000c 8330      		cpi r24,lo8(3)
 424 000e 01F0      		breq .L28
 425 0010 8130      		cpi r24,lo8(1)
 426 0012 01F0      		breq .L29
 427 0014 0895      		ret
 428               	.L26:
 429 0016 8530      		cpi r24,lo8(5)
 430 0018 01F4      		brne .+2
 431 001a 00C0      		rjmp .L31
 432 001c 8630      		cpi r24,lo8(6)
 433 001e 01F4      		brne .+2
 434 0020 00C0      		rjmp .L32
 435 0022 0895      		ret
 436               	.L29:
 644:./tmk_core/common/command.c ****                 mk_delay -= dec;
 437               		.loc 1 644 13 view .LVU87
 644:./tmk_core/common/command.c ****                 mk_delay -= dec;
 438               		.loc 1 644 26 is_stmt 0 view .LVU88
 439 0024 8091 0000 		lds r24,mk_delay
 440               	.LVL28:
 644:./tmk_core/common/command.c ****                 mk_delay -= dec;
 441               		.loc 1 644 16 view .LVU89
 442 0028 6817      		cp r22,r24
 443 002a 00F4      		brsh .L33
 645:./tmk_core/common/command.c ****             else
 444               		.loc 1 645 17 is_stmt 1 view .LVU90
 645:./tmk_core/common/command.c ****             else
 445               		.loc 1 645 26 is_stmt 0 view .LVU91
 446 002c 861B      		sub r24,r22
 447 002e 8093 0000 		sts mk_delay,r24
 448               	.L34:
 648:./tmk_core/common/command.c ****             break;
 449               		.loc 1 648 13 is_stmt 1 view .LVU92
 450               	.LBB23:
 648:./tmk_core/common/command.c ****             break;
 451               		.loc 1 648 13 view .LVU93
 648:./tmk_core/common/command.c ****             break;
 452               		.loc 1 648 13 view .LVU94
 453               	.LBE23:
 454 0032 8091 0000 		lds r24,mk_delay
 455 0036 1F92      		push __zero_reg__
 456               	.LCFI27:
 457               		.cfi_def_cfa_offset 3
 458 0038 8F93      		push r24
 459               	.LCFI28:
 460               		.cfi_def_cfa_offset 4
 461 003a 80E0      		ldi r24,lo8(__c.3477)
 462 003c 90E0      		ldi r25,hi8(__c.3477)
 463               	.L45:
 683:./tmk_core/common/command.c ****             break;
 464               		.loc 1 683 13 is_stmt 0 view .LVU95
 465 003e 9F93      		push r25
 466               	.LCFI29:
 467               		.cfi_def_cfa_offset 5
 468 0040 8F93      		push r24
 469               	.LCFI30:
 470               		.cfi_def_cfa_offset 6
 471 0042 0E94 0000 		call __xprintf
 472               	.LVL29:
 684:./tmk_core/common/command.c ****     }
 473               		.loc 1 684 13 is_stmt 1 view .LVU96
 474 0046 0F90      		pop __tmp_reg__
 475 0048 0F90      		pop __tmp_reg__
 476 004a 0F90      		pop __tmp_reg__
 477 004c 0F90      		pop __tmp_reg__
 478               	.LCFI31:
 479               		.cfi_def_cfa_offset 2
 480               	/* epilogue start */
 686:./tmk_core/common/command.c **** 
 481               		.loc 1 686 1 is_stmt 0 view .LVU97
 482 004e 0895      		ret
 483               	.LVL30:
 484               	.L33:
 647:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 485               		.loc 1 647 17 is_stmt 1 view .LVU98
 647:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 486               		.loc 1 647 26 is_stmt 0 view .LVU99
 487 0050 1092 0000 		sts mk_delay,__zero_reg__
 488 0054 00C0      		rjmp .L34
 489               	.LVL31:
 490               	.L27:
 651:./tmk_core/common/command.c ****                 mk_interval -= dec;
 491               		.loc 1 651 13 is_stmt 1 view .LVU100
 651:./tmk_core/common/command.c ****                 mk_interval -= dec;
 492               		.loc 1 651 29 is_stmt 0 view .LVU101
 493 0056 8091 0000 		lds r24,mk_interval
 494               	.LVL32:
 651:./tmk_core/common/command.c ****                 mk_interval -= dec;
 495               		.loc 1 651 16 view .LVU102
 496 005a 6817      		cp r22,r24
 497 005c 00F4      		brsh .L35
 652:./tmk_core/common/command.c ****             else
 498               		.loc 1 652 17 is_stmt 1 view .LVU103
 652:./tmk_core/common/command.c ****             else
 499               		.loc 1 652 29 is_stmt 0 view .LVU104
 500 005e 861B      		sub r24,r22
 501 0060 8093 0000 		sts mk_interval,r24
 502               	.L36:
 655:./tmk_core/common/command.c ****             break;
 503               		.loc 1 655 13 is_stmt 1 view .LVU105
 504               	.LBB24:
 655:./tmk_core/common/command.c ****             break;
 505               		.loc 1 655 13 view .LVU106
 655:./tmk_core/common/command.c ****             break;
 506               		.loc 1 655 13 view .LVU107
 507               	.LBE24:
 508 0064 8091 0000 		lds r24,mk_interval
 509 0068 1F92      		push __zero_reg__
 510               	.LCFI32:
 511               		.cfi_remember_state
 512               		.cfi_def_cfa_offset 3
 513 006a 8F93      		push r24
 514               	.LCFI33:
 515               		.cfi_def_cfa_offset 4
 516 006c 80E0      		ldi r24,lo8(__c.3481)
 517 006e 90E0      		ldi r25,hi8(__c.3481)
 518 0070 00C0      		rjmp .L45
 519               	.L35:
 520               	.LCFI34:
 521               		.cfi_restore_state
 654:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 522               		.loc 1 654 17 view .LVU108
 654:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 523               		.loc 1 654 29 is_stmt 0 view .LVU109
 524 0072 1092 0000 		sts mk_interval,__zero_reg__
 525 0076 00C0      		rjmp .L36
 526               	.LVL33:
 527               	.L28:
 658:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 528               		.loc 1 658 13 is_stmt 1 view .LVU110
 658:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 529               		.loc 1 658 30 is_stmt 0 view .LVU111
 530 0078 8091 0000 		lds r24,mk_max_speed
 531               	.LVL34:
 658:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 532               		.loc 1 658 16 view .LVU112
 533 007c 6817      		cp r22,r24
 534 007e 00F4      		brsh .L37
 659:./tmk_core/common/command.c ****             else
 535               		.loc 1 659 17 is_stmt 1 view .LVU113
 659:./tmk_core/common/command.c ****             else
 536               		.loc 1 659 30 is_stmt 0 view .LVU114
 537 0080 861B      		sub r24,r22
 538 0082 8093 0000 		sts mk_max_speed,r24
 539               	.L38:
 662:./tmk_core/common/command.c ****             break;
 540               		.loc 1 662 13 is_stmt 1 view .LVU115
 541               	.LBB25:
 662:./tmk_core/common/command.c ****             break;
 542               		.loc 1 662 13 view .LVU116
 662:./tmk_core/common/command.c ****             break;
 543               		.loc 1 662 13 view .LVU117
 544               	.LBE25:
 545 0086 8091 0000 		lds r24,mk_max_speed
 546 008a 1F92      		push __zero_reg__
 547               	.LCFI35:
 548               		.cfi_remember_state
 549               		.cfi_def_cfa_offset 3
 550 008c 8F93      		push r24
 551               	.LCFI36:
 552               		.cfi_def_cfa_offset 4
 553 008e 80E0      		ldi r24,lo8(__c.3484)
 554 0090 90E0      		ldi r25,hi8(__c.3484)
 555 0092 00C0      		rjmp .L45
 556               	.L37:
 557               	.LCFI37:
 558               		.cfi_restore_state
 661:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 559               		.loc 1 661 17 view .LVU118
 661:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 560               		.loc 1 661 30 is_stmt 0 view .LVU119
 561 0094 1092 0000 		sts mk_max_speed,__zero_reg__
 562 0098 00C0      		rjmp .L38
 563               	.LVL35:
 564               	.L25:
 665:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 565               		.loc 1 665 13 is_stmt 1 view .LVU120
 665:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 566               		.loc 1 665 32 is_stmt 0 view .LVU121
 567 009a 8091 0000 		lds r24,mk_time_to_max
 568               	.LVL36:
 665:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 569               		.loc 1 665 16 view .LVU122
 570 009e 6817      		cp r22,r24
 571 00a0 00F4      		brsh .L39
 666:./tmk_core/common/command.c ****             else
 572               		.loc 1 666 17 is_stmt 1 view .LVU123
 666:./tmk_core/common/command.c ****             else
 573               		.loc 1 666 32 is_stmt 0 view .LVU124
 574 00a2 861B      		sub r24,r22
 575 00a4 8093 0000 		sts mk_time_to_max,r24
 576               	.L40:
 669:./tmk_core/common/command.c ****             break;
 577               		.loc 1 669 13 is_stmt 1 view .LVU125
 578               	.LBB26:
 669:./tmk_core/common/command.c ****             break;
 579               		.loc 1 669 13 view .LVU126
 669:./tmk_core/common/command.c ****             break;
 580               		.loc 1 669 13 view .LVU127
 581               	.LBE26:
 582 00a8 8091 0000 		lds r24,mk_time_to_max
 583 00ac 1F92      		push __zero_reg__
 584               	.LCFI38:
 585               		.cfi_remember_state
 586               		.cfi_def_cfa_offset 3
 587 00ae 8F93      		push r24
 588               	.LCFI39:
 589               		.cfi_def_cfa_offset 4
 590 00b0 80E0      		ldi r24,lo8(__c.3487)
 591 00b2 90E0      		ldi r25,hi8(__c.3487)
 592 00b4 00C0      		rjmp .L45
 593               	.L39:
 594               	.LCFI40:
 595               		.cfi_restore_state
 668:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 596               		.loc 1 668 17 view .LVU128
 668:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 597               		.loc 1 668 32 is_stmt 0 view .LVU129
 598 00b6 1092 0000 		sts mk_time_to_max,__zero_reg__
 599 00ba 00C0      		rjmp .L40
 600               	.LVL37:
 601               	.L31:
 672:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 602               		.loc 1 672 13 is_stmt 1 view .LVU130
 672:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 603               		.loc 1 672 36 is_stmt 0 view .LVU131
 604 00bc 8091 0000 		lds r24,mk_wheel_max_speed
 605               	.LVL38:
 672:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 606               		.loc 1 672 16 view .LVU132
 607 00c0 6817      		cp r22,r24
 608 00c2 00F4      		brsh .L41
 673:./tmk_core/common/command.c ****             else
 609               		.loc 1 673 17 is_stmt 1 view .LVU133
 673:./tmk_core/common/command.c ****             else
 610               		.loc 1 673 36 is_stmt 0 view .LVU134
 611 00c4 861B      		sub r24,r22
 612 00c6 8093 0000 		sts mk_wheel_max_speed,r24
 613               	.L42:
 676:./tmk_core/common/command.c ****             break;
 614               		.loc 1 676 13 is_stmt 1 view .LVU135
 615               	.LBB27:
 676:./tmk_core/common/command.c ****             break;
 616               		.loc 1 676 13 view .LVU136
 676:./tmk_core/common/command.c ****             break;
 617               		.loc 1 676 13 view .LVU137
 618               	.LBE27:
 619 00ca 8091 0000 		lds r24,mk_wheel_max_speed
 620 00ce 1F92      		push __zero_reg__
 621               	.LCFI41:
 622               		.cfi_remember_state
 623               		.cfi_def_cfa_offset 3
 624 00d0 8F93      		push r24
 625               	.LCFI42:
 626               		.cfi_def_cfa_offset 4
 627 00d2 80E0      		ldi r24,lo8(__c.3490)
 628 00d4 90E0      		ldi r25,hi8(__c.3490)
 629 00d6 00C0      		rjmp .L45
 630               	.L41:
 631               	.LCFI43:
 632               		.cfi_restore_state
 675:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 633               		.loc 1 675 17 view .LVU138
 675:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 634               		.loc 1 675 36 is_stmt 0 view .LVU139
 635 00d8 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 636 00dc 00C0      		rjmp .L42
 637               	.LVL39:
 638               	.L32:
 679:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 639               		.loc 1 679 13 is_stmt 1 view .LVU140
 679:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 640               		.loc 1 679 38 is_stmt 0 view .LVU141
 641 00de 8091 0000 		lds r24,mk_wheel_time_to_max
 642               	.LVL40:
 679:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 643               		.loc 1 679 16 view .LVU142
 644 00e2 6817      		cp r22,r24
 645 00e4 00F4      		brsh .L43
 680:./tmk_core/common/command.c ****             else
 646               		.loc 1 680 17 is_stmt 1 view .LVU143
 680:./tmk_core/common/command.c ****             else
 647               		.loc 1 680 38 is_stmt 0 view .LVU144
 648 00e6 861B      		sub r24,r22
 649 00e8 8093 0000 		sts mk_wheel_time_to_max,r24
 650               	.L44:
 683:./tmk_core/common/command.c ****             break;
 651               		.loc 1 683 13 is_stmt 1 view .LVU145
 652               	.LBB28:
 683:./tmk_core/common/command.c ****             break;
 653               		.loc 1 683 13 view .LVU146
 683:./tmk_core/common/command.c ****             break;
 654               		.loc 1 683 13 view .LVU147
 655               	.LBE28:
 656 00ec 8091 0000 		lds r24,mk_wheel_time_to_max
 657 00f0 1F92      		push __zero_reg__
 658               	.LCFI44:
 659               		.cfi_remember_state
 660               		.cfi_def_cfa_offset 3
 661 00f2 8F93      		push r24
 662               	.LCFI45:
 663               		.cfi_def_cfa_offset 4
 664 00f4 80E0      		ldi r24,lo8(__c.3493)
 665 00f6 90E0      		ldi r25,hi8(__c.3493)
 666 00f8 00C0      		rjmp .L45
 667               	.L43:
 668               	.LCFI46:
 669               		.cfi_restore_state
 682:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 670               		.loc 1 682 17 view .LVU148
 682:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 671               		.loc 1 682 38 is_stmt 0 view .LVU149
 672 00fa 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 673 00fe 00C0      		rjmp .L44
 674               		.cfi_endproc
 675               	.LFE39:
 677               		.section	.text.switch_default_layer,"ax",@progbits
 679               	switch_default_layer:
 680               	.LVL41:
 681               	.LFB43:
 710:./tmk_core/common/command.c **** 
 711:./tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 712:./tmk_core/common/command.c **** {
 713:./tmk_core/common/command.c ****     switch (code) {
 714:./tmk_core/common/command.c ****         case KC_H:
 715:./tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 716:./tmk_core/common/command.c ****             mousekey_console_help();
 717:./tmk_core/common/command.c ****             break;
 718:./tmk_core/common/command.c ****         case KC_Q:
 719:./tmk_core/common/command.c ****         case KC_ESC:
 720:./tmk_core/common/command.c ****             if (mousekey_param) {
 721:./tmk_core/common/command.c ****                 mousekey_param = 0;
 722:./tmk_core/common/command.c ****             } else {
 723:./tmk_core/common/command.c ****                 print("C> ");
 724:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 725:./tmk_core/common/command.c ****                 return false;
 726:./tmk_core/common/command.c ****             }
 727:./tmk_core/common/command.c ****             break;
 728:./tmk_core/common/command.c ****         case KC_P:
 729:./tmk_core/common/command.c ****             mousekey_param_print();
 730:./tmk_core/common/command.c ****             break;
 731:./tmk_core/common/command.c ****         case KC_1:
 732:./tmk_core/common/command.c ****         case KC_2:
 733:./tmk_core/common/command.c ****         case KC_3:
 734:./tmk_core/common/command.c ****         case KC_4:
 735:./tmk_core/common/command.c ****         case KC_5:
 736:./tmk_core/common/command.c ****         case KC_6:
 737:./tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 738:./tmk_core/common/command.c ****             break;
 739:./tmk_core/common/command.c ****         case KC_UP:
 740:./tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 741:./tmk_core/common/command.c ****             break;
 742:./tmk_core/common/command.c ****         case KC_DOWN:
 743:./tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 744:./tmk_core/common/command.c ****             break;
 745:./tmk_core/common/command.c ****         case KC_PGUP:
 746:./tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 747:./tmk_core/common/command.c ****             break;
 748:./tmk_core/common/command.c ****         case KC_PGDN:
 749:./tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 750:./tmk_core/common/command.c ****             break;
 751:./tmk_core/common/command.c ****         case KC_D:
 752:./tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 753:./tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 754:./tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 755:./tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 756:./tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 757:./tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 758:./tmk_core/common/command.c ****             print("set default\n");
 759:./tmk_core/common/command.c ****             break;
 760:./tmk_core/common/command.c ****         default:
 761:./tmk_core/common/command.c ****             print("?");
 762:./tmk_core/common/command.c ****             return false;
 763:./tmk_core/common/command.c ****     }
 764:./tmk_core/common/command.c ****     if (mousekey_param) {
 765:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 766:./tmk_core/common/command.c ****     } else {
 767:./tmk_core/common/command.c ****         print("M>" );
 768:./tmk_core/common/command.c ****     }
 769:./tmk_core/common/command.c ****     return true;
 770:./tmk_core/common/command.c **** }
 771:./tmk_core/common/command.c **** #endif
 772:./tmk_core/common/command.c **** 
 773:./tmk_core/common/command.c **** 
 774:./tmk_core/common/command.c **** /***********************************************************
 775:./tmk_core/common/command.c ****  * Utilities
 776:./tmk_core/common/command.c ****  ***********************************************************/
 777:./tmk_core/common/command.c **** uint8_t numkey2num(uint8_t code)
 778:./tmk_core/common/command.c **** {
 779:./tmk_core/common/command.c ****     switch (code) {
 780:./tmk_core/common/command.c ****         case KC_1: return 1;
 781:./tmk_core/common/command.c ****         case KC_2: return 2;
 782:./tmk_core/common/command.c ****         case KC_3: return 3;
 783:./tmk_core/common/command.c ****         case KC_4: return 4;
 784:./tmk_core/common/command.c ****         case KC_5: return 5;
 785:./tmk_core/common/command.c ****         case KC_6: return 6;
 786:./tmk_core/common/command.c ****         case KC_7: return 7;
 787:./tmk_core/common/command.c ****         case KC_8: return 8;
 788:./tmk_core/common/command.c ****         case KC_9: return 9;
 789:./tmk_core/common/command.c ****         case KC_0: return 0;
 790:./tmk_core/common/command.c ****     }
 791:./tmk_core/common/command.c ****     return 0;
 792:./tmk_core/common/command.c **** }
 793:./tmk_core/common/command.c **** 
 794:./tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 795:./tmk_core/common/command.c **** {
 682               		.loc 1 795 1 is_stmt 1 view -0
 683               		.cfi_startproc
 684               		.loc 1 795 1 is_stmt 0 view .LVU151
 685 0000 CF93      		push r28
 686               	.LCFI47:
 687               		.cfi_def_cfa_offset 3
 688               		.cfi_offset 28, -2
 689 0002 DF93      		push r29
 690               	.LCFI48:
 691               		.cfi_def_cfa_offset 4
 692               		.cfi_offset 29, -3
 693 0004 00D0      		rcall .
 694 0006 00D0      		rcall .
 695               	.LCFI49:
 696               		.cfi_def_cfa_offset 8
 697 0008 CDB7      		in r28,__SP_L__
 698 000a DEB7      		in r29,__SP_H__
 699               	.LCFI50:
 700               		.cfi_def_cfa_register 28
 701               	/* prologue: function */
 702               	/* frame size = 4 */
 703               	/* stack size = 6 */
 704               	.L__stack_usage = 6
 705 000c 8983      		std Y+1,r24
 796:./tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 706               		.loc 1 796 5 is_stmt 1 view .LVU152
 707               	.LBB29:
 708               		.loc 1 796 5 view .LVU153
 709               		.loc 1 796 5 view .LVU154
 710               	.LBE29:
 711 000e 1F92      		push __zero_reg__
 712 0010 8F93      		push r24
 713 0012 80E0      		ldi r24,lo8(__c.3549)
 714 0014 90E0      		ldi r25,hi8(__c.3549)
 715               	.LVL42:
 716               		.loc 1 796 5 is_stmt 0 view .LVU155
 717 0016 9F93      		push r25
 718 0018 8F93      		push r24
 719 001a 0E94 0000 		call __xprintf
 720               	.LVL43:
 797:./tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 721               		.loc 1 797 5 is_stmt 1 view .LVU156
 722 001e 81E0      		ldi r24,lo8(1)
 723 0020 90E0      		ldi r25,0
 724 0022 A0E0      		ldi r26,0
 725 0024 B0E0      		ldi r27,0
 726 0026 9C01      		movw r18,r24
 727 0028 AD01      		movw r20,r26
 728 002a 0980      		ldd r0,Y+1
 729 002c 00C0      		rjmp 2f
 730               		1:
 731 002e 220F      		lsl r18
 732 0030 331F      		rol r19
 733 0032 441F      		rol r20
 734 0034 551F      		rol r21
 735               		2:
 736 0036 0A94      		dec r0
 737 0038 02F4      		brpl 1b
 738 003a 2983      		std Y+1,r18
 739 003c 3A83      		std Y+2,r19
 740 003e 4B83      		std Y+3,r20
 741 0040 5C83      		std Y+4,r21
 742               	.LVL44:
 743               		.loc 1 797 5 is_stmt 0 view .LVU157
 744 0042 CA01      		movw r24,r20
 745 0044 B901      		movw r22,r18
 746 0046 0E94 0000 		call default_layer_set
 747               	.LVL45:
 798:./tmk_core/common/command.c ****     clear_keyboard();
 748               		.loc 1 798 5 is_stmt 1 view .LVU158
 749 004a 0F90      		pop __tmp_reg__
 750 004c 0F90      		pop __tmp_reg__
 751 004e 0F90      		pop __tmp_reg__
 752 0050 0F90      		pop __tmp_reg__
 753               	/* epilogue start */
 799:./tmk_core/common/command.c **** }
 754               		.loc 1 799 1 is_stmt 0 view .LVU159
 755 0052 0F90      		pop __tmp_reg__
 756 0054 0F90      		pop __tmp_reg__
 757 0056 0F90      		pop __tmp_reg__
 758 0058 0F90      		pop __tmp_reg__
 759 005a DF91      		pop r29
 760 005c CF91      		pop r28
 798:./tmk_core/common/command.c ****     clear_keyboard();
 761               		.loc 1 798 5 view .LVU160
 762 005e 0C94 0000 		jmp clear_keyboard
 763               	.LVL46:
 764               		.cfi_endproc
 765               	.LFE43:
 767               		.section	.text.command_common,"ax",@progbits
 769               	command_common:
 770               	.LFB34:
 307:./tmk_core/common/command.c **** 
 771               		.loc 1 307 1 is_stmt 1 view -0
 772               		.cfi_startproc
 773               	/* prologue: function */
 774               	/* frame size = 0 */
 775               	/* stack size = 0 */
 776               	.L__stack_usage = 0
 313:./tmk_core/common/command.c **** 
 777               		.loc 1 313 5 view .LVU162
 778 0000 8A32      		cpi r24,lo8(42)
 779 0002 00F4      		brsh .L48
 780 0004 8630      		cpi r24,lo8(6)
 781 0006 00F0      		brlo .L49
 782 0008 EAEF      		ldi r30,lo8(-6)
 783 000a E80F      		add r30,r24
 784 000c E432      		cpi r30,lo8(36)
 785 000e 00F4      		brsh .L49
 786 0010 F0E0      		ldi r31,0
 787 0012 E050      		subi r30,lo8(-(gs(.L51)))
 788 0014 F040      		sbci r31,hi8(-(gs(.L51)))
 789 0016 0C94 0000 		jmp __tablejump2__
 790               		.section	.jumptables.gcc.command_common,"a",@progbits
 791               		.p2align	1
 792               	.L51:
 793 0000 0000      		.word gs(.L60)
 794 0002 0000      		.word gs(.L59)
 795 0004 0000      		.word gs(.L49)
 796 0006 0000      		.word gs(.L49)
 797 0008 0000      		.word gs(.L49)
 798 000a 0000      		.word gs(.L58)
 799 000c 0000      		.word gs(.L49)
 800 000e 0000      		.word gs(.L49)
 801 0010 0000      		.word gs(.L57)
 802 0012 0000      		.word gs(.L49)
 803 0014 0000      		.word gs(.L56)
 804 0016 0000      		.word gs(.L49)
 805 0018 0000      		.word gs(.L49)
 806 001a 0000      		.word gs(.L49)
 807 001c 0000      		.word gs(.L49)
 808 001e 0000      		.word gs(.L49)
 809 0020 0000      		.word gs(.L55)
 810 0022 0000      		.word gs(.L49)
 811 0024 0000      		.word gs(.L49)
 812 0026 0000      		.word gs(.L54)
 813 0028 0000      		.word gs(.L49)
 814 002a 0000      		.word gs(.L53)
 815 002c 0000      		.word gs(.L49)
 816 002e 0000      		.word gs(.L49)
 817 0030 0000      		.word gs(.L52)
 818 0032 0000      		.word gs(.L52)
 819 0034 0000      		.word gs(.L52)
 820 0036 0000      		.word gs(.L52)
 821 0038 0000      		.word gs(.L52)
 822 003a 0000      		.word gs(.L52)
 823 003c 0000      		.word gs(.L52)
 824 003e 0000      		.word gs(.L52)
 825 0040 0000      		.word gs(.L52)
 826 0042 0000      		.word gs(.L50)
 827 0044 0000      		.word gs(.L49)
 828 0046 0000      		.word gs(.L50)
 829               		.section	.text.command_common
 830               	.L48:
 831 001a 8334      		cpi r24,lo8(67)
 832 001c 00F4      		brsh .L61
 833 001e 8A33      		cpi r24,lo8(58)
 834 0020 00F0      		brlo .+2
 835 0022 00C0      		rjmp .L62
 836 0024 8533      		cpi r24,lo8(53)
 837 0026 01F4      		brne .+2
 838 0028 00C0      		rjmp .L50
 839 002a 8833      		cpi r24,lo8(56)
 840 002c 01F0      		breq .L58
 841               	.L49:
 522:./tmk_core/common/command.c ****             return false;
 842               		.loc 1 522 13 view .LVU163
 843               	.LBB64:
 522:./tmk_core/common/command.c ****             return false;
 844               		.loc 1 522 13 view .LVU164
 522:./tmk_core/common/command.c ****             return false;
 845               		.loc 1 522 13 view .LVU165
 846               	.LBE64:
 847 002e 80E0      		ldi r24,lo8(__c.3384)
 848 0030 90E0      		ldi r25,hi8(__c.3384)
 849 0032 0E94 0000 		call xputs
 523:./tmk_core/common/command.c ****     }
 850               		.loc 1 523 13 view .LVU166
 523:./tmk_core/common/command.c ****     }
 851               		.loc 1 523 20 is_stmt 0 view .LVU167
 852 0036 80E0      		ldi r24,0
 853               	/* epilogue start */
 526:./tmk_core/common/command.c **** 
 854               		.loc 1 526 1 view .LVU168
 855 0038 0895      		ret
 856               	.L61:
 313:./tmk_core/common/command.c **** 
 857               		.loc 1 313 5 view .LVU169
 858 003a 8334      		cpi r24,lo8(67)
 859 003c 01F4      		brne .+2
 860 003e 00C0      		rjmp .L50
 861 0040 8834      		cpi r24,lo8(72)
 862 0042 01F4      		brne .L49
 369:./tmk_core/common/command.c ****             print("\n\nJumping to bootloader... ");
 863               		.loc 1 369 13 is_stmt 1 view .LVU170
 864 0044 0E94 0000 		call clear_keyboard
 370:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 865               		.loc 1 370 13 view .LVU171
 866               	.LBB65:
 370:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 867               		.loc 1 370 13 view .LVU172
 370:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 868               		.loc 1 370 13 view .LVU173
 869               	.LBE65:
 870 0048 80E0      		ldi r24,lo8(__c.3353)
 871 004a 90E0      		ldi r25,hi8(__c.3353)
 872 004c 0E94 0000 		call xputs
 375:./tmk_core/common/command.c ****             #endif
 873               		.loc 1 375 14 view .LVU174
 874               	.LBB66:
 875               	.LBI66:
 876               		.file 2 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** _delay_ms(double __ms)
 877               		.loc 2 166 1 view .LVU175
 878               	.LBB67:
 167:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	double __tmp ;
 879               		.loc 2 168 2 view .LVU176
 169:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 880               		.loc 2 172 2 view .LVU177
 173:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 881               		.loc 2 173 2 view .LVU178
 174:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 882               		.loc 2 174 2 view .LVU179
 175:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 883               		.loc 2 184 3 view .LVU180
 185:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 884               		.loc 2 187 2 view .LVU181
 885 0050 2FEF      		ldi r18,lo8(3199999)
 886 0052 83ED      		ldi r24,hi8(3199999)
 887 0054 90E3      		ldi r25,hlo8(3199999)
 888 0056 2150      	1:	subi r18,1
 889 0058 8040      		sbci r24,0
 890 005a 9040      		sbci r25,0
 891 005c 01F4      		brne 1b
 892 005e 00C0      		rjmp .
 893 0060 0000      		nop
 894               	.LBE67:
 895               	.LBE66:
 377:./tmk_core/common/command.c ****             break;
 896               		.loc 1 377 13 view .LVU182
 897 0062 0E94 0000 		call bootloader_jump
 898               	.L78:
 378:./tmk_core/common/command.c **** 
 899               		.loc 1 378 13 view .LVU183
 525:./tmk_core/common/command.c **** }
 900               		.loc 1 525 12 is_stmt 0 view .LVU184
 901 0066 81E0      		ldi r24,lo8(1)
 378:./tmk_core/common/command.c **** 
 902               		.loc 1 378 13 view .LVU185
 903 0068 0895      		ret
 904               	.L58:
 353:./tmk_core/common/command.c ****             break;
 905               		.loc 1 353 13 is_stmt 1 view .LVU186
 906               	.LBB68:
 907               	.LBI68:
 122:./tmk_core/common/command.c **** {
 908               		.loc 1 122 13 view .LVU187
 909               	.LBB69:
 124:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 910               		.loc 1 124 2 view .LVU188
 911               	.LBE69:
 912               	.LBE68:
 124:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 913               		.loc 1 124 2 view .LVU189
 124:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 914               		.loc 1 124 2 view .LVU190
 915               	.LBB71:
 916               	.LBB70:
 917 006a 80E0      		ldi r24,lo8(__c.3313)
 918 006c 90E0      		ldi r25,hi8(__c.3313)
 919               	.L79:
 920               	.LBE70:
 921               	.LBE71:
 922               	.LBB72:
 923               	.LBB73:
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 924               		.loc 1 222 5 is_stmt 0 view .LVU191
 925 006e 0E94 0000 		call xputs
 229:./tmk_core/common/command.c **** }
 926               		.loc 1 229 2 is_stmt 1 view .LVU192
 927 0072 00C0      		rjmp .L78
 928               	.L60:
 929               	.LBE73:
 930               	.LBE72:
 358:./tmk_core/common/command.c ****             debug_keyboard = false;
 931               		.loc 1 358 13 view .LVU193
 359:./tmk_core/common/command.c ****             debug_mouse    = false;
 932               		.loc 1 359 13 view .LVU194
 360:./tmk_core/common/command.c ****             debug_enable   = false;
 933               		.loc 1 360 13 view .LVU195
 361:./tmk_core/common/command.c ****             command_console_help();
 934               		.loc 1 361 13 view .LVU196
 361:./tmk_core/common/command.c ****             command_console_help();
 935               		.loc 1 361 28 is_stmt 0 view .LVU197
 936 0074 8091 0000 		lds r24,debug_config
 937 0078 807F      		andi r24,lo8(-16)
 938 007a 8093 0000 		sts debug_config,r24
 362:./tmk_core/common/command.c ****             print("C> ");
 939               		.loc 1 362 13 is_stmt 1 view .LVU198
 940               	.LBB81:
 941               	.LBI81:
 532:./tmk_core/common/command.c **** {
 942               		.loc 1 532 13 view .LVU199
 943               	.LBB82:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 944               		.loc 1 534 5 view .LVU200
 945               	.LBE82:
 946               	.LBE81:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 947               		.loc 1 534 5 view .LVU201
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 948               		.loc 1 534 5 view .LVU202
 949               	.LBB84:
 950               	.LBB83:
 951 007e 80E0      		ldi r24,lo8(__c.3389)
 952 0080 90E0      		ldi r25,hi8(__c.3389)
 953 0082 0E94 0000 		call xputs
 954               	.LBE83:
 955               	.LBE84:
 363:./tmk_core/common/command.c ****             command_state = CONSOLE;
 956               		.loc 1 363 13 view .LVU203
 957               	.LBB85:
 363:./tmk_core/common/command.c ****             command_state = CONSOLE;
 958               		.loc 1 363 13 view .LVU204
 363:./tmk_core/common/command.c ****             command_state = CONSOLE;
 959               		.loc 1 363 13 view .LVU205
 960               	.LBE85:
 961 0086 80E0      		ldi r24,lo8(__c.3350)
 962 0088 90E0      		ldi r25,hi8(__c.3350)
 963 008a 0E94 0000 		call xputs
 364:./tmk_core/common/command.c ****             break;
 964               		.loc 1 364 13 view .LVU206
 364:./tmk_core/common/command.c ****             break;
 965               		.loc 1 364 27 is_stmt 0 view .LVU207
 966 008e 81E0      		ldi r24,lo8(1)
 967 0090 8093 0000 		sts command_state,r24
 365:./tmk_core/common/command.c **** 
 968               		.loc 1 365 13 is_stmt 1 view .LVU208
 969 0094 0895      		ret
 970               	.L59:
 382:./tmk_core/common/command.c ****             if (debug_enable) {
 971               		.loc 1 382 13 view .LVU209
 382:./tmk_core/common/command.c ****             if (debug_enable) {
 972               		.loc 1 382 29 is_stmt 0 view .LVU210
 973 0096 9091 0000 		lds r25,debug_config
 382:./tmk_core/common/command.c ****             if (debug_enable) {
 974               		.loc 1 382 26 view .LVU211
 975 009a 892F      		mov r24,r25
 976 009c 8E7F      		andi r24,~(1<<0)
 977 009e 90FF      		sbrs r25,0
 978 00a0 8160      		ori r24,1<<0
 979 00a2 8093 0000 		sts debug_config,r24
 383:./tmk_core/common/command.c ****                 print("\ndebug: on\n");
 980               		.loc 1 383 13 is_stmt 1 view .LVU212
 383:./tmk_core/common/command.c ****                 print("\ndebug: on\n");
 981               		.loc 1 383 16 is_stmt 0 view .LVU213
 982 00a6 80FF      		sbrs r24,0
 983 00a8 00C0      		rjmp .L65
 384:./tmk_core/common/command.c ****             } else {
 984               		.loc 1 384 17 is_stmt 1 view .LVU214
 985               	.LBB86:
 384:./tmk_core/common/command.c ****             } else {
 986               		.loc 1 384 17 view .LVU215
 384:./tmk_core/common/command.c ****             } else {
 987               		.loc 1 384 17 view .LVU216
 988               	.LBE86:
 989 00aa 80E0      		ldi r24,lo8(__c.3356)
 990 00ac 90E0      		ldi r25,hi8(__c.3356)
 991 00ae 00C0      		rjmp .L79
 992               	.L65:
 386:./tmk_core/common/command.c ****                 debug_matrix   = false;
 993               		.loc 1 386 17 view .LVU217
 994               	.LBB87:
 386:./tmk_core/common/command.c ****                 debug_matrix   = false;
 995               		.loc 1 386 17 view .LVU218
 386:./tmk_core/common/command.c ****                 debug_matrix   = false;
 996               		.loc 1 386 17 view .LVU219
 997               	.LBE87:
 998 00b0 80E0      		ldi r24,lo8(__c.3358)
 999 00b2 90E0      		ldi r25,hi8(__c.3358)
 1000 00b4 0E94 0000 		call xputs
 387:./tmk_core/common/command.c ****                 debug_keyboard = false;
 1001               		.loc 1 387 17 view .LVU220
 388:./tmk_core/common/command.c ****                 debug_mouse    = false;
 1002               		.loc 1 388 17 view .LVU221
 389:./tmk_core/common/command.c ****             }
 1003               		.loc 1 389 17 view .LVU222
 387:./tmk_core/common/command.c ****                 debug_keyboard = false;
 1004               		.loc 1 387 32 is_stmt 0 view .LVU223
 1005 00b8 8091 0000 		lds r24,debug_config
 1006 00bc 817F      		andi r24,lo8(-15)
 1007               	.L80:
 420:./tmk_core/common/command.c ****             } else {
 1008               		.loc 1 420 30 view .LVU224
 1009 00be 8093 0000 		sts debug_config,r24
 1010 00c2 00C0      		rjmp .L78
 1011               	.L53:
 395:./tmk_core/common/command.c ****             if (debug_matrix) {
 1012               		.loc 1 395 13 is_stmt 1 view .LVU225
 395:./tmk_core/common/command.c ****             if (debug_matrix) {
 1013               		.loc 1 395 29 is_stmt 0 view .LVU226
 1014 00c4 9091 0000 		lds r25,debug_config
 395:./tmk_core/common/command.c ****             if (debug_matrix) {
 1015               		.loc 1 395 26 view .LVU227
 1016 00c8 892F      		mov r24,r25
 1017 00ca 8D7F      		andi r24,~(1<<1)
 1018 00cc 91FF      		sbrs r25,1
 1019 00ce 8260      		ori r24,1<<1
 1020 00d0 8093 0000 		sts debug_config,r24
 396:./tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1021               		.loc 1 396 13 is_stmt 1 view .LVU228
 396:./tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 1022               		.loc 1 396 16 is_stmt 0 view .LVU229
 1023 00d4 81FF      		sbrs r24,1
 1024 00d6 00C0      		rjmp .L66
 397:./tmk_core/common/command.c ****                 debug_enable = true;
 1025               		.loc 1 397 17 is_stmt 1 view .LVU230
 1026               	.LBB88:
 397:./tmk_core/common/command.c ****                 debug_enable = true;
 1027               		.loc 1 397 17 view .LVU231
 397:./tmk_core/common/command.c ****                 debug_enable = true;
 1028               		.loc 1 397 17 view .LVU232
 1029               	.LBE88:
 1030 00d8 80E0      		ldi r24,lo8(__c.3361)
 1031 00da 90E0      		ldi r25,hi8(__c.3361)
 1032               	.L81:
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 1033               		.loc 1 419 17 is_stmt 0 view .LVU233
 1034 00dc 0E94 0000 		call xputs
 420:./tmk_core/common/command.c ****             } else {
 1035               		.loc 1 420 17 is_stmt 1 view .LVU234
 420:./tmk_core/common/command.c ****             } else {
 1036               		.loc 1 420 30 is_stmt 0 view .LVU235
 1037 00e0 8091 0000 		lds r24,debug_config
 1038 00e4 8160      		ori r24,lo8(1<<0)
 1039 00e6 00C0      		rjmp .L80
 1040               	.L66:
 400:./tmk_core/common/command.c ****             }
 1041               		.loc 1 400 17 is_stmt 1 view .LVU236
 1042               	.LBB89:
 400:./tmk_core/common/command.c ****             }
 1043               		.loc 1 400 17 view .LVU237
 400:./tmk_core/common/command.c ****             }
 1044               		.loc 1 400 17 view .LVU238
 1045               	.LBE89:
 1046 00e8 80E0      		ldi r24,lo8(__c.3363)
 1047 00ea 90E0      		ldi r25,hi8(__c.3363)
 1048 00ec 00C0      		rjmp .L79
 1049               	.L57:
 406:./tmk_core/common/command.c ****             if (debug_keyboard) {
 1050               		.loc 1 406 13 view .LVU239
 406:./tmk_core/common/command.c ****             if (debug_keyboard) {
 1051               		.loc 1 406 31 is_stmt 0 view .LVU240
 1052 00ee 9091 0000 		lds r25,debug_config
 406:./tmk_core/common/command.c ****             if (debug_keyboard) {
 1053               		.loc 1 406 28 view .LVU241
 1054 00f2 892F      		mov r24,r25
 1055 00f4 8B7F      		andi r24,~(1<<2)
 1056 00f6 92FF      		sbrs r25,2
 1057 00f8 8460      		ori r24,1<<2
 1058 00fa 8093 0000 		sts debug_config,r24
 407:./tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1059               		.loc 1 407 13 is_stmt 1 view .LVU242
 407:./tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1060               		.loc 1 407 16 is_stmt 0 view .LVU243
 1061 00fe 82FF      		sbrs r24,2
 1062 0100 00C0      		rjmp .L67
 408:./tmk_core/common/command.c ****                 debug_enable = true;
 1063               		.loc 1 408 17 is_stmt 1 view .LVU244
 1064               	.LBB90:
 408:./tmk_core/common/command.c ****                 debug_enable = true;
 1065               		.loc 1 408 17 view .LVU245
 408:./tmk_core/common/command.c ****                 debug_enable = true;
 1066               		.loc 1 408 17 view .LVU246
 1067               	.LBE90:
 1068 0102 80E0      		ldi r24,lo8(__c.3366)
 1069 0104 90E0      		ldi r25,hi8(__c.3366)
 1070 0106 00C0      		rjmp .L81
 1071               	.L67:
 411:./tmk_core/common/command.c ****             }
 1072               		.loc 1 411 17 view .LVU247
 1073               	.LBB91:
 411:./tmk_core/common/command.c ****             }
 1074               		.loc 1 411 17 view .LVU248
 411:./tmk_core/common/command.c ****             }
 1075               		.loc 1 411 17 view .LVU249
 1076               	.LBE91:
 1077 0108 80E0      		ldi r24,lo8(__c.3368)
 1078 010a 90E0      		ldi r25,hi8(__c.3368)
 1079 010c 00C0      		rjmp .L79
 1080               	.L56:
 417:./tmk_core/common/command.c ****             if (debug_mouse) {
 1081               		.loc 1 417 13 view .LVU250
 417:./tmk_core/common/command.c ****             if (debug_mouse) {
 1082               		.loc 1 417 28 is_stmt 0 view .LVU251
 1083 010e 9091 0000 		lds r25,debug_config
 417:./tmk_core/common/command.c ****             if (debug_mouse) {
 1084               		.loc 1 417 25 view .LVU252
 1085 0112 892F      		mov r24,r25
 1086 0114 877F      		andi r24,~(1<<3)
 1087 0116 93FF      		sbrs r25,3
 1088 0118 8860      		ori r24,1<<3
 1089 011a 8093 0000 		sts debug_config,r24
 418:./tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1090               		.loc 1 418 13 is_stmt 1 view .LVU253
 418:./tmk_core/common/command.c ****                 print("\nmouse: on\n");
 1091               		.loc 1 418 16 is_stmt 0 view .LVU254
 1092 011e 83FF      		sbrs r24,3
 1093 0120 00C0      		rjmp .L68
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 1094               		.loc 1 419 17 is_stmt 1 view .LVU255
 1095               	.LBB92:
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 1096               		.loc 1 419 17 view .LVU256
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 1097               		.loc 1 419 17 view .LVU257
 1098               	.LBE92:
 1099 0122 80E0      		ldi r24,lo8(__c.3371)
 1100 0124 90E0      		ldi r25,hi8(__c.3371)
 1101 0126 00C0      		rjmp .L81
 1102               	.L68:
 422:./tmk_core/common/command.c ****             }
 1103               		.loc 1 422 5 view .LVU258
 1104               	.LBB93:
 422:./tmk_core/common/command.c ****             }
 1105               		.loc 1 422 5 view .LVU259
 422:./tmk_core/common/command.c ****             }
 1106               		.loc 1 422 5 view .LVU260
 1107               	.LBE93:
 1108 0128 80E0      		ldi r24,lo8(__c.3373)
 1109 012a 90E0      		ldi r25,hi8(__c.3373)
 1110 012c 00C0      		rjmp .L79
 1111               	.L54:
 428:./tmk_core/common/command.c **** 		    break;
 1112               		.loc 1 428 10 view .LVU261
 1113               	.LBB94:
 1114               	.LBI72:
 176:./tmk_core/common/command.c **** {
 1115               		.loc 1 176 13 view .LVU262
 1116               	.LBB74:
 179:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1117               		.loc 1 179 5 view .LVU263
 1118               	.LBE74:
 1119               	.LBE94:
 179:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1120               		.loc 1 179 5 view .LVU264
 179:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1121               		.loc 1 179 5 view .LVU265
 1122               	.LBB95:
 1123               	.LBB75:
 1124 012e 80E0      		ldi r24,lo8(__c.3318)
 1125 0130 90E0      		ldi r25,hi8(__c.3318)
 1126 0132 0E94 0000 		call xputs
 180:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1127               		.loc 1 180 5 view .LVU266
 1128               	.LBE75:
 1129               	.LBE95:
 180:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1130               		.loc 1 180 5 view .LVU267
 180:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1131               		.loc 1 180 5 view .LVU268
 1132               	.LBB96:
 1133               	.LBB76:
 1134 0136 80E0      		ldi r24,lo8(__c.3320)
 1135 0138 90E0      		ldi r25,hi8(__c.3320)
 1136 013a 0E94 0000 		call xputs
 181:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1137               		.loc 1 181 5 view .LVU269
 1138               	.LBE76:
 1139               	.LBE96:
 181:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1140               		.loc 1 181 5 view .LVU270
 181:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1141               		.loc 1 181 5 view .LVU271
 1142               	.LBB97:
 1143               	.LBB77:
 1144 013e 80E0      		ldi r24,lo8(__c.3322)
 1145 0140 90E0      		ldi r25,hi8(__c.3322)
 1146 0142 0E94 0000 		call xputs
 184:./tmk_core/common/command.c **** 
 1147               		.loc 1 184 5 view .LVU272
 1148               	.LBE77:
 1149               	.LBE97:
 184:./tmk_core/common/command.c **** 
 1150               		.loc 1 184 5 view .LVU273
 184:./tmk_core/common/command.c **** 
 1151               		.loc 1 184 5 view .LVU274
 1152               	.LBB98:
 1153               	.LBB78:
 1154 0146 80E0      		ldi r24,lo8(__c.3324)
 1155 0148 90E0      		ldi r25,hi8(__c.3324)
 1156 014a 0E94 0000 		call xputs
 187:./tmk_core/common/command.c **** 
 1157               		.loc 1 187 5 view .LVU275
 1158               	.LBE78:
 1159               	.LBE98:
 187:./tmk_core/common/command.c **** 
 1160               		.loc 1 187 5 view .LVU276
 187:./tmk_core/common/command.c **** 
 1161               		.loc 1 187 5 view .LVU277
 1162               	.LBB99:
 1163               	.LBB79:
 1164 014e 80E0      		ldi r24,lo8(__c.3326)
 1165 0150 90E0      		ldi r25,hi8(__c.3326)
 1166 0152 0E94 0000 		call xputs
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 1167               		.loc 1 222 5 view .LVU278
 1168               	.LBE79:
 1169               	.LBE99:
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 1170               		.loc 1 222 5 view .LVU279
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 1171               		.loc 1 222 5 view .LVU280
 1172               	.LBB100:
 1173               	.LBB80:
 1174 0156 80E0      		ldi r24,lo8(__c.3328)
 1175 0158 90E0      		ldi r25,hi8(__c.3328)
 1176 015a 00C0      		rjmp .L79
 1177               	.L55:
 1178               	.LBE80:
 1179               	.LBE100:
 433:./tmk_core/common/command.c ****             break;
 1180               		.loc 1 433 4 view .LVU281
 1181               	.LBB101:
 1182               	.LBI101:
 232:./tmk_core/common/command.c **** {
 1183               		.loc 1 232 13 view .LVU282
 1184               	.LBB102:
 235:./tmk_core/common/command.c **** 
 1185               		.loc 1 235 5 view .LVU283
 1186               	.LBE102:
 1187               	.LBE101:
 235:./tmk_core/common/command.c **** 
 1188               		.loc 1 235 5 view .LVU284
 235:./tmk_core/common/command.c **** 
 1189               		.loc 1 235 5 view .LVU285
 1190               	.LBB108:
 1191               	.LBB103:
 1192 015c 80E0      		ldi r24,lo8(__c.3333)
 1193 015e 90E0      		ldi r25,hi8(__c.3333)
 1194 0160 0E94 0000 		call xputs
 237:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 1195               		.loc 1 237 5 view .LVU286
 1196 0164 0E94 0000 		call host_keyboard_leds
 1197               	.LBE103:
 1198               	.LBE108:
 237:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 1199               		.loc 1 237 5 view .LVU287
 237:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 1200               		.loc 1 237 5 view .LVU288
 1201               	.LBB109:
 1202               	.LBB104:
 1203 0168 1F92      		push __zero_reg__
 1204               	.LCFI51:
 1205               		.cfi_def_cfa_offset 3
 1206 016a 8F93      		push r24
 1207               	.LCFI52:
 1208               		.cfi_def_cfa_offset 4
 1209 016c 80E0      		ldi r24,lo8(__c.3335)
 1210 016e 90E0      		ldi r25,hi8(__c.3335)
 1211 0170 9F93      		push r25
 1212               	.LCFI53:
 1213               		.cfi_def_cfa_offset 5
 1214 0172 8F93      		push r24
 1215               	.LCFI54:
 1216               		.cfi_def_cfa_offset 6
 1217 0174 0E94 0000 		call __xprintf
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 1218               		.loc 1 240 5 view .LVU289
 1219               	.LBE104:
 1220               	.LBE109:
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 1221               		.loc 1 240 5 view .LVU290
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 1222               		.loc 1 240 5 view .LVU291
 1223               	.LBB110:
 1224               	.LBB105:
 1225 0178 8091 0000 		lds r24,keyboard_protocol
 1226 017c 1F92      		push __zero_reg__
 1227               	.LCFI55:
 1228               		.cfi_def_cfa_offset 7
 1229 017e 8F93      		push r24
 1230               	.LCFI56:
 1231               		.cfi_def_cfa_offset 8
 1232 0180 80E0      		ldi r24,lo8(__c.3337)
 1233 0182 90E0      		ldi r25,hi8(__c.3337)
 1234 0184 9F93      		push r25
 1235               	.LCFI57:
 1236               		.cfi_def_cfa_offset 9
 1237 0186 8F93      		push r24
 1238               	.LCFI58:
 1239               		.cfi_def_cfa_offset 10
 1240 0188 0E94 0000 		call __xprintf
 241:./tmk_core/common/command.c **** #endif
 1241               		.loc 1 241 5 view .LVU292
 1242               	.LBE105:
 1243               	.LBE110:
 241:./tmk_core/common/command.c **** #endif
 1244               		.loc 1 241 5 view .LVU293
 241:./tmk_core/common/command.c **** #endif
 1245               		.loc 1 241 5 view .LVU294
 1246               	.LBB111:
 1247               	.LBB106:
 1248 018c 8091 0000 		lds r24,keyboard_idle
 1249 0190 1F92      		push __zero_reg__
 1250               	.LCFI59:
 1251               		.cfi_def_cfa_offset 11
 1252 0192 8F93      		push r24
 1253               	.LCFI60:
 1254               		.cfi_def_cfa_offset 12
 1255 0194 80E0      		ldi r24,lo8(__c.3339)
 1256 0196 90E0      		ldi r25,hi8(__c.3339)
 1257 0198 9F93      		push r25
 1258               	.LCFI61:
 1259               		.cfi_def_cfa_offset 13
 1260 019a 8F93      		push r24
 1261               	.LCFI62:
 1262               		.cfi_def_cfa_offset 14
 1263 019c 0E94 0000 		call __xprintf
 246:./tmk_core/common/command.c **** 
 1264               		.loc 1 246 5 view .LVU295
 1265 01a0 0E94 0000 		call timer_read32
 1266               	.LBE106:
 1267               	.LBE111:
 246:./tmk_core/common/command.c **** 
 1268               		.loc 1 246 5 view .LVU296
 246:./tmk_core/common/command.c **** 
 1269               		.loc 1 246 5 view .LVU297
 1270               	.LBB112:
 1271               	.LBB107:
 1272 01a4 9F93      		push r25
 1273               	.LCFI63:
 1274               		.cfi_def_cfa_offset 15
 1275 01a6 8F93      		push r24
 1276               	.LCFI64:
 1277               		.cfi_def_cfa_offset 16
 1278 01a8 7F93      		push r23
 1279               	.LCFI65:
 1280               		.cfi_def_cfa_offset 17
 1281 01aa 6F93      		push r22
 1282               	.LCFI66:
 1283               		.cfi_def_cfa_offset 18
 1284 01ac 80E0      		ldi r24,lo8(__c.3341)
 1285 01ae 90E0      		ldi r25,hi8(__c.3341)
 1286 01b0 9F93      		push r25
 1287               	.LCFI67:
 1288               		.cfi_def_cfa_offset 19
 1289 01b2 8F93      		push r24
 1290               	.LCFI68:
 1291               		.cfi_def_cfa_offset 20
 1292 01b4 0E94 0000 		call __xprintf
 261:./tmk_core/common/command.c **** }
 1293               		.loc 1 261 2 view .LVU298
 1294 01b8 8DB7      		in r24,__SP_L__
 1295 01ba 9EB7      		in r25,__SP_H__
 1296 01bc 4296      		adiw r24,18
 1297 01be 0FB6      		in __tmp_reg__,__SREG__
 1298 01c0 F894      		cli
 1299 01c2 9EBF      		out __SP_H__,r25
 1300 01c4 0FBE      		out __SREG__,__tmp_reg__
 1301 01c6 8DBF      		out __SP_L__,r24
 1302               	.LCFI69:
 1303               		.cfi_def_cfa_offset 2
 1304 01c8 00C0      		rjmp .L78
 1305               	.L50:
 1306               	.LBE107:
 1307               	.LBE112:
 454:./tmk_core/common/command.c ****             break;
 1308               		.loc 1 454 13 view .LVU299
 1309 01ca 80E0      		ldi r24,0
 1310               	.L82:
 514:./tmk_core/common/command.c ****             break;
 1311               		.loc 1 514 13 is_stmt 0 view .LVU300
 1312 01cc 0E94 0000 		call switch_default_layer
 515:./tmk_core/common/command.c ****         case KC_0:
 1313               		.loc 1 515 13 is_stmt 1 view .LVU301
 1314 01d0 00C0      		rjmp .L78
 1315               	.L62:
 504:./tmk_core/common/command.c ****             break;
 1316               		.loc 1 504 13 view .LVU302
 1317 01d2 8953      		subi r24,lo8(-(-57))
 1318 01d4 00C0      		rjmp .L82
 1319               	.L52:
 514:./tmk_core/common/command.c ****             break;
 1320               		.loc 1 514 13 view .LVU303
 1321 01d6 8D51      		subi r24,lo8(-(-29))
 1322 01d8 00C0      		rjmp .L82
 1323               		.cfi_endproc
 1324               	.LFE34:
 1326               		.section	.text.rgblight_toggle,"ax",@progbits
 1327               		.weak	rgblight_toggle
 1329               	rgblight_toggle:
 1330               	.LFB13:
 1331               		.file 3 "./quantum/rgb.h"
   1:./quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:./quantum/rgb.h ****  *
   3:./quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:./quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:./quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:./quantum/rgb.h ****  * (at your option) any later version.
   7:./quantum/rgb.h ****  *
   8:./quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:./quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:./quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:./quantum/rgb.h ****  * GNU General Public License for more details.
  12:./quantum/rgb.h ****  *
  13:./quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:./quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:./quantum/rgb.h ****  */
  16:./quantum/rgb.h **** 
  17:./quantum/rgb.h **** #ifndef RGB_H
  18:./quantum/rgb.h **** #define RGB_H
  19:./quantum/rgb.h **** 
  20:./quantum/rgb.h **** __attribute__((weak))
  21:./quantum/rgb.h **** void rgblight_toggle(void) {};
 1332               		.loc 3 21 28 view -0
 1333               		.cfi_startproc
 1334               	/* prologue: function */
 1335               	/* frame size = 0 */
 1336               	/* stack size = 0 */
 1337               	.L__stack_usage = 0
 1338               		.loc 3 21 29 view .LVU305
 1339               	/* epilogue start */
 1340               		.loc 3 21 1 is_stmt 0 view .LVU306
 1341 0000 0895      		ret
 1342               		.cfi_endproc
 1343               	.LFE13:
 1345               		.section	.text.rgblight_step,"ax",@progbits
 1346               		.weak	rgblight_step
 1348               	rgblight_step:
 1349               	.LFB47:
 1350               		.cfi_startproc
 1351               	/* prologue: function */
 1352               	/* frame size = 0 */
 1353               	/* stack size = 0 */
 1354               	.L__stack_usage = 0
 1355               	/* epilogue start */
 1356 0000 0895      		ret
 1357               		.cfi_endproc
 1358               	.LFE47:
 1360               		.section	.text.rgblight_step_reverse,"ax",@progbits
 1361               		.weak	rgblight_step_reverse
 1363               	rgblight_step_reverse:
 1364               	.LFB49:
 1365               		.cfi_startproc
 1366               	/* prologue: function */
 1367               	/* frame size = 0 */
 1368               	/* stack size = 0 */
 1369               	.L__stack_usage = 0
 1370               	/* epilogue start */
 1371 0000 0895      		ret
 1372               		.cfi_endproc
 1373               	.LFE49:
 1375               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1376               		.weak	rgblight_increase_hue
 1378               	rgblight_increase_hue:
 1379               	.LFB51:
 1380               		.cfi_startproc
 1381               	/* prologue: function */
 1382               	/* frame size = 0 */
 1383               	/* stack size = 0 */
 1384               	.L__stack_usage = 0
 1385               	/* epilogue start */
 1386 0000 0895      		ret
 1387               		.cfi_endproc
 1388               	.LFE51:
 1390               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1391               		.weak	rgblight_decrease_hue
 1393               	rgblight_decrease_hue:
 1394               	.LFB53:
 1395               		.cfi_startproc
 1396               	/* prologue: function */
 1397               	/* frame size = 0 */
 1398               	/* stack size = 0 */
 1399               	.L__stack_usage = 0
 1400               	/* epilogue start */
 1401 0000 0895      		ret
 1402               		.cfi_endproc
 1403               	.LFE53:
 1405               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1406               		.weak	rgblight_increase_sat
 1408               	rgblight_increase_sat:
 1409               	.LFB55:
 1410               		.cfi_startproc
 1411               	/* prologue: function */
 1412               	/* frame size = 0 */
 1413               	/* stack size = 0 */
 1414               	.L__stack_usage = 0
 1415               	/* epilogue start */
 1416 0000 0895      		ret
 1417               		.cfi_endproc
 1418               	.LFE55:
 1420               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1421               		.weak	rgblight_decrease_sat
 1423               	rgblight_decrease_sat:
 1424               	.LFB57:
 1425               		.cfi_startproc
 1426               	/* prologue: function */
 1427               	/* frame size = 0 */
 1428               	/* stack size = 0 */
 1429               	.L__stack_usage = 0
 1430               	/* epilogue start */
 1431 0000 0895      		ret
 1432               		.cfi_endproc
 1433               	.LFE57:
 1435               		.section	.text.rgblight_increase_val,"ax",@progbits
 1436               		.weak	rgblight_increase_val
 1438               	rgblight_increase_val:
 1439               	.LFB59:
 1440               		.cfi_startproc
 1441               	/* prologue: function */
 1442               	/* frame size = 0 */
 1443               	/* stack size = 0 */
 1444               	.L__stack_usage = 0
 1445               	/* epilogue start */
 1446 0000 0895      		ret
 1447               		.cfi_endproc
 1448               	.LFE59:
 1450               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1451               		.weak	rgblight_decrease_val
 1453               	rgblight_decrease_val:
 1454               	.LFB61:
 1455               		.cfi_startproc
 1456               	/* prologue: function */
 1457               	/* frame size = 0 */
 1458               	/* stack size = 0 */
 1459               	.L__stack_usage = 0
 1460               	/* epilogue start */
 1461 0000 0895      		ret
 1462               		.cfi_endproc
 1463               	.LFE61:
 1465               		.section	.text.rgblight_increase_speed,"ax",@progbits
 1466               		.weak	rgblight_increase_speed
 1468               	rgblight_increase_speed:
 1469               	.LFB63:
 1470               		.cfi_startproc
 1471               	/* prologue: function */
 1472               	/* frame size = 0 */
 1473               	/* stack size = 0 */
 1474               	.L__stack_usage = 0
 1475               	/* epilogue start */
 1476 0000 0895      		ret
 1477               		.cfi_endproc
 1478               	.LFE63:
 1480               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 1481               		.weak	rgblight_decrease_speed
 1483               	rgblight_decrease_speed:
 1484               	.LFB65:
 1485               		.cfi_startproc
 1486               	/* prologue: function */
 1487               	/* frame size = 0 */
 1488               	/* stack size = 0 */
 1489               	.L__stack_usage = 0
 1490               	/* epilogue start */
 1491 0000 0895      		ret
 1492               		.cfi_endproc
 1493               	.LFE65:
 1495               		.section	.text.command_extra,"ax",@progbits
 1496               		.weak	command_extra
 1498               	command_extra:
 1499               	.LVL47:
 1500               	.LFB29:
 106:./tmk_core/common/command.c ****     (void)code;
 1501               		.loc 1 106 1 is_stmt 1 view -0
 1502               		.cfi_startproc
 1503               	/* prologue: function */
 1504               	/* frame size = 0 */
 1505               	/* stack size = 0 */
 1506               	.L__stack_usage = 0
 107:./tmk_core/common/command.c ****     return false;
 1507               		.loc 1 107 5 view .LVU308
 108:./tmk_core/common/command.c **** }
 1508               		.loc 1 108 5 view .LVU309
 109:./tmk_core/common/command.c **** 
 1509               		.loc 1 109 1 is_stmt 0 view .LVU310
 1510 0000 80E0      		ldi r24,0
 1511               	.LVL48:
 1512               	/* epilogue start */
 109:./tmk_core/common/command.c **** 
 1513               		.loc 1 109 1 view .LVU311
 1514 0002 0895      		ret
 1515               		.cfi_endproc
 1516               	.LFE29:
 1518               		.set	command_extra.localalias,command_extra
 1519               		.section	.text.command_console_extra,"ax",@progbits
 1520               		.weak	command_console_extra
 1522               	command_console_extra:
 1523               	.LFB45:
 1524               		.cfi_startproc
 1525               	/* prologue: function */
 1526               	/* frame size = 0 */
 1527               	/* stack size = 0 */
 1528               	.L__stack_usage = 0
 1529 0000 0C94 0000 		jmp command_extra.localalias
 1530               		.cfi_endproc
 1531               	.LFE45:
 1533               		.section	.text.numkey2num,"ax",@progbits
 1534               	.global	numkey2num
 1536               	numkey2num:
 1537               	.LVL49:
 1538               	.LFB42:
 778:./tmk_core/common/command.c ****     switch (code) {
 1539               		.loc 1 778 1 is_stmt 1 view -0
 1540               		.cfi_startproc
 1541               	/* prologue: function */
 1542               	/* frame size = 0 */
 1543               	/* stack size = 0 */
 1544               	.L__stack_usage = 0
 779:./tmk_core/common/command.c ****         case KC_1: return 1;
 1545               		.loc 1 779 5 view .LVU313
 1546 0000 8E51      		subi r24,lo8(-(-30))
 1547               	.LVL50:
 779:./tmk_core/common/command.c ****         case KC_1: return 1;
 1548               		.loc 1 779 5 is_stmt 0 view .LVU314
 1549 0002 8A30      		cpi r24,lo8(10)
 1550 0004 00F4      		brsh .L98
 1551 0006 E82F      		mov r30,r24
 1552 0008 F0E0      		ldi r31,0
 1553 000a E050      		subi r30,lo8(-(CSWTCH.83))
 1554 000c F040      		sbci r31,hi8(-(CSWTCH.83))
 1555 000e 8081      		ld r24,Z
 1556               	.LVL51:
 779:./tmk_core/common/command.c ****         case KC_1: return 1;
 1557               		.loc 1 779 5 view .LVU315
 1558 0010 0895      		ret
 1559               	.L98:
 778:./tmk_core/common/command.c ****     switch (code) {
 1560               		.loc 1 778 1 view .LVU316
 1561 0012 80E0      		ldi r24,0
 1562               	/* epilogue start */
 792:./tmk_core/common/command.c **** 
 1563               		.loc 1 792 1 view .LVU317
 1564 0014 0895      		ret
 1565               		.cfi_endproc
 1566               	.LFE42:
 1568               		.section	.text.command_proc,"ax",@progbits
 1569               	.global	command_proc
 1571               	command_proc:
 1572               	.LFB28:
  77:./tmk_core/common/command.c ****     switch (command_state) {
 1573               		.loc 1 77 1 is_stmt 1 view -0
 1574               		.cfi_startproc
 1575 0000 CF93      		push r28
 1576               	.LCFI70:
 1577               		.cfi_def_cfa_offset 3
 1578               		.cfi_offset 28, -2
 1579               	/* prologue: function */
 1580               	/* frame size = 0 */
 1581               	/* stack size = 1 */
 1582               	.L__stack_usage = 1
 1583 0002 C82F      		mov r28,r24
  78:./tmk_core/common/command.c ****         case ONESHOT:
 1584               		.loc 1 78 5 view .LVU319
 1585 0004 8091 0000 		lds r24,command_state
 1586 0008 8130      		cpi r24,lo8(1)
 1587 000a 01F0      		breq .L100
 1588 000c 8230      		cpi r24,lo8(2)
 1589 000e 01F4      		brne .+2
 1590 0010 00C0      		rjmp .L101
 1591 0012 8111      		cpse r24,__zero_reg__
 1592 0014 00C0      		rjmp .L102
  80:./tmk_core/common/command.c ****                 return false;
 1593               		.loc 1 80 13 view .LVU320
  80:./tmk_core/common/command.c ****                 return false;
 1594               		.loc 1 80 18 is_stmt 0 view .LVU321
 1595 0016 E091 0000 		lds r30,keyboard_report
 1596 001a F091 0000 		lds r31,keyboard_report+1
  80:./tmk_core/common/command.c ****                 return false;
 1597               		.loc 1 80 16 view .LVU322
 1598 001e 8081      		ld r24,Z
 1599 0020 8232      		cpi r24,lo8(34)
 1600 0022 01F0      		breq .+2
 1601 0024 00C0      		rjmp .L128
 1602               	.L160:
  86:./tmk_core/common/command.c ****             else
 1603               		.loc 1 86 17 is_stmt 1 view .LVU323
  86:./tmk_core/common/command.c ****             else
 1604               		.loc 1 86 25 is_stmt 0 view .LVU324
 1605 0026 8C2F      		mov r24,r28
 1606 0028 0E94 0000 		call command_extra
  86:./tmk_core/common/command.c ****             else
 1607               		.loc 1 86 45 view .LVU325
 1608 002c 8111      		cpse r24,__zero_reg__
 1609 002e 00C0      		rjmp .L130
  86:./tmk_core/common/command.c ****             else
 1610               		.loc 1 86 48 discriminator 2 view .LVU326
 1611 0030 8C2F      		mov r24,r28
 1612 0032 0E94 0000 		call command_common
 1613               	.L107:
  88:./tmk_core/common/command.c ****             break;
 1614               		.loc 1 88 53 discriminator 6 view .LVU327
 1615 0036 8170      		andi r24,lo8(1)
 1616               	.L99:
 1617               	/* epilogue start */
 100:./tmk_core/common/command.c **** 
 1618               		.loc 1 100 1 view .LVU328
 1619 0038 CF91      		pop r28
 1620 003a 0895      		ret
 1621               	.L100:
  83:./tmk_core/common/command.c ****         case CONSOLE:
 1622               		.loc 1 83 13 is_stmt 1 view .LVU329
  85:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1623               		.loc 1 85 13 view .LVU330
  85:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1624               		.loc 1 85 17 is_stmt 0 view .LVU331
 1625 003c E091 0000 		lds r30,keyboard_report
 1626 0040 F091 0000 		lds r31,keyboard_report+1
  85:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1627               		.loc 1 85 16 view .LVU332
 1628 0044 8081      		ld r24,Z
 1629 0046 8232      		cpi r24,lo8(34)
 1630 0048 01F0      		breq .L160
  88:./tmk_core/common/command.c ****             break;
 1631               		.loc 1 88 17 is_stmt 1 view .LVU333
  88:./tmk_core/common/command.c ****             break;
 1632               		.loc 1 88 25 is_stmt 0 view .LVU334
 1633 004a 8C2F      		mov r24,r28
 1634 004c 0E94 0000 		call command_console_extra
  88:./tmk_core/common/command.c ****             break;
 1635               		.loc 1 88 53 view .LVU335
 1636 0050 8111      		cpse r24,__zero_reg__
 1637 0052 00C0      		rjmp .L131
 1638               	.LBB149:
 1639               	.LBI149:
 542:./tmk_core/common/command.c **** {
 1640               		.loc 1 542 13 is_stmt 1 view .LVU336
 1641               	.LBB150:
 544:./tmk_core/common/command.c ****         case KC_H:
 1642               		.loc 1 544 5 view .LVU337
 1643 0054 C431      		cpi r28,lo8(20)
 1644 0056 01F0      		breq .L108
 1645 0058 00F4      		brsh .L109
 1646 005a CB30      		cpi r28,lo8(11)
 1647 005c 01F0      		breq .L110
 1648 005e C031      		cpi r28,lo8(16)
 1649 0060 01F0      		breq .L111
 1650               	.L112:
 561:./tmk_core/common/command.c ****             return false;
 1651               		.loc 1 561 13 view .LVU338
 1652               	.LBE150:
 1653               	.LBE149:
 561:./tmk_core/common/command.c ****             return false;
 1654               		.loc 1 561 13 view .LVU339
 561:./tmk_core/common/command.c ****             return false;
 1655               		.loc 1 561 13 view .LVU340
 1656               	.LBB162:
 1657               	.LBB155:
 1658 0062 80E0      		ldi r24,lo8(__c.3403)
 1659 0064 90E0      		ldi r25,hi8(__c.3403)
 1660 0066 0E94 0000 		call xputs
 1661 006a 00C0      		rjmp .L153
 1662               	.L130:
 1663               	.LBE155:
 1664               	.LBE162:
  86:./tmk_core/common/command.c ****             else
 1665               		.loc 1 86 45 is_stmt 0 view .LVU341
 1666 006c 81E0      		ldi r24,lo8(1)
 1667 006e 90E0      		ldi r25,0
 1668 0070 00C0      		rjmp .L107
 1669               	.L109:
 1670               	.LBB163:
 1671               	.LBB156:
 544:./tmk_core/common/command.c ****         case KC_H:
 1672               		.loc 1 544 5 view .LVU342
 1673 0072 C932      		cpi r28,lo8(41)
 1674 0074 01F0      		breq .L108
 1675 0076 C833      		cpi r28,lo8(56)
 1676 0078 01F4      		brne .L112
 1677               	.L110:
 547:./tmk_core/common/command.c ****             break;
 1678               		.loc 1 547 13 is_stmt 1 view .LVU343
 1679               	.LBB151:
 1680               	.LBI151:
 532:./tmk_core/common/command.c **** {
 1681               		.loc 1 532 13 view .LVU344
 1682               	.LBB152:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1683               		.loc 1 534 5 view .LVU345
 1684               	.LBE152:
 1685               	.LBE151:
 1686               	.LBE156:
 1687               	.LBE163:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1688               		.loc 1 534 5 view .LVU346
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1689               		.loc 1 534 5 view .LVU347
 1690               	.LBB164:
 1691               	.LBB157:
 1692               	.LBB154:
 1693               	.LBB153:
 1694 007a 80E0      		ldi r24,lo8(__c.3389)
 1695 007c 90E0      		ldi r25,hi8(__c.3389)
 1696 007e 0E94 0000 		call xputs
 1697               	.LBE153:
 1698               	.LBE154:
 548:./tmk_core/common/command.c ****         case KC_Q:
 1699               		.loc 1 548 13 view .LVU348
 564:./tmk_core/common/command.c ****     return true;
 1700               		.loc 1 564 5 view .LVU349
 1701               	.LBE157:
 1702               	.LBE164:
 564:./tmk_core/common/command.c ****     return true;
 1703               		.loc 1 564 5 view .LVU350
 564:./tmk_core/common/command.c ****     return true;
 1704               		.loc 1 564 5 view .LVU351
 1705               	.LBB165:
 1706               	.LBB158:
 1707 0082 80E0      		ldi r24,lo8(__c.3405)
 1708 0084 90E0      		ldi r25,hi8(__c.3405)
 1709 0086 0E94 0000 		call xputs
 565:./tmk_core/common/command.c **** }
 1710               		.loc 1 565 5 view .LVU352
 1711               	.L131:
 1712               	.LBE158:
 1713               	.LBE165:
  88:./tmk_core/common/command.c ****             break;
 1714               		.loc 1 88 53 is_stmt 0 view .LVU353
 1715 008a 81E0      		ldi r24,lo8(1)
 1716 008c 00C0      		rjmp .L107
 1717               	.L108:
 1718               	.LBB166:
 1719               	.LBB159:
 551:./tmk_core/common/command.c ****             return false;
 1720               		.loc 1 551 13 is_stmt 1 view .LVU354
 551:./tmk_core/common/command.c ****             return false;
 1721               		.loc 1 551 27 is_stmt 0 view .LVU355
 1722 008e 1092 0000 		sts command_state,__zero_reg__
 552:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1723               		.loc 1 552 13 is_stmt 1 view .LVU356
 1724               	.L153:
 562:./tmk_core/common/command.c ****     }
 1725               		.loc 1 562 13 view .LVU357
 1726               	.LBE159:
 1727               	.LBE166:
  88:./tmk_core/common/command.c ****             break;
 1728               		.loc 1 88 53 is_stmt 0 view .LVU358
 1729 0092 80E0      		ldi r24,0
 1730 0094 00C0      		rjmp .L107
 1731               	.L111:
 1732               	.LBB167:
 1733               	.LBB160:
 555:./tmk_core/common/command.c ****             print("M> ");
 1734               		.loc 1 555 13 is_stmt 1 view .LVU359
 1735 0096 0E94 0000 		call mousekey_console_help
 556:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1736               		.loc 1 556 13 view .LVU360
 1737               	.LBE160:
 1738               	.LBE167:
 556:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1739               		.loc 1 556 13 view .LVU361
 556:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1740               		.loc 1 556 13 view .LVU362
 1741               	.LBB168:
 1742               	.LBB161:
 1743 009a 80E0      		ldi r24,lo8(__c.3400)
 1744 009c 90E0      		ldi r25,hi8(__c.3400)
 1745 009e 0E94 0000 		call xputs
 557:./tmk_core/common/command.c ****             return true;
 1746               		.loc 1 557 13 view .LVU363
 557:./tmk_core/common/command.c ****             return true;
 1747               		.loc 1 557 27 is_stmt 0 view .LVU364
 1748 00a2 82E0      		ldi r24,lo8(2)
 1749 00a4 8093 0000 		sts command_state,r24
 558:./tmk_core/common/command.c **** #endif
 1750               		.loc 1 558 13 is_stmt 1 view .LVU365
 1751 00a8 00C0      		rjmp .L131
 1752               	.L101:
 1753               	.LBE161:
 1754               	.LBE168:
  89:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1755               		.loc 1 89 13 view .LVU366
  92:./tmk_core/common/command.c ****             break;
 1756               		.loc 1 92 13 view .LVU367
 1757               	.LBB169:
 1758               	.LBI169:
 711:./tmk_core/common/command.c **** {
 1759               		.loc 1 711 13 view .LVU368
 1760               	.LBB170:
 713:./tmk_core/common/command.c ****         case KC_H:
 1761               		.loc 1 713 5 view .LVU369
 1762 00aa C932      		cpi r28,lo8(41)
 1763 00ac 01F4      		brne .+2
 1764 00ae 00C0      		rjmp .L113
 1765 00b0 00F4      		brsh .L114
 1766 00b2 C331      		cpi r28,lo8(19)
 1767 00b4 01F4      		brne .+2
 1768 00b6 00C0      		rjmp .L115
 1769 00b8 00F4      		brsh .L116
 1770 00ba C730      		cpi r28,lo8(7)
 1771 00bc 01F4      		brne .+2
 1772 00be 00C0      		rjmp .L117
 1773 00c0 CB30      		cpi r28,lo8(11)
 1774 00c2 01F0      		breq .L118
 1775               	.L119:
 761:./tmk_core/common/command.c ****             return false;
 1776               		.loc 1 761 13 view .LVU370
 1777               	.LBE170:
 1778               	.LBE169:
 761:./tmk_core/common/command.c ****             return false;
 1779               		.loc 1 761 13 view .LVU371
 761:./tmk_core/common/command.c ****             return false;
 1780               		.loc 1 761 13 view .LVU372
 1781               	.LBB236:
 1782               	.LBB211:
 1783 00c4 80E0      		ldi r24,lo8(__c.3527)
 1784 00c6 90E0      		ldi r25,hi8(__c.3527)
 1785               	.L157:
 767:./tmk_core/common/command.c ****     }
 1786               		.loc 1 767 9 is_stmt 0 view .LVU373
 1787 00c8 0E94 0000 		call xputs
 1788 00cc 00C0      		rjmp .L156
 1789               	.L116:
 713:./tmk_core/common/command.c ****         case KC_H:
 1790               		.loc 1 713 5 view .LVU374
 1791 00ce C431      		cpi r28,lo8(20)
 1792 00d0 01F0      		breq .L113
 1793 00d2 82EE      		ldi r24,lo8(-30)
 1794 00d4 8C0F      		add r24,r28
 1795 00d6 8630      		cpi r24,lo8(6)
 1796 00d8 00F4      		brsh .L119
 737:./tmk_core/common/command.c ****             break;
 1797               		.loc 1 737 13 is_stmt 1 view .LVU375
 737:./tmk_core/common/command.c ****             break;
 1798               		.loc 1 737 30 is_stmt 0 view .LVU376
 1799 00da 8C2F      		mov r24,r28
 1800 00dc 0E94 0000 		call numkey2num
 737:./tmk_core/common/command.c ****             break;
 1801               		.loc 1 737 28 view .LVU377
 1802 00e0 8093 0000 		sts mousekey_param,r24
 738:./tmk_core/common/command.c ****         case KC_UP:
 1803               		.loc 1 738 13 is_stmt 1 view .LVU378
 1804               	.L120:
 764:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1805               		.loc 1 764 5 view .LVU379
 764:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1806               		.loc 1 764 9 is_stmt 0 view .LVU380
 1807 00e4 8091 0000 		lds r24,mousekey_param
 764:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1808               		.loc 1 764 8 view .LVU381
 1809 00e8 8823      		tst r24
 1810 00ea 01F4      		brne .+2
 1811 00ec 00C0      		rjmp .L127
 765:./tmk_core/common/command.c ****     } else {
 1812               		.loc 1 765 9 is_stmt 1 view .LVU382
 1813               	.LBE211:
 1814               	.LBE236:
 765:./tmk_core/common/command.c ****     } else {
 1815               		.loc 1 765 9 view .LVU383
 765:./tmk_core/common/command.c ****     } else {
 1816               		.loc 1 765 9 view .LVU384
 1817               	.LBB237:
 1818               	.LBB212:
 1819 00ee 1F92      		push __zero_reg__
 1820               	.LCFI71:
 1821               		.cfi_def_cfa_offset 4
 1822 00f0 8F93      		push r24
 1823               	.LCFI72:
 1824               		.cfi_def_cfa_offset 5
 1825 00f2 80E0      		ldi r24,lo8(__c.3529)
 1826 00f4 90E0      		ldi r25,hi8(__c.3529)
 1827 00f6 9F93      		push r25
 1828               	.LCFI73:
 1829               		.cfi_def_cfa_offset 6
 1830 00f8 8F93      		push r24
 1831               	.LCFI74:
 1832               		.cfi_def_cfa_offset 7
 1833 00fa 0E94 0000 		call __xprintf
 1834 00fe 0F90      		pop __tmp_reg__
 1835 0100 0F90      		pop __tmp_reg__
 1836 0102 0F90      		pop __tmp_reg__
 1837 0104 0F90      		pop __tmp_reg__
 1838               	.LCFI75:
 1839               		.cfi_def_cfa_offset 3
 1840               	.L156:
 1841               	.LBE212:
 1842               	.LBE237:
  99:./tmk_core/common/command.c **** }
 1843               		.loc 1 99 12 is_stmt 0 view .LVU385
 1844 0106 81E0      		ldi r24,lo8(1)
 1845 0108 00C0      		rjmp .L99
 1846               	.L114:
 1847               	.LBB238:
 1848               	.LBB213:
 713:./tmk_core/common/command.c ****         case KC_H:
 1849               		.loc 1 713 5 view .LVU386
 1850 010a CE34      		cpi r28,lo8(78)
 1851 010c 01F4      		brne .+2
 1852 010e 00C0      		rjmp .L121
 1853 0110 00F4      		brsh .L122
 1854 0112 C833      		cpi r28,lo8(56)
 1855 0114 01F0      		breq .L118
 746:./tmk_core/common/command.c ****             break;
 1856               		.loc 1 746 13 view .LVU387
 1857 0116 6AE0      		ldi r22,lo8(10)
 713:./tmk_core/common/command.c ****         case KC_H:
 1858               		.loc 1 713 5 view .LVU388
 1859 0118 CB34      		cpi r28,lo8(75)
 1860 011a 01F4      		brne .L119
 1861               	.L154:
 746:./tmk_core/common/command.c ****             break;
 1862               		.loc 1 746 13 view .LVU389
 1863 011c 8091 0000 		lds r24,mousekey_param
 1864 0120 0E94 0000 		call mousekey_param_inc
 747:./tmk_core/common/command.c ****         case KC_PGDN:
 1865               		.loc 1 747 13 is_stmt 1 view .LVU390
 1866 0124 00C0      		rjmp .L120
 1867               	.L122:
 713:./tmk_core/common/command.c ****         case KC_H:
 1868               		.loc 1 713 5 is_stmt 0 view .LVU391
 1869 0126 C135      		cpi r28,lo8(81)
 1870 0128 01F4      		brne .+2
 1871 012a 00C0      		rjmp .L124
 740:./tmk_core/common/command.c ****             break;
 1872               		.loc 1 740 13 view .LVU392
 1873 012c 61E0      		ldi r22,lo8(1)
 713:./tmk_core/common/command.c ****         case KC_H:
 1874               		.loc 1 713 5 view .LVU393
 1875 012e C235      		cpi r28,lo8(82)
 1876 0130 01F0      		breq .L154
 1877 0132 00C0      		rjmp .L119
 1878               	.L118:
 716:./tmk_core/common/command.c ****             break;
 1879               		.loc 1 716 13 is_stmt 1 view .LVU394
 1880 0134 0E94 0000 		call mousekey_console_help
 717:./tmk_core/common/command.c ****         case KC_Q:
 1881               		.loc 1 717 13 view .LVU395
 1882 0138 00C0      		rjmp .L120
 1883               	.L113:
 720:./tmk_core/common/command.c ****                 mousekey_param = 0;
 1884               		.loc 1 720 13 view .LVU396
 720:./tmk_core/common/command.c ****                 mousekey_param = 0;
 1885               		.loc 1 720 16 is_stmt 0 view .LVU397
 1886 013a 8091 0000 		lds r24,mousekey_param
 1887 013e 8823      		tst r24
 1888 0140 01F0      		breq .L126
 721:./tmk_core/common/command.c ****             } else {
 1889               		.loc 1 721 17 is_stmt 1 view .LVU398
 721:./tmk_core/common/command.c ****             } else {
 1890               		.loc 1 721 32 is_stmt 0 view .LVU399
 1891 0142 1092 0000 		sts mousekey_param,__zero_reg__
 727:./tmk_core/common/command.c ****         case KC_P:
 1892               		.loc 1 727 13 is_stmt 1 view .LVU400
 1893 0146 00C0      		rjmp .L120
 1894               	.L126:
 723:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 1895               		.loc 1 723 17 view .LVU401
 1896               	.LBE213:
 1897               	.LBE238:
 723:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 1898               		.loc 1 723 17 view .LVU402
 723:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 1899               		.loc 1 723 17 view .LVU403
 1900               	.LBB239:
 1901               	.LBB214:
 1902 0148 80E0      		ldi r24,lo8(__c.3510)
 1903 014a 90E0      		ldi r25,hi8(__c.3510)
 1904 014c 0E94 0000 		call xputs
 724:./tmk_core/common/command.c ****                 return false;
 1905               		.loc 1 724 17 view .LVU404
 724:./tmk_core/common/command.c ****                 return false;
 1906               		.loc 1 724 31 is_stmt 0 view .LVU405
 1907 0150 81E0      		ldi r24,lo8(1)
 1908 0152 8093 0000 		sts command_state,r24
 725:./tmk_core/common/command.c ****             }
 1909               		.loc 1 725 17 is_stmt 1 view .LVU406
 725:./tmk_core/common/command.c ****             }
 1910               		.loc 1 725 24 is_stmt 0 view .LVU407
 1911 0156 00C0      		rjmp .L99
 1912               	.L115:
 729:./tmk_core/common/command.c ****             break;
 1913               		.loc 1 729 13 is_stmt 1 view .LVU408
 1914               	.LBB171:
 1915               	.LBI171:
 575:./tmk_core/common/command.c **** {
 1916               		.loc 1 575 13 view .LVU409
 1917               	.LBB172:
 579:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1918               		.loc 1 579 5 view .LVU410
 1919               	.LBE172:
 1920               	.LBE171:
 1921               	.LBE214:
 1922               	.LBE239:
 579:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1923               		.loc 1 579 5 view .LVU411
 579:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1924               		.loc 1 579 5 view .LVU412
 1925               	.LBB240:
 1926               	.LBB215:
 1927               	.LBB192:
 1928               	.LBB173:
 1929 0158 80E0      		ldi r24,lo8(__c.3411)
 1930 015a 90E0      		ldi r25,hi8(__c.3411)
 1931 015c 0E94 0000 		call xputs
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1932               		.loc 1 580 5 view .LVU413
 1933               	.LBE173:
 1934               	.LBE192:
 1935               	.LBE215:
 1936               	.LBE240:
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1937               		.loc 1 580 5 view .LVU414
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1938               		.loc 1 580 5 view .LVU415
 1939               	.LBB241:
 1940               	.LBB216:
 1941               	.LBB193:
 1942               	.LBB174:
 1943 0160 80E0      		ldi r24,lo8(__c.3413)
 1944 0162 90E0      		ldi r25,hi8(__c.3413)
 1945 0164 0E94 0000 		call xputs
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1946               		.loc 1 580 33 view .LVU416
 1947               	.LBE174:
 1948               	.LBE193:
 1949               	.LBE216:
 1950               	.LBE241:
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1951               		.loc 1 580 33 view .LVU417
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1952               		.loc 1 580 33 view .LVU418
 1953               	.LBB242:
 1954               	.LBB217:
 1955               	.LBB194:
 1956               	.LBB175:
 1957 0168 8091 0000 		lds r24,mk_delay
 1958 016c 1F92      		push __zero_reg__
 1959               	.LCFI76:
 1960               		.cfi_def_cfa_offset 4
 1961 016e 8F93      		push r24
 1962               	.LCFI77:
 1963               		.cfi_def_cfa_offset 5
 1964 0170 80E0      		ldi r24,lo8(__c.3415)
 1965 0172 90E0      		ldi r25,hi8(__c.3415)
 1966 0174 9F93      		push r25
 1967               	.LCFI78:
 1968               		.cfi_def_cfa_offset 6
 1969 0176 8F93      		push r24
 1970               	.LCFI79:
 1971               		.cfi_def_cfa_offset 7
 1972 0178 0E94 0000 		call __xprintf
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1973               		.loc 1 580 49 view .LVU419
 1974               	.LBE175:
 1975               	.LBE194:
 1976               	.LBE217:
 1977               	.LBE242:
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1978               		.loc 1 580 49 view .LVU420
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1979               		.loc 1 580 49 view .LVU421
 1980               	.LBB243:
 1981               	.LBB218:
 1982               	.LBB195:
 1983               	.LBB176:
 1984 017c 80E0      		ldi r24,lo8(__c.3417)
 1985 017e 90E0      		ldi r25,hi8(__c.3417)
 1986 0180 0E94 0000 		call xputs
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1987               		.loc 1 581 5 view .LVU422
 1988               	.LBE176:
 1989               	.LBE195:
 1990               	.LBE218:
 1991               	.LBE243:
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1992               		.loc 1 581 5 view .LVU423
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1993               		.loc 1 581 5 view .LVU424
 1994               	.LBB244:
 1995               	.LBB219:
 1996               	.LBB196:
 1997               	.LBB177:
 1998 0184 80E0      		ldi r24,lo8(__c.3419)
 1999 0186 90E0      		ldi r25,hi8(__c.3419)
 2000 0188 0E94 0000 		call xputs
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2001               		.loc 1 581 33 view .LVU425
 2002               	.LBE177:
 2003               	.LBE196:
 2004               	.LBE219:
 2005               	.LBE244:
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2006               		.loc 1 581 33 view .LVU426
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2007               		.loc 1 581 33 view .LVU427
 2008               	.LBB245:
 2009               	.LBB220:
 2010               	.LBB197:
 2011               	.LBB178:
 2012 018c 8091 0000 		lds r24,mk_interval
 2013 0190 1F92      		push __zero_reg__
 2014               	.LCFI80:
 2015               		.cfi_def_cfa_offset 8
 2016 0192 8F93      		push r24
 2017               	.LCFI81:
 2018               		.cfi_def_cfa_offset 9
 2019 0194 80E0      		ldi r24,lo8(__c.3421)
 2020 0196 90E0      		ldi r25,hi8(__c.3421)
 2021 0198 9F93      		push r25
 2022               	.LCFI82:
 2023               		.cfi_def_cfa_offset 10
 2024 019a 8F93      		push r24
 2025               	.LCFI83:
 2026               		.cfi_def_cfa_offset 11
 2027 019c 0E94 0000 		call __xprintf
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2028               		.loc 1 581 52 view .LVU428
 2029               	.LBE178:
 2030               	.LBE197:
 2031               	.LBE220:
 2032               	.LBE245:
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2033               		.loc 1 581 52 view .LVU429
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 2034               		.loc 1 581 52 view .LVU430
 2035               	.LBB246:
 2036               	.LBB221:
 2037               	.LBB198:
 2038               	.LBB179:
 2039 01a0 80E0      		ldi r24,lo8(__c.3423)
 2040 01a2 90E0      		ldi r25,hi8(__c.3423)
 2041 01a4 0E94 0000 		call xputs
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2042               		.loc 1 582 5 view .LVU431
 2043               	.LBE179:
 2044               	.LBE198:
 2045               	.LBE221:
 2046               	.LBE246:
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2047               		.loc 1 582 5 view .LVU432
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2048               		.loc 1 582 5 view .LVU433
 2049               	.LBB247:
 2050               	.LBB222:
 2051               	.LBB199:
 2052               	.LBB180:
 2053 01a8 80E0      		ldi r24,lo8(__c.3425)
 2054 01aa 90E0      		ldi r25,hi8(__c.3425)
 2055 01ac 0E94 0000 		call xputs
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2056               		.loc 1 582 30 view .LVU434
 2057               	.LBE180:
 2058               	.LBE199:
 2059               	.LBE222:
 2060               	.LBE247:
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2061               		.loc 1 582 30 view .LVU435
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2062               		.loc 1 582 30 view .LVU436
 2063               	.LBB248:
 2064               	.LBB223:
 2065               	.LBB200:
 2066               	.LBB181:
 2067 01b0 8091 0000 		lds r24,mk_max_speed
 2068 01b4 1F92      		push __zero_reg__
 2069               	.LCFI84:
 2070               		.cfi_def_cfa_offset 12
 2071 01b6 8F93      		push r24
 2072               	.LCFI85:
 2073               		.cfi_def_cfa_offset 13
 2074 01b8 80E0      		ldi r24,lo8(__c.3427)
 2075 01ba 90E0      		ldi r25,hi8(__c.3427)
 2076 01bc 9F93      		push r25
 2077               	.LCFI86:
 2078               		.cfi_def_cfa_offset 14
 2079 01be 8F93      		push r24
 2080               	.LCFI87:
 2081               		.cfi_def_cfa_offset 15
 2082 01c0 0E94 0000 		call __xprintf
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2083               		.loc 1 582 50 view .LVU437
 2084               	.LBE181:
 2085               	.LBE200:
 2086               	.LBE223:
 2087               	.LBE248:
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2088               		.loc 1 582 50 view .LVU438
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2089               		.loc 1 582 50 view .LVU439
 2090               	.LBB249:
 2091               	.LBB224:
 2092               	.LBB201:
 2093               	.LBB182:
 2094 01c4 80E0      		ldi r24,lo8(__c.3429)
 2095 01c6 90E0      		ldi r25,hi8(__c.3429)
 2096 01c8 0E94 0000 		call xputs
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2097               		.loc 1 583 5 view .LVU440
 2098               	.LBE182:
 2099               	.LBE201:
 2100               	.LBE224:
 2101               	.LBE249:
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2102               		.loc 1 583 5 view .LVU441
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2103               		.loc 1 583 5 view .LVU442
 2104               	.LBB250:
 2105               	.LBB225:
 2106               	.LBB202:
 2107               	.LBB183:
 2108 01cc 80E0      		ldi r24,lo8(__c.3431)
 2109 01ce 90E0      		ldi r25,hi8(__c.3431)
 2110 01d0 0E94 0000 		call xputs
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2111               		.loc 1 583 32 view .LVU443
 2112               	.LBE183:
 2113               	.LBE202:
 2114               	.LBE225:
 2115               	.LBE250:
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2116               		.loc 1 583 32 view .LVU444
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2117               		.loc 1 583 32 view .LVU445
 2118               	.LBB251:
 2119               	.LBB226:
 2120               	.LBB203:
 2121               	.LBB184:
 2122 01d4 8091 0000 		lds r24,mk_time_to_max
 2123 01d8 1F92      		push __zero_reg__
 2124               	.LCFI88:
 2125               		.cfi_def_cfa_offset 16
 2126 01da 8F93      		push r24
 2127               	.LCFI89:
 2128               		.cfi_def_cfa_offset 17
 2129 01dc 80E0      		ldi r24,lo8(__c.3433)
 2130 01de 90E0      		ldi r25,hi8(__c.3433)
 2131 01e0 9F93      		push r25
 2132               	.LCFI90:
 2133               		.cfi_def_cfa_offset 18
 2134 01e2 8F93      		push r24
 2135               	.LCFI91:
 2136               		.cfi_def_cfa_offset 19
 2137 01e4 0E94 0000 		call __xprintf
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2138               		.loc 1 583 54 view .LVU446
 2139               	.LBE184:
 2140               	.LBE203:
 2141               	.LBE226:
 2142               	.LBE251:
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2143               		.loc 1 583 54 view .LVU447
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2144               		.loc 1 583 54 view .LVU448
 2145               	.LBB252:
 2146               	.LBB227:
 2147               	.LBB204:
 2148               	.LBB185:
 2149 01e8 80E0      		ldi r24,lo8(__c.3435)
 2150 01ea 90E0      		ldi r25,hi8(__c.3435)
 2151 01ec 0E94 0000 		call xputs
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2152               		.loc 1 584 5 view .LVU449
 2153               	.LBE185:
 2154               	.LBE204:
 2155               	.LBE227:
 2156               	.LBE252:
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2157               		.loc 1 584 5 view .LVU450
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2158               		.loc 1 584 5 view .LVU451
 2159               	.LBB253:
 2160               	.LBB228:
 2161               	.LBB205:
 2162               	.LBB186:
 2163 01f0 80E0      		ldi r24,lo8(__c.3437)
 2164 01f2 90E0      		ldi r25,hi8(__c.3437)
 2165 01f4 0E94 0000 		call xputs
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2166               		.loc 1 584 36 view .LVU452
 2167               	.LBE186:
 2168               	.LBE205:
 2169               	.LBE228:
 2170               	.LBE253:
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2171               		.loc 1 584 36 view .LVU453
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2172               		.loc 1 584 36 view .LVU454
 2173               	.LBB254:
 2174               	.LBB229:
 2175               	.LBB206:
 2176               	.LBB187:
 2177 01f8 8091 0000 		lds r24,mk_wheel_max_speed
 2178 01fc 1F92      		push __zero_reg__
 2179               	.LCFI92:
 2180               		.cfi_def_cfa_offset 20
 2181 01fe 8F93      		push r24
 2182               	.LCFI93:
 2183               		.cfi_def_cfa_offset 21
 2184 0200 80E0      		ldi r24,lo8(__c.3439)
 2185 0202 90E0      		ldi r25,hi8(__c.3439)
 2186 0204 9F93      		push r25
 2187               	.LCFI94:
 2188               		.cfi_def_cfa_offset 22
 2189 0206 8F93      		push r24
 2190               	.LCFI95:
 2191               		.cfi_def_cfa_offset 23
 2192 0208 0E94 0000 		call __xprintf
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2193               		.loc 1 584 62 view .LVU455
 2194               	.LBE187:
 2195               	.LBE206:
 2196               	.LBE229:
 2197               	.LBE254:
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2198               		.loc 1 584 62 view .LVU456
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2199               		.loc 1 584 62 view .LVU457
 2200               	.LBB255:
 2201               	.LBB230:
 2202               	.LBB207:
 2203               	.LBB188:
 2204 020c 80E0      		ldi r24,lo8(__c.3441)
 2205 020e 90E0      		ldi r25,hi8(__c.3441)
 2206 0210 0E94 0000 		call xputs
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2207               		.loc 1 585 5 view .LVU458
 2208               	.LBE188:
 2209               	.LBE207:
 2210               	.LBE230:
 2211               	.LBE255:
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2212               		.loc 1 585 5 view .LVU459
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2213               		.loc 1 585 5 view .LVU460
 2214               	.LBB256:
 2215               	.LBB231:
 2216               	.LBB208:
 2217               	.LBB189:
 2218 0214 80E0      		ldi r24,lo8(__c.3443)
 2219 0216 90E0      		ldi r25,hi8(__c.3443)
 2220 0218 0E94 0000 		call xputs
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2221               		.loc 1 585 38 view .LVU461
 2222               	.LBE189:
 2223               	.LBE208:
 2224               	.LBE231:
 2225               	.LBE256:
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2226               		.loc 1 585 38 view .LVU462
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2227               		.loc 1 585 38 view .LVU463
 2228               	.LBB257:
 2229               	.LBB232:
 2230               	.LBB209:
 2231               	.LBB190:
 2232 021c 8091 0000 		lds r24,mk_wheel_time_to_max
 2233 0220 1F92      		push __zero_reg__
 2234               	.LCFI96:
 2235               		.cfi_def_cfa_offset 24
 2236 0222 8F93      		push r24
 2237               	.LCFI97:
 2238               		.cfi_def_cfa_offset 25
 2239 0224 80E0      		ldi r24,lo8(__c.3445)
 2240 0226 90E0      		ldi r25,hi8(__c.3445)
 2241 0228 9F93      		push r25
 2242               	.LCFI98:
 2243               		.cfi_def_cfa_offset 26
 2244 022a 8F93      		push r24
 2245               	.LCFI99:
 2246               		.cfi_def_cfa_offset 27
 2247 022c 0E94 0000 		call __xprintf
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2248               		.loc 1 585 66 view .LVU464
 2249               	.LBE190:
 2250               	.LBE209:
 2251               	.LBE232:
 2252               	.LBE257:
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2253               		.loc 1 585 66 view .LVU465
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2254               		.loc 1 585 66 view .LVU466
 2255               	.LBB258:
 2256               	.LBB233:
 2257               	.LBB210:
 2258               	.LBB191:
 2259 0230 80E0      		ldi r24,lo8(__c.3447)
 2260 0232 90E0      		ldi r25,hi8(__c.3447)
 2261 0234 0E94 0000 		call xputs
 588:./tmk_core/common/command.c **** 
 2262               		.loc 1 588 1 is_stmt 0 view .LVU467
 2263 0238 8DB7      		in r24,__SP_L__
 2264 023a 9EB7      		in r25,__SP_H__
 2265 023c 4896      		adiw r24,24
 2266 023e 0FB6      		in __tmp_reg__,__SREG__
 2267 0240 F894      		cli
 2268 0242 9EBF      		out __SP_H__,r25
 2269 0244 0FBE      		out __SREG__,__tmp_reg__
 2270 0246 8DBF      		out __SP_L__,r24
 2271               	.LCFI100:
 2272               		.cfi_def_cfa_offset 3
 2273 0248 00C0      		rjmp .L120
 2274               	.L124:
 2275               	.LBE191:
 2276               	.LBE210:
 743:./tmk_core/common/command.c ****             break;
 2277               		.loc 1 743 13 is_stmt 1 view .LVU468
 2278 024a 61E0      		ldi r22,lo8(1)
 2279               	.L155:
 749:./tmk_core/common/command.c ****             break;
 2280               		.loc 1 749 13 is_stmt 0 view .LVU469
 2281 024c 8091 0000 		lds r24,mousekey_param
 2282 0250 0E94 0000 		call mousekey_param_dec
 750:./tmk_core/common/command.c ****         case KC_D:
 2283               		.loc 1 750 13 is_stmt 1 view .LVU470
 2284 0254 00C0      		rjmp .L120
 2285               	.L121:
 749:./tmk_core/common/command.c ****             break;
 2286               		.loc 1 749 13 view .LVU471
 2287 0256 6AE0      		ldi r22,lo8(10)
 2288 0258 00C0      		rjmp .L155
 2289               	.L117:
 752:./tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2290               		.loc 1 752 13 view .LVU472
 752:./tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2291               		.loc 1 752 22 is_stmt 0 view .LVU473
 2292 025a 1092 0000 		sts mk_delay,__zero_reg__
 753:./tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2293               		.loc 1 753 13 is_stmt 1 view .LVU474
 753:./tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2294               		.loc 1 753 25 is_stmt 0 view .LVU475
 2295 025e 80E1      		ldi r24,lo8(16)
 2296 0260 8093 0000 		sts mk_interval,r24
 754:./tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2297               		.loc 1 754 13 is_stmt 1 view .LVU476
 754:./tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2298               		.loc 1 754 26 is_stmt 0 view .LVU477
 2299 0264 C093 0000 		sts mk_max_speed,r28
 755:./tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2300               		.loc 1 755 13 is_stmt 1 view .LVU478
 755:./tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2301               		.loc 1 755 28 is_stmt 0 view .LVU479
 2302 0268 8CE3      		ldi r24,lo8(60)
 2303 026a 8093 0000 		sts mk_time_to_max,r24
 756:./tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2304               		.loc 1 756 13 is_stmt 1 view .LVU480
 756:./tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2305               		.loc 1 756 32 is_stmt 0 view .LVU481
 2306 026e 88E0      		ldi r24,lo8(8)
 2307 0270 8093 0000 		sts mk_wheel_max_speed,r24
 757:./tmk_core/common/command.c ****             print("set default\n");
 2308               		.loc 1 757 13 is_stmt 1 view .LVU482
 757:./tmk_core/common/command.c ****             print("set default\n");
 2309               		.loc 1 757 34 is_stmt 0 view .LVU483
 2310 0274 88E2      		ldi r24,lo8(40)
 2311 0276 8093 0000 		sts mk_wheel_time_to_max,r24
 758:./tmk_core/common/command.c ****             break;
 2312               		.loc 1 758 13 is_stmt 1 view .LVU484
 2313               	.LBE233:
 2314               	.LBE258:
 758:./tmk_core/common/command.c ****             break;
 2315               		.loc 1 758 13 view .LVU485
 758:./tmk_core/common/command.c ****             break;
 2316               		.loc 1 758 13 view .LVU486
 2317               	.LBB259:
 2318               	.LBB234:
 2319 027a 80E0      		ldi r24,lo8(__c.3524)
 2320 027c 90E0      		ldi r25,hi8(__c.3524)
 2321 027e 0E94 0000 		call xputs
 759:./tmk_core/common/command.c ****         default:
 2322               		.loc 1 759 13 view .LVU487
 2323 0282 00C0      		rjmp .L120
 2324               	.L127:
 767:./tmk_core/common/command.c ****     }
 2325               		.loc 1 767 9 view .LVU488
 2326               	.LBE234:
 2327               	.LBE259:
 767:./tmk_core/common/command.c ****     }
 2328               		.loc 1 767 9 view .LVU489
 767:./tmk_core/common/command.c ****     }
 2329               		.loc 1 767 9 view .LVU490
 2330               	.LBB260:
 2331               	.LBB235:
 2332 0284 80E0      		ldi r24,lo8(__c.3531)
 2333 0286 90E0      		ldi r25,hi8(__c.3531)
 2334 0288 00C0      		rjmp .L157
 2335               	.L102:
 2336               	.LBE235:
 2337               	.LBE260:
  96:./tmk_core/common/command.c ****             return false;
 2338               		.loc 1 96 13 view .LVU491
  96:./tmk_core/common/command.c ****             return false;
 2339               		.loc 1 96 27 is_stmt 0 view .LVU492
 2340 028a 1092 0000 		sts command_state,__zero_reg__
  97:./tmk_core/common/command.c ****     }
 2341               		.loc 1 97 13 is_stmt 1 view .LVU493
 2342               	.L128:
  81:./tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 2343               		.loc 1 81 24 is_stmt 0 view .LVU494
 2344 028e 80E0      		ldi r24,0
 2345 0290 00C0      		rjmp .L99
 2346               		.cfi_endproc
 2347               	.LFE28:
 2349               		.section	.rodata.CSWTCH.83,"a"
 2352               	CSWTCH.83:
 2353 0000 01        		.byte	1
 2354 0001 02        		.byte	2
 2355 0002 03        		.byte	3
 2356 0003 04        		.byte	4
 2357 0004 05        		.byte	5
 2358 0005 06        		.byte	6
 2359 0006 07        		.byte	7
 2360 0007 08        		.byte	8
 2361 0008 09        		.byte	9
 2362 0009 00        		.byte	0
 2363               		.section	.progmem.data.__c.3493,"a"
 2366               	__c.3493:
 2367 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2367      6865 656C 
 2367      5F74 696D 
 2367      655F 746F 
 2367      5F6D 6178 
 2368               		.section	.progmem.data.__c.3490,"a"
 2371               	__c.3490:
 2372 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2372      6865 656C 
 2372      5F6D 6178 
 2372      5F73 7065 
 2372      6564 203D 
 2373               		.section	.progmem.data.__c.3487,"a"
 2376               	__c.3487:
 2377 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2377      696D 655F 
 2377      746F 5F6D 
 2377      6178 203D 
 2377      2025 640A 
 2378               		.section	.progmem.data.__c.3484,"a"
 2381               	__c.3484:
 2382 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2382      6178 5F73 
 2382      7065 6564 
 2382      203D 2025 
 2382      640A 00
 2383               		.section	.progmem.data.__c.3481,"a"
 2386               	__c.3481:
 2387 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2387      6E74 6572 
 2387      7661 6C20 
 2387      3D20 2564 
 2387      0A00 
 2388               		.section	.progmem.data.__c.3477,"a"
 2391               	__c.3477:
 2392 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2392      656C 6179 
 2392      203D 2025 
 2392      640A 00
 2393               		.section	.progmem.data.__c.3470,"a"
 2396               	__c.3470:
 2397 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2397      6865 656C 
 2397      5F74 696D 
 2397      655F 746F 
 2397      5F6D 6178 
 2398               		.section	.progmem.data.__c.3467,"a"
 2401               	__c.3467:
 2402 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2402      6865 656C 
 2402      5F6D 6178 
 2402      5F73 7065 
 2402      6564 203D 
 2403               		.section	.progmem.data.__c.3464,"a"
 2406               	__c.3464:
 2407 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2407      696D 655F 
 2407      746F 5F6D 
 2407      6178 203D 
 2407      2025 640A 
 2408               		.section	.progmem.data.__c.3461,"a"
 2411               	__c.3461:
 2412 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2412      6178 5F73 
 2412      7065 6564 
 2412      203D 2025 
 2412      640A 00
 2413               		.section	.progmem.data.__c.3458,"a"
 2416               	__c.3458:
 2417 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2417      6E74 6572 
 2417      7661 6C20 
 2417      3D20 2564 
 2417      0A00 
 2418               		.section	.progmem.data.__c.3454,"a"
 2421               	__c.3454:
 2422 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2422      656C 6179 
 2422      203D 2025 
 2422      640A 00
 2423               		.section	.progmem.data.__c.3447,"a"
 2426               	__c.3447:
 2427 0000 0A00      		.string	"\n"
 2428               		.section	.progmem.data.__c.3445,"a"
 2431               	__c.3445:
 2432 0000 2575 00   		.string	"%u"
 2433               		.section	.progmem.data.__c.3443,"a"
 2436               	__c.3443:
 2437 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2437      6865 656C 
 2437      5F74 696D 
 2437      655F 746F 
 2437      5F6D 6178 
 2438               		.section	.progmem.data.__c.3441,"a"
 2441               	__c.3441:
 2442 0000 0A00      		.string	"\n"
 2443               		.section	.progmem.data.__c.3439,"a"
 2446               	__c.3439:
 2447 0000 2575 00   		.string	"%u"
 2448               		.section	.progmem.data.__c.3437,"a"
 2451               	__c.3437:
 2452 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2452      6865 656C 
 2452      5F6D 6178 
 2452      5F73 7065 
 2452      6564 3A20 
 2453               		.section	.progmem.data.__c.3435,"a"
 2456               	__c.3435:
 2457 0000 0A00      		.string	"\n"
 2458               		.section	.progmem.data.__c.3433,"a"
 2461               	__c.3433:
 2462 0000 2575 00   		.string	"%u"
 2463               		.section	.progmem.data.__c.3431,"a"
 2466               	__c.3431:
 2467 0000 343A 2074 		.string	"4: time_to_max: "
 2467      696D 655F 
 2467      746F 5F6D 
 2467      6178 3A20 
 2467      00
 2468               		.section	.progmem.data.__c.3429,"a"
 2471               	__c.3429:
 2472 0000 0A00      		.string	"\n"
 2473               		.section	.progmem.data.__c.3427,"a"
 2476               	__c.3427:
 2477 0000 2575 00   		.string	"%u"
 2478               		.section	.progmem.data.__c.3425,"a"
 2481               	__c.3425:
 2482 0000 333A 206D 		.string	"3: max_speed: "
 2482      6178 5F73 
 2482      7065 6564 
 2482      3A20 00
 2483               		.section	.progmem.data.__c.3423,"a"
 2486               	__c.3423:
 2487 0000 0A00      		.string	"\n"
 2488               		.section	.progmem.data.__c.3421,"a"
 2491               	__c.3421:
 2492 0000 2575 00   		.string	"%u"
 2493               		.section	.progmem.data.__c.3419,"a"
 2496               	__c.3419:
 2497 0000 323A 2069 		.string	"2: interval(ms): "
 2497      6E74 6572 
 2497      7661 6C28 
 2497      6D73 293A 
 2497      2000 
 2498               		.section	.progmem.data.__c.3417,"a"
 2501               	__c.3417:
 2502 0000 0A00      		.string	"\n"
 2503               		.section	.progmem.data.__c.3415,"a"
 2506               	__c.3415:
 2507 0000 2575 00   		.string	"%u"
 2508               		.section	.progmem.data.__c.3413,"a"
 2511               	__c.3413:
 2512 0000 313A 2064 		.string	"1: delay(*10ms): "
 2512      656C 6179 
 2512      282A 3130 
 2512      6D73 293A 
 2512      2000 
 2513               		.section	.progmem.data.__c.3411,"a"
 2516               	__c.3411:
 2517 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 2517      5661 6C75 
 2517      6573 202D 
 2517      0A00 
 2518               		.section	.progmem.data.__c.3531,"a"
 2521               	__c.3531:
 2522 0000 4D3E 00   		.string	"M>"
 2523               		.section	.progmem.data.__c.3529,"a"
 2526               	__c.3529:
 2527 0000 4D25 643E 		.string	"M%d> "
 2527      2000 
 2528               		.section	.progmem.data.__c.3527,"a"
 2531               	__c.3527:
 2532 0000 3F00      		.string	"?"
 2533               		.section	.progmem.data.__c.3524,"a"
 2536               	__c.3524:
 2537 0000 7365 7420 		.string	"set default\n"
 2537      6465 6661 
 2537      756C 740A 
 2537      00
 2538               		.section	.progmem.data.__c.3510,"a"
 2541               	__c.3510:
 2542 0000 433E 2000 		.string	"C> "
 2543               		.section	.progmem.data.__c.3500,"a"
 2546               	__c.3500:
 2547 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 2547      6520 6465 
 2547      6C74 613A 
 2547      2063 7572 
 2547      736F 723D 
 2548               		.section	.progmem.data.__c.3498,"a"
 2551               	__c.3498:
 2552 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 2552      4D6F 7573 
 2552      656B 6579 
 2552      202D 0A45 
 2552      5343 2F71 
 2553               		.section	.progmem.data.__c.3403,"a"
 2556               	__c.3403:
 2557 0000 3F00      		.string	"?"
 2558               		.section	.progmem.data.__c.3400,"a"
 2561               	__c.3400:
 2562 0000 4D3E 2000 		.string	"M> "
 2563               		.section	.progmem.data.__c.3405,"a"
 2566               	__c.3405:
 2567 0000 433E 2000 		.string	"C> "
 2568               		.section	.progmem.data.__c.3549,"a"
 2571               	__c.3549:
 2572 0000 4C25 640A 		.string	"L%d\n"
 2572      00
 2573               		.section	.progmem.data.__c.3341,"a"
 2576               	__c.3341:
 2577 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 2577      725F 7265 
 2577      6164 3332 
 2577      2829 3A20 
 2577      2530 346C 
 2578               		.section	.progmem.data.__c.3339,"a"
 2581               	__c.3339:
 2582 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 2582      6F61 7264 
 2582      5F69 646C 
 2582      653A 2025 
 2582      580A 00
 2583               		.section	.progmem.data.__c.3337,"a"
 2586               	__c.3337:
 2587 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 2587      6F61 7264 
 2587      5F70 726F 
 2587      746F 636F 
 2587      6C3A 2025 
 2588               		.section	.progmem.data.__c.3335,"a"
 2591               	__c.3335:
 2592 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 2592      5F6B 6579 
 2592      626F 6172 
 2592      645F 6C65 
 2592      6473 2829 
 2593               		.section	.progmem.data.__c.3333,"a"
 2596               	__c.3333:
 2597 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 2597      5374 6174 
 2597      7573 202D 
 2597      0A00 
 2598               		.section	.progmem.data.__c.3328,"a"
 2601               	__c.3328:
 2602 0000 4743 433A 		.string	"GCC: 9.3.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 2602      2039 2E33 
 2602      2E30 2041 
 2602      5652 2D4C 
 2602      4942 433A 
 2603               		.section	.progmem.data.__c.3326,"a"
 2606               	__c.3326:
 2607 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND 4096\n"
 2607      4F4E 533A 
 2607      204C 5546 
 2607      4120 4D4F 
 2607      5553 454B 
 2608               		.section	.progmem.data.__c.3324,"a"
 2611               	__c.3324:
 2612 0000 4255 494C 		.string	"BUILD: \"c16683-dirty\" (09:41:59 Oct 18 2021)\n"
 2612      443A 2022 
 2612      6331 3636 
 2612      3833 2D64 
 2612      6972 7479 
 2613               		.section	.progmem.data.__c.3322,"a"
 2616               	__c.3322:
 2617 0000 5649 443A 		.string	"VID: 0xFEED(CH boxMods) PID: 0x3060(Dactyl) VER: 0x0001\n"
 2617      2030 7846 
 2617      4545 4428 
 2617      4348 2062 
 2617      6F78 4D6F 
 2618               		.section	.progmem.data.__c.3320,"a"
 2621               	__c.3320:
 2622 0000 4445 5343 		.string	"DESC: A split ergonomic keyboard for the adventerous makers\n"
 2622      3A20 4120 
 2622      7370 6C69 
 2622      7420 6572 
 2622      676F 6E6F 
 2623               		.section	.progmem.data.__c.3318,"a"
 2626               	__c.3318:
 2627 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 2627      5665 7273 
 2627      696F 6E20 
 2627      2D0A 00
 2628               		.section	.progmem.data.__c.3389,"a"
 2631               	__c.3389:
 2632 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 2632      436F 6E73 
 2632      6F6C 6520 
 2632      2D0A 4553 
 2632      432F 713A 
 2633               		.section	.progmem.data.__c.3313,"a"
 2636               	__c.3313:
 2637 0000 0A09 2D20 		.ascii	"\n\t- Magic -\nD:\tDebug Message Toggle\nX:\tMatrix Debug Mo"
 2637      4D61 6769 
 2637      6320 2D0A 
 2637      443A 0944 
 2637      6562 7567 
 2638 0036 6465 2054 		.ascii	"de Toggle - Show keypresses in matrix grid\nK:\tKeyboard Deb"
 2638      6F67 676C 
 2638      6520 2D20 
 2638      5368 6F77 
 2638      206B 6579 
 2639 0070 7567 2054 		.ascii	"ug Toggle - Show keypress r"
 2639      6F67 676C 
 2639      6520 2D20 
 2639      5368 6F77 
 2639      206B 6579 
 2640 008b 6570 6F72 		.string	"eport\nM:\tDebug Mouse Toggle\nV:\tVersion\nS:\tStatus\nC:\tActivate Console Mode\nF1-F10
 2640      740A 4D3A 
 2640      0944 6562 
 2640      7567 204D 
 2640      6F75 7365 
 2641               		.section	.progmem.data.__c.3384,"a"
 2644               	__c.3384:
 2645 0000 3F00      		.string	"?"
 2646               		.section	.progmem.data.__c.3373,"a"
 2649               	__c.3373:
 2650 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 2650      7365 3A20 
 2650      6F66 660A 
 2650      00
 2651               		.section	.progmem.data.__c.3371,"a"
 2654               	__c.3371:
 2655 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 2655      7365 3A20 
 2655      6F6E 0A00 
 2656               		.section	.progmem.data.__c.3368,"a"
 2659               	__c.3368:
 2660 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 2660      626F 6172 
 2660      643A 206F 
 2660      6666 0A00 
 2661               		.section	.progmem.data.__c.3366,"a"
 2664               	__c.3366:
 2665 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 2665      626F 6172 
 2665      643A 206F 
 2665      6E0A 00
 2666               		.section	.progmem.data.__c.3363,"a"
 2669               	__c.3363:
 2670 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 2670      7269 783A 
 2670      206F 6666 
 2670      0A00 
 2671               		.section	.progmem.data.__c.3361,"a"
 2674               	__c.3361:
 2675 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 2675      7269 783A 
 2675      206F 6E0A 
 2675      00
 2676               		.section	.progmem.data.__c.3358,"a"
 2679               	__c.3358:
 2680 0000 0A64 6562 		.string	"\ndebug: off\n"
 2680      7567 3A20 
 2680      6F66 660A 
 2680      00
 2681               		.section	.progmem.data.__c.3356,"a"
 2684               	__c.3356:
 2685 0000 0A64 6562 		.string	"\ndebug: on\n"
 2685      7567 3A20 
 2685      6F6E 0A00 
 2686               		.section	.progmem.data.__c.3353,"a"
 2689               	__c.3353:
 2690 0000 0A0A 4A75 		.string	"\n\nJumping to bootloader... "
 2690      6D70 696E 
 2690      6720 746F 
 2690      2062 6F6F 
 2690      746C 6F61 
 2691               		.section	.progmem.data.__c.3350,"a"
 2694               	__c.3350:
 2695 0000 433E 2000 		.string	"C> "
 2696               		.section	.bss.mousekey_param,"aw",@nobits
 2699               	mousekey_param:
 2700 0000 00        		.zero	1
 2701               	.global	command_state
 2702               		.section	.bss.command_state,"aw",@nobits
 2705               	command_state:
 2706 0000 00        		.zero	1
 2707               		.text
 2708               	.Letext0:
 2709               		.file 4 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 2710               		.file 5 "./tmk_core/common/report.h"
 2711               		.file 6 "./tmk_core/common/host.h"
 2712               		.file 7 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/lib/avr-gcc/9/gcc/avr/9.3.0/include/stddef.h"
 2713               		.file 8 "./tmk_core/common/avr/xprintf.h"
 2714               		.file 9 "./tmk_core/common/debug.h"
 2715               		.file 10 "./quantum/keycode_config.h"
 2716               		.file 11 "./quantum/keymap.h"
 2717               		.file 12 "./tmk_core/common/timer.h"
 2718               		.file 13 "./tmk_core/common/action_layer.h"
 2719               		.file 14 "./tmk_core/common/action_util.h"
 2720               		.file 15 "./tmk_core/common/command.h"
 2721               		.file 16 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdlib.h"
 2722               		.file 17 "./quantum/process_keycode/process_tap_dance.h"
 2723               		.file 18 "./quantum/quantum.h"
 2724               		.file 19 "./tmk_core/common/mousekey.h"
 2725               		.file 20 "./tmk_core/common/action.h"
 2726               		.file 21 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2551   .progmem.data.__c.3498:0000000000000000 __c.3498
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2546   .progmem.data.__c.3500:0000000000000000 __c.3500
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2421   .progmem.data.__c.3454:0000000000000000 __c.3454
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2416   .progmem.data.__c.3458:0000000000000000 __c.3458
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2411   .progmem.data.__c.3461:0000000000000000 __c.3461
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2406   .progmem.data.__c.3464:0000000000000000 __c.3464
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2401   .progmem.data.__c.3467:0000000000000000 __c.3467
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2396   .progmem.data.__c.3470:0000000000000000 __c.3470
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:407    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2391   .progmem.data.__c.3477:0000000000000000 __c.3477
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2386   .progmem.data.__c.3481:0000000000000000 __c.3481
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2381   .progmem.data.__c.3484:0000000000000000 __c.3484
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2376   .progmem.data.__c.3487:0000000000000000 __c.3487
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2371   .progmem.data.__c.3490:0000000000000000 __c.3490
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2366   .progmem.data.__c.3493:0000000000000000 __c.3493
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:679    .text.switch_default_layer:0000000000000000 switch_default_layer
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2571   .progmem.data.__c.3549:0000000000000000 __c.3549
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:769    .text.command_common:0000000000000000 command_common
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2644   .progmem.data.__c.3384:0000000000000000 __c.3384
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2689   .progmem.data.__c.3353:0000000000000000 __c.3353
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2636   .progmem.data.__c.3313:0000000000000000 __c.3313
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2631   .progmem.data.__c.3389:0000000000000000 __c.3389
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2694   .progmem.data.__c.3350:0000000000000000 __c.3350
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2705   .bss.command_state:0000000000000000 command_state
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2684   .progmem.data.__c.3356:0000000000000000 __c.3356
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2679   .progmem.data.__c.3358:0000000000000000 __c.3358
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2674   .progmem.data.__c.3361:0000000000000000 __c.3361
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2669   .progmem.data.__c.3363:0000000000000000 __c.3363
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2664   .progmem.data.__c.3366:0000000000000000 __c.3366
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2659   .progmem.data.__c.3368:0000000000000000 __c.3368
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2654   .progmem.data.__c.3371:0000000000000000 __c.3371
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2649   .progmem.data.__c.3373:0000000000000000 __c.3373
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2626   .progmem.data.__c.3318:0000000000000000 __c.3318
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2621   .progmem.data.__c.3320:0000000000000000 __c.3320
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2616   .progmem.data.__c.3322:0000000000000000 __c.3322
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2611   .progmem.data.__c.3324:0000000000000000 __c.3324
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2606   .progmem.data.__c.3326:0000000000000000 __c.3326
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2601   .progmem.data.__c.3328:0000000000000000 __c.3328
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2596   .progmem.data.__c.3333:0000000000000000 __c.3333
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2591   .progmem.data.__c.3335:0000000000000000 __c.3335
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2586   .progmem.data.__c.3337:0000000000000000 __c.3337
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2581   .progmem.data.__c.3339:0000000000000000 __c.3339
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2576   .progmem.data.__c.3341:0000000000000000 __c.3341
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1329   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1348   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1363   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1378   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1393   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1408   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1423   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1438   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1453   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1468   .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1483   .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1498   .text.command_extra:0000000000000000 command_extra
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1498   .text.command_extra:0000000000000000 command_extra.localalias
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1522   .text.command_console_extra:0000000000000000 command_console_extra
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1536   .text.numkey2num:0000000000000000 numkey2num
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2352   .rodata.CSWTCH.83:0000000000000000 CSWTCH.83
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:1571   .text.command_proc:0000000000000000 command_proc
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2556   .progmem.data.__c.3403:0000000000000000 __c.3403
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2566   .progmem.data.__c.3405:0000000000000000 __c.3405
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2561   .progmem.data.__c.3400:0000000000000000 __c.3400
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2531   .progmem.data.__c.3527:0000000000000000 __c.3527
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2699   .bss.mousekey_param:0000000000000000 mousekey_param
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2526   .progmem.data.__c.3529:0000000000000000 __c.3529
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2541   .progmem.data.__c.3510:0000000000000000 __c.3510
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2516   .progmem.data.__c.3411:0000000000000000 __c.3411
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2511   .progmem.data.__c.3413:0000000000000000 __c.3413
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2506   .progmem.data.__c.3415:0000000000000000 __c.3415
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2501   .progmem.data.__c.3417:0000000000000000 __c.3417
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2496   .progmem.data.__c.3419:0000000000000000 __c.3419
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2491   .progmem.data.__c.3421:0000000000000000 __c.3421
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2486   .progmem.data.__c.3423:0000000000000000 __c.3423
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2481   .progmem.data.__c.3425:0000000000000000 __c.3425
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2476   .progmem.data.__c.3427:0000000000000000 __c.3427
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2471   .progmem.data.__c.3429:0000000000000000 __c.3429
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2466   .progmem.data.__c.3431:0000000000000000 __c.3431
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2461   .progmem.data.__c.3433:0000000000000000 __c.3433
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2456   .progmem.data.__c.3435:0000000000000000 __c.3435
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2451   .progmem.data.__c.3437:0000000000000000 __c.3437
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2446   .progmem.data.__c.3439:0000000000000000 __c.3439
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2441   .progmem.data.__c.3441:0000000000000000 __c.3441
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2436   .progmem.data.__c.3443:0000000000000000 __c.3443
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2431   .progmem.data.__c.3445:0000000000000000 __c.3445
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2426   .progmem.data.__c.3447:0000000000000000 __c.3447
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2536   .progmem.data.__c.3524:0000000000000000 __c.3524
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//ccAr8xGi.s:2521   .progmem.data.__c.3531:0000000000000000 __c.3531

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
__tablejump2__
bootloader_jump
debug_config
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
keyboard_report
__do_copy_data
__do_clear_bss
