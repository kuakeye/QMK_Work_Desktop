   1               		.file	"command.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.mousekey_console_help,"ax",@progbits
  12               	mousekey_console_help:
  13               	.LFB40:
  14               		.file 1 "./tmk_core/common/command.c"
   1:./tmk_core/common/command.c **** /*
   2:./tmk_core/common/command.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/command.c **** 
   4:./tmk_core/common/command.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/command.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/command.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/command.c **** (at your option) any later version.
   8:./tmk_core/common/command.c **** 
   9:./tmk_core/common/command.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/command.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/command.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/command.c **** GNU General Public License for more details.
  13:./tmk_core/common/command.c **** 
  14:./tmk_core/common/command.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/command.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/command.c **** */
  17:./tmk_core/common/command.c **** #include <stdint.h>
  18:./tmk_core/common/command.c **** #include <stdbool.h>
  19:./tmk_core/common/command.c **** #include "wait.h"
  20:./tmk_core/common/command.c **** #include "keycode.h"
  21:./tmk_core/common/command.c **** #include "host.h"
  22:./tmk_core/common/command.c **** #include "keymap.h"
  23:./tmk_core/common/command.c **** #include "print.h"
  24:./tmk_core/common/command.c **** #include "debug.h"
  25:./tmk_core/common/command.c **** #include "util.h"
  26:./tmk_core/common/command.c **** #include "timer.h"
  27:./tmk_core/common/command.c **** #include "keyboard.h"
  28:./tmk_core/common/command.c **** #include "bootloader.h"
  29:./tmk_core/common/command.c **** #include "action_layer.h"
  30:./tmk_core/common/command.c **** #include "action_util.h"
  31:./tmk_core/common/command.c **** #include "eeconfig.h"
  32:./tmk_core/common/command.c **** #include "sleep_led.h"
  33:./tmk_core/common/command.c **** #include "led.h"
  34:./tmk_core/common/command.c **** #include "command.h"
  35:./tmk_core/common/command.c **** #include "backlight.h"
  36:./tmk_core/common/command.c **** #include "quantum.h"
  37:./tmk_core/common/command.c **** #include "version.h"
  38:./tmk_core/common/command.c **** 
  39:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  40:./tmk_core/common/command.c **** #include "mousekey.h"
  41:./tmk_core/common/command.c **** #endif
  42:./tmk_core/common/command.c **** 
  43:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
  44:./tmk_core/common/command.c **** 	#include "usb_keyboard.h"
  45:./tmk_core/common/command.c **** 		#ifdef EXTRAKEY_ENABLE
  46:./tmk_core/common/command.c **** 		#include "usb_extra.h"
  47:./tmk_core/common/command.c **** 	#endif
  48:./tmk_core/common/command.c **** #endif
  49:./tmk_core/common/command.c **** 
  50:./tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
  51:./tmk_core/common/command.c **** 	#include "usbdrv.h"
  52:./tmk_core/common/command.c **** #endif
  53:./tmk_core/common/command.c **** 
  54:./tmk_core/common/command.c **** #ifdef AUDIO_ENABLE
  55:./tmk_core/common/command.c ****     #include "audio.h"
  56:./tmk_core/common/command.c **** #endif /* AUDIO_ENABLE */
  57:./tmk_core/common/command.c **** 
  58:./tmk_core/common/command.c **** 
  59:./tmk_core/common/command.c **** static bool command_common(uint8_t code);
  60:./tmk_core/common/command.c **** static void command_common_help(void);
  61:./tmk_core/common/command.c **** static void print_version(void);
  62:./tmk_core/common/command.c **** static void print_status(void);
  63:./tmk_core/common/command.c **** static bool command_console(uint8_t code);
  64:./tmk_core/common/command.c **** static void command_console_help(void);
  65:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  66:./tmk_core/common/command.c **** static bool mousekey_console(uint8_t code);
  67:./tmk_core/common/command.c **** static void mousekey_console_help(void);
  68:./tmk_core/common/command.c **** #endif
  69:./tmk_core/common/command.c **** 
  70:./tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer);
  71:./tmk_core/common/command.c **** 
  72:./tmk_core/common/command.c **** 
  73:./tmk_core/common/command.c **** command_state_t command_state = ONESHOT;
  74:./tmk_core/common/command.c **** 
  75:./tmk_core/common/command.c **** 
  76:./tmk_core/common/command.c **** bool command_proc(uint8_t code)
  77:./tmk_core/common/command.c **** {
  78:./tmk_core/common/command.c ****     switch (command_state) {
  79:./tmk_core/common/command.c ****         case ONESHOT:
  80:./tmk_core/common/command.c ****             if (!IS_COMMAND())
  81:./tmk_core/common/command.c ****                 return false;
  82:./tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
  83:./tmk_core/common/command.c ****             break;
  84:./tmk_core/common/command.c ****         case CONSOLE:
  85:./tmk_core/common/command.c ****             if (IS_COMMAND())
  86:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
  87:./tmk_core/common/command.c ****             else
  88:./tmk_core/common/command.c ****                 return (command_console_extra(code) || command_console(code));
  89:./tmk_core/common/command.c ****             break;
  90:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
  91:./tmk_core/common/command.c ****         case MOUSEKEY:
  92:./tmk_core/common/command.c ****             mousekey_console(code);
  93:./tmk_core/common/command.c ****             break;
  94:./tmk_core/common/command.c **** #endif
  95:./tmk_core/common/command.c ****         default:
  96:./tmk_core/common/command.c ****             command_state = ONESHOT;
  97:./tmk_core/common/command.c ****             return false;
  98:./tmk_core/common/command.c ****     }
  99:./tmk_core/common/command.c ****     return true;
 100:./tmk_core/common/command.c **** }
 101:./tmk_core/common/command.c **** 
 102:./tmk_core/common/command.c **** /* TODO: Refactoring is needed. */
 103:./tmk_core/common/command.c **** /* This allows to define extra commands. return false when not processed. */
 104:./tmk_core/common/command.c **** bool command_extra(uint8_t code) __attribute__ ((weak));
 105:./tmk_core/common/command.c **** bool command_extra(uint8_t code)
 106:./tmk_core/common/command.c **** {
 107:./tmk_core/common/command.c ****     (void)code;
 108:./tmk_core/common/command.c ****     return false;
 109:./tmk_core/common/command.c **** }
 110:./tmk_core/common/command.c **** 
 111:./tmk_core/common/command.c **** bool command_console_extra(uint8_t code) __attribute__ ((weak));
 112:./tmk_core/common/command.c **** bool command_console_extra(uint8_t code)
 113:./tmk_core/common/command.c **** {
 114:./tmk_core/common/command.c ****     (void)code;
 115:./tmk_core/common/command.c ****     return false;
 116:./tmk_core/common/command.c **** }
 117:./tmk_core/common/command.c **** 
 118:./tmk_core/common/command.c **** 
 119:./tmk_core/common/command.c **** /***********************************************************
 120:./tmk_core/common/command.c ****  * Command common
 121:./tmk_core/common/command.c ****  ***********************************************************/
 122:./tmk_core/common/command.c **** static void command_common_help(void)
 123:./tmk_core/common/command.c **** {
 124:./tmk_core/common/command.c **** 	print(                            "\n\t- Magic -\n"
 125:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 126:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG_MATRIX) ":	Matrix Debug Mode Toggle - Show keypresses in matrix grid\n"
 127:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG_KBD   ) ":	Keyboard Debug Toggle - Show keypress report\n"
 128:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG_MOUSE ) ":	Debug Mouse Toggle\n"
 129:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_VERSION     ) ":	Version\n"
 130:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_STATUS      ) ":	Status\n"
 131:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_CONSOLE     ) ":	Activate Console Mode\n"
 132:./tmk_core/common/command.c **** 
 133:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 134:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER0      ) ":	Switch to Layer 0\n"
 135:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER1      ) ":	Switch to Layer 1\n"
 136:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER2      ) ":	Switch to Layer 2\n"
 137:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER3      ) ":	Switch to Layer 3\n"
 138:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER4      ) ":	Switch to Layer 4\n"
 139:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER5      ) ":	Switch to Layer 5\n"
 140:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER6      ) ":	Switch to Layer 6\n"
 141:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER7      ) ":	Switch to Layer 7\n"
 142:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER8      ) ":	Switch to Layer 8\n"
 143:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER9      ) ":	Switch to Layer 9\n"
 144:./tmk_core/common/command.c **** #endif
 145:./tmk_core/common/command.c **** 
 146:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 147:./tmk_core/common/command.c **** 		                            "F1-F10:	Switch to Layer 0-9 (F10 = L0)\n"
 148:./tmk_core/common/command.c **** #endif
 149:./tmk_core/common/command.c **** 
 150:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 151:./tmk_core/common/command.c **** 		                            "0-9:	Switch to Layer 0-9\n"
 152:./tmk_core/common/command.c **** #endif
 153:./tmk_core/common/command.c **** 
 154:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER0_ALT1 ) ":	Switch to Layer 0 (alternate key 1)\n"
 155:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LAYER0_ALT2 ) ":	Switch to Layer 0 (alternate key 2)\n"
 156:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_BOOTLOADER  ) ":	Jump to Bootloader (Reset)\n"
 157:./tmk_core/common/command.c **** 
 158:./tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 159:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_LOCK        ) ":	Lock\n"
 160:./tmk_core/common/command.c **** #endif
 161:./tmk_core/common/command.c **** 
 162:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 163:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_EEPROM      ) ":	Print EEPROM Settings\n"
 164:./tmk_core/common/command.c **** #endif
 165:./tmk_core/common/command.c **** 
 166:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 167:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_NKRO        ) ":	NKRO Toggle\n"
 168:./tmk_core/common/command.c **** #endif
 169:./tmk_core/common/command.c **** 
 170:./tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 171:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_SLEEP_LED   ) ":	Sleep LED Test\n"
 172:./tmk_core/common/command.c **** #endif
 173:./tmk_core/common/command.c ****     );
 174:./tmk_core/common/command.c **** }
 175:./tmk_core/common/command.c **** 
 176:./tmk_core/common/command.c **** static void print_version(void)
 177:./tmk_core/common/command.c **** {
 178:./tmk_core/common/command.c **** 	// print version & information
 179:./tmk_core/common/command.c ****     print("\n\t- Version -\n");
 180:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 181:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 182:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 183:./tmk_core/common/command.c ****           "VER: " STR(DEVICE_VER) "\n");
 184:./tmk_core/common/command.c ****     print("BUILD: " STR(QMK_VERSION) " (" __TIME__ " " __DATE__ ")\n");
 185:./tmk_core/common/command.c **** 
 186:./tmk_core/common/command.c ****     /* build options */
 187:./tmk_core/common/command.c ****     print("OPTIONS:"
 188:./tmk_core/common/command.c **** 
 189:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 190:./tmk_core/common/command.c **** 	    " PJRC"
 191:./tmk_core/common/command.c **** #endif
 192:./tmk_core/common/command.c **** #ifdef PROTOCOL_LUFA
 193:./tmk_core/common/command.c **** 	    " LUFA"
 194:./tmk_core/common/command.c **** #endif
 195:./tmk_core/common/command.c **** #ifdef PROTOCOL_VUSB
 196:./tmk_core/common/command.c **** 	    " VUSB"
 197:./tmk_core/common/command.c **** #endif
 198:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 199:./tmk_core/common/command.c **** 	    " BOOTMAGIC"
 200:./tmk_core/common/command.c **** #endif
 201:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 202:./tmk_core/common/command.c **** 	    " MOUSEKEY"
 203:./tmk_core/common/command.c **** #endif
 204:./tmk_core/common/command.c **** #ifdef EXTRAKEY_ENABLE
 205:./tmk_core/common/command.c **** 	    " EXTRAKEY"
 206:./tmk_core/common/command.c **** #endif
 207:./tmk_core/common/command.c **** #ifdef CONSOLE_ENABLE
 208:./tmk_core/common/command.c **** 	    " CONSOLE"
 209:./tmk_core/common/command.c **** #endif
 210:./tmk_core/common/command.c **** #ifdef COMMAND_ENABLE
 211:./tmk_core/common/command.c **** 	    " COMMAND"
 212:./tmk_core/common/command.c **** #endif
 213:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 214:./tmk_core/common/command.c **** 	    " NKRO"
 215:./tmk_core/common/command.c **** #endif
 216:./tmk_core/common/command.c **** #ifdef KEYMAP_SECTION_ENABLE
 217:./tmk_core/common/command.c **** 	    " KEYMAP_SECTION"
 218:./tmk_core/common/command.c **** #endif
 219:./tmk_core/common/command.c **** 
 220:./tmk_core/common/command.c **** 	    " " STR(BOOTLOADER_SIZE) "\n");
 221:./tmk_core/common/command.c **** 
 222:./tmk_core/common/command.c ****     print("GCC: " STR(__GNUC__) "." STR(__GNUC_MINOR__) "." STR(__GNUC_PATCHLEVEL__)
 223:./tmk_core/common/command.c **** #if defined(__AVR__)
 224:./tmk_core/common/command.c ****           " AVR-LIBC: " __AVR_LIBC_VERSION_STRING__
 225:./tmk_core/common/command.c ****           " AVR_ARCH: avr" STR(__AVR_ARCH__)
 226:./tmk_core/common/command.c **** #endif
 227:./tmk_core/common/command.c **** 		  "\n");
 228:./tmk_core/common/command.c **** 
 229:./tmk_core/common/command.c **** 	return;
 230:./tmk_core/common/command.c **** }
 231:./tmk_core/common/command.c **** 
 232:./tmk_core/common/command.c **** static void print_status(void)
 233:./tmk_core/common/command.c **** {
 234:./tmk_core/common/command.c **** 
 235:./tmk_core/common/command.c ****     print("\n\t- Status -\n");
 236:./tmk_core/common/command.c **** 
 237:./tmk_core/common/command.c ****     print_val_hex8(host_keyboard_leds());
 238:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 239:./tmk_core/common/command.c ****     // these aren't set on the V-USB protocol, so we just ignore them for now
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_protocol);
 241:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 242:./tmk_core/common/command.c **** #endif
 243:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 244:./tmk_core/common/command.c ****     print_val_hex8(keymap_config.nkro);
 245:./tmk_core/common/command.c **** #endif
 246:./tmk_core/common/command.c ****     print_val_hex32(timer_read32());
 247:./tmk_core/common/command.c **** 
 248:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 249:./tmk_core/common/command.c ****     print_val_hex8(UDCON);
 250:./tmk_core/common/command.c ****     print_val_hex8(UDIEN);
 251:./tmk_core/common/command.c ****     print_val_hex8(UDINT);
 252:./tmk_core/common/command.c ****     print_val_hex8(usb_keyboard_leds);
 253:./tmk_core/common/command.c ****     print_val_hex8(usb_keyboard_idle_count);
 254:./tmk_core/common/command.c **** #endif
 255:./tmk_core/common/command.c **** 
 256:./tmk_core/common/command.c **** #ifdef PROTOCOL_PJRC
 257:./tmk_core/common/command.c **** #   if USB_COUNT_SOF
 258:./tmk_core/common/command.c ****     print_val_hex8(usbSofCount);
 259:./tmk_core/common/command.c **** #   endif
 260:./tmk_core/common/command.c **** #endif
 261:./tmk_core/common/command.c **** 	return;
 262:./tmk_core/common/command.c **** }
 263:./tmk_core/common/command.c **** 
 264:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 265:./tmk_core/common/command.c **** static void print_eeconfig(void)
 266:./tmk_core/common/command.c **** {
 267:./tmk_core/common/command.c **** 
 268:./tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 269:./tmk_core/common/command.c **** #if !defined(NO_PRINT) && !defined(USER_PRINT)
 270:./tmk_core/common/command.c **** 
 271:./tmk_core/common/command.c ****     print("default_layer: "); print_dec(eeconfig_read_default_layer()); print("\n");
 272:./tmk_core/common/command.c **** 
 273:./tmk_core/common/command.c ****     debug_config_t dc;
 274:./tmk_core/common/command.c ****     dc.raw = eeconfig_read_debug();
 275:./tmk_core/common/command.c ****     print("debug_config.raw: "); print_hex8(dc.raw); print("\n");
 276:./tmk_core/common/command.c ****     print(".enable: "); print_dec(dc.enable); print("\n");
 277:./tmk_core/common/command.c ****     print(".matrix: "); print_dec(dc.matrix); print("\n");
 278:./tmk_core/common/command.c ****     print(".keyboard: "); print_dec(dc.keyboard); print("\n");
 279:./tmk_core/common/command.c ****     print(".mouse: "); print_dec(dc.mouse); print("\n");
 280:./tmk_core/common/command.c **** 
 281:./tmk_core/common/command.c ****     keymap_config_t kc;
 282:./tmk_core/common/command.c ****     kc.raw = eeconfig_read_keymap();
 283:./tmk_core/common/command.c ****     print("keymap_config.raw: "); print_hex8(kc.raw); print("\n");
 284:./tmk_core/common/command.c ****     print(".swap_control_capslock: "); print_dec(kc.swap_control_capslock); print("\n");
 285:./tmk_core/common/command.c ****     print(".capslock_to_control: "); print_dec(kc.capslock_to_control); print("\n");
 286:./tmk_core/common/command.c ****     print(".swap_lalt_lgui: "); print_dec(kc.swap_lalt_lgui); print("\n");
 287:./tmk_core/common/command.c ****     print(".swap_ralt_rgui: "); print_dec(kc.swap_ralt_rgui); print("\n");
 288:./tmk_core/common/command.c ****     print(".no_gui: "); print_dec(kc.no_gui); print("\n");
 289:./tmk_core/common/command.c ****     print(".swap_grave_esc: "); print_dec(kc.swap_grave_esc); print("\n");
 290:./tmk_core/common/command.c ****     print(".swap_backslash_backspace: "); print_dec(kc.swap_backslash_backspace); print("\n");
 291:./tmk_core/common/command.c ****     print(".nkro: "); print_dec(kc.nkro); print("\n");
 292:./tmk_core/common/command.c **** 
 293:./tmk_core/common/command.c **** #ifdef BACKLIGHT_ENABLE
 294:./tmk_core/common/command.c ****     backlight_config_t bc;
 295:./tmk_core/common/command.c ****     bc.raw = eeconfig_read_backlight();
 296:./tmk_core/common/command.c ****     print("backlight_config.raw: "); print_hex8(bc.raw); print("\n");
 297:./tmk_core/common/command.c ****     print(".enable: "); print_dec(bc.enable); print("\n");
 298:./tmk_core/common/command.c ****     print(".level: "); print_dec(bc.level); print("\n");
 299:./tmk_core/common/command.c **** #endif /* BACKLIGHT_ENABLE */
 300:./tmk_core/common/command.c **** 
 301:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 302:./tmk_core/common/command.c **** 
 303:./tmk_core/common/command.c **** }
 304:./tmk_core/common/command.c **** #endif /* BOOTMAGIC_ENABLE */
 305:./tmk_core/common/command.c **** 
 306:./tmk_core/common/command.c **** static bool command_common(uint8_t code)
 307:./tmk_core/common/command.c **** {
 308:./tmk_core/common/command.c **** 
 309:./tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 310:./tmk_core/common/command.c ****     static host_driver_t *host_driver = 0;
 311:./tmk_core/common/command.c **** #endif
 312:./tmk_core/common/command.c **** 
 313:./tmk_core/common/command.c ****     switch (code) {
 314:./tmk_core/common/command.c **** 
 315:./tmk_core/common/command.c **** #ifdef SLEEP_LED_ENABLE
 316:./tmk_core/common/command.c **** 
 317:./tmk_core/common/command.c **** 		// test breathing sleep LED
 318:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_SLEEP_LED):
 319:./tmk_core/common/command.c ****             print("Sleep LED Test\n");
 320:./tmk_core/common/command.c ****             sleep_led_toggle();
 321:./tmk_core/common/command.c ****             led_set(host_keyboard_leds());
 322:./tmk_core/common/command.c ****             break;
 323:./tmk_core/common/command.c **** #endif
 324:./tmk_core/common/command.c **** 
 325:./tmk_core/common/command.c **** #ifdef BOOTMAGIC_ENABLE
 326:./tmk_core/common/command.c **** 
 327:./tmk_core/common/command.c **** 		// print stored eeprom config
 328:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_EEPROM):
 329:./tmk_core/common/command.c ****             print("eeconfig:\n");
 330:./tmk_core/common/command.c ****             print_eeconfig();
 331:./tmk_core/common/command.c ****             break;
 332:./tmk_core/common/command.c **** #endif
 333:./tmk_core/common/command.c **** 
 334:./tmk_core/common/command.c **** #ifdef KEYBOARD_LOCK_ENABLE
 335:./tmk_core/common/command.c **** 
 336:./tmk_core/common/command.c **** 		// lock/unlock keyboard
 337:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_LOCK):
 338:./tmk_core/common/command.c ****             if (host_get_driver()) {
 339:./tmk_core/common/command.c ****                 host_driver = host_get_driver();
 340:./tmk_core/common/command.c ****                 clear_keyboard();
 341:./tmk_core/common/command.c ****                 host_set_driver(0);
 342:./tmk_core/common/command.c ****                 print("Locked.\n");
 343:./tmk_core/common/command.c ****             } else {
 344:./tmk_core/common/command.c ****                 host_set_driver(host_driver);
 345:./tmk_core/common/command.c ****                 print("Unlocked.\n");
 346:./tmk_core/common/command.c ****             }
 347:./tmk_core/common/command.c ****             break;
 348:./tmk_core/common/command.c **** #endif
 349:./tmk_core/common/command.c **** 
 350:./tmk_core/common/command.c **** 		// print help
 351:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP1):
 352:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_HELP2):
 353:./tmk_core/common/command.c ****             command_common_help();
 354:./tmk_core/common/command.c ****             break;
 355:./tmk_core/common/command.c **** 
 356:./tmk_core/common/command.c **** 		// activate console
 357:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_CONSOLE):
 358:./tmk_core/common/command.c ****             debug_matrix   = false;
 359:./tmk_core/common/command.c ****             debug_keyboard = false;
 360:./tmk_core/common/command.c ****             debug_mouse    = false;
 361:./tmk_core/common/command.c ****             debug_enable   = false;
 362:./tmk_core/common/command.c ****             command_console_help();
 363:./tmk_core/common/command.c ****             print("C> ");
 364:./tmk_core/common/command.c ****             command_state = CONSOLE;
 365:./tmk_core/common/command.c ****             break;
 366:./tmk_core/common/command.c **** 
 367:./tmk_core/common/command.c ****         // jump to bootloader
 368:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_BOOTLOADER):
 369:./tmk_core/common/command.c ****             clear_keyboard(); // clear to prevent stuck keys
 370:./tmk_core/common/command.c ****             print("\n\nJumping to bootloader... ");
 371:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 372:./tmk_core/common/command.c **** 	            stop_all_notes();
 373:./tmk_core/common/command.c ****                 shutdown_user();
 374:./tmk_core/common/command.c ****             #else
 375:./tmk_core/common/command.c **** 	            wait_ms(1000);
 376:./tmk_core/common/command.c ****             #endif
 377:./tmk_core/common/command.c ****             bootloader_jump(); // not return
 378:./tmk_core/common/command.c ****             break;
 379:./tmk_core/common/command.c **** 
 380:./tmk_core/common/command.c ****         // debug toggle
 381:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG):
 382:./tmk_core/common/command.c ****             debug_enable = !debug_enable;
 383:./tmk_core/common/command.c ****             if (debug_enable) {
 384:./tmk_core/common/command.c ****                 print("\ndebug: on\n");
 385:./tmk_core/common/command.c ****             } else {
 386:./tmk_core/common/command.c ****                 print("\ndebug: off\n");
 387:./tmk_core/common/command.c ****                 debug_matrix   = false;
 388:./tmk_core/common/command.c ****                 debug_keyboard = false;
 389:./tmk_core/common/command.c ****                 debug_mouse    = false;
 390:./tmk_core/common/command.c ****             }
 391:./tmk_core/common/command.c ****             break;
 392:./tmk_core/common/command.c **** 
 393:./tmk_core/common/command.c ****         // debug matrix toggle
 394:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MATRIX):
 395:./tmk_core/common/command.c ****             debug_matrix = !debug_matrix;
 396:./tmk_core/common/command.c ****             if (debug_matrix) {
 397:./tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 398:./tmk_core/common/command.c ****                 debug_enable = true;
 399:./tmk_core/common/command.c ****             } else {
 400:./tmk_core/common/command.c ****                 print("\nmatrix: off\n");
 401:./tmk_core/common/command.c ****             }
 402:./tmk_core/common/command.c ****             break;
 403:./tmk_core/common/command.c **** 
 404:./tmk_core/common/command.c ****         // debug keyboard toggle
 405:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_KBD):
 406:./tmk_core/common/command.c ****             debug_keyboard = !debug_keyboard;
 407:./tmk_core/common/command.c ****             if (debug_keyboard) {
 408:./tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 409:./tmk_core/common/command.c ****                 debug_enable = true;
 410:./tmk_core/common/command.c ****             } else {
 411:./tmk_core/common/command.c ****                 print("\nkeyboard: off\n");
 412:./tmk_core/common/command.c ****             }
 413:./tmk_core/common/command.c ****             break;
 414:./tmk_core/common/command.c **** 
 415:./tmk_core/common/command.c ****         // debug mouse toggle
 416:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_DEBUG_MOUSE):
 417:./tmk_core/common/command.c ****             debug_mouse = !debug_mouse;
 418:./tmk_core/common/command.c ****             if (debug_mouse) {
 419:./tmk_core/common/command.c ****                 print("\nmouse: on\n");
 420:./tmk_core/common/command.c ****                 debug_enable = true;
 421:./tmk_core/common/command.c ****             } else {
 422:./tmk_core/common/command.c **** 				print("\nmouse: off\n");
 423:./tmk_core/common/command.c ****             }
 424:./tmk_core/common/command.c ****             break;
 425:./tmk_core/common/command.c **** 
 426:./tmk_core/common/command.c **** 		// print version
 427:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_VERSION):
 428:./tmk_core/common/command.c ****         	print_version();
 429:./tmk_core/common/command.c **** 		    break;
 430:./tmk_core/common/command.c **** 
 431:./tmk_core/common/command.c **** 		// print status
 432:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_STATUS):
 433:./tmk_core/common/command.c **** 			print_status();
 434:./tmk_core/common/command.c ****             break;
 435:./tmk_core/common/command.c **** 
 436:./tmk_core/common/command.c **** #ifdef NKRO_ENABLE
 437:./tmk_core/common/command.c **** 
 438:./tmk_core/common/command.c **** 		// NKRO toggle
 439:./tmk_core/common/command.c ****         case MAGIC_KC(MAGIC_KEY_NKRO):
 440:./tmk_core/common/command.c ****             clear_keyboard(); // clear to prevent stuck keys
 441:./tmk_core/common/command.c ****             keymap_config.nkro = !keymap_config.nkro;
 442:./tmk_core/common/command.c ****             if (keymap_config.nkro) {
 443:./tmk_core/common/command.c ****                 print("NKRO: on\n");
 444:./tmk_core/common/command.c ****             } else {
 445:./tmk_core/common/command.c ****                 print("NKRO: off\n");
 446:./tmk_core/common/command.c ****             }
 447:./tmk_core/common/command.c ****             break;
 448:./tmk_core/common/command.c **** #endif
 449:./tmk_core/common/command.c **** 
 450:./tmk_core/common/command.c **** 		// switch layers
 451:./tmk_core/common/command.c **** 
 452:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER0_ALT1):
 453:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER0_ALT2):
 454:./tmk_core/common/command.c ****             switch_default_layer(0);
 455:./tmk_core/common/command.c ****             break;
 456:./tmk_core/common/command.c **** 
 457:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_CUSTOM
 458:./tmk_core/common/command.c **** 
 459:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER0):
 460:./tmk_core/common/command.c ****             switch_default_layer(0);
 461:./tmk_core/common/command.c ****             break;
 462:./tmk_core/common/command.c **** 
 463:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER1):
 464:./tmk_core/common/command.c ****             switch_default_layer(1);
 465:./tmk_core/common/command.c ****             break;
 466:./tmk_core/common/command.c **** 
 467:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER2):
 468:./tmk_core/common/command.c ****             switch_default_layer(2);
 469:./tmk_core/common/command.c ****             break;
 470:./tmk_core/common/command.c **** 
 471:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER3):
 472:./tmk_core/common/command.c ****             switch_default_layer(3);
 473:./tmk_core/common/command.c ****             break;
 474:./tmk_core/common/command.c **** 
 475:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER4):
 476:./tmk_core/common/command.c ****             switch_default_layer(4);
 477:./tmk_core/common/command.c ****             break;
 478:./tmk_core/common/command.c **** 
 479:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER5):
 480:./tmk_core/common/command.c ****             switch_default_layer(5);
 481:./tmk_core/common/command.c ****             break;
 482:./tmk_core/common/command.c **** 
 483:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER6):
 484:./tmk_core/common/command.c ****             switch_default_layer(6);
 485:./tmk_core/common/command.c ****             break;
 486:./tmk_core/common/command.c **** 
 487:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER7):
 488:./tmk_core/common/command.c ****             switch_default_layer(7);
 489:./tmk_core/common/command.c ****             break;
 490:./tmk_core/common/command.c **** 
 491:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER8):
 492:./tmk_core/common/command.c ****             switch_default_layer(8);
 493:./tmk_core/common/command.c ****             break;
 494:./tmk_core/common/command.c **** 
 495:./tmk_core/common/command.c **** 		case MAGIC_KC(MAGIC_KEY_LAYER9):
 496:./tmk_core/common/command.c ****             switch_default_layer(9);
 497:./tmk_core/common/command.c ****             break;
 498:./tmk_core/common/command.c **** #endif
 499:./tmk_core/common/command.c **** 
 500:./tmk_core/common/command.c **** 
 501:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_FKEYS
 502:./tmk_core/common/command.c **** 
 503:./tmk_core/common/command.c ****         case KC_F1 ... KC_F9:
 504:./tmk_core/common/command.c ****             switch_default_layer((code - KC_F1) + 1);
 505:./tmk_core/common/command.c ****             break;
 506:./tmk_core/common/command.c ****         case KC_F10:
 507:./tmk_core/common/command.c ****             switch_default_layer(0);
 508:./tmk_core/common/command.c ****             break;
 509:./tmk_core/common/command.c **** #endif
 510:./tmk_core/common/command.c **** 
 511:./tmk_core/common/command.c **** #if MAGIC_KEY_SWITCH_LAYER_WITH_NKEYS
 512:./tmk_core/common/command.c **** 
 513:./tmk_core/common/command.c ****         case KC_1 ... KC_9:
 514:./tmk_core/common/command.c ****             switch_default_layer((code - KC_1) + 1);
 515:./tmk_core/common/command.c ****             break;
 516:./tmk_core/common/command.c ****         case KC_0:
 517:./tmk_core/common/command.c ****             switch_default_layer(0);
 518:./tmk_core/common/command.c ****             break;
 519:./tmk_core/common/command.c **** #endif
 520:./tmk_core/common/command.c **** 
 521:./tmk_core/common/command.c ****         default:
 522:./tmk_core/common/command.c ****             print("?");
 523:./tmk_core/common/command.c ****             return false;
 524:./tmk_core/common/command.c ****     }
 525:./tmk_core/common/command.c ****     return true;
 526:./tmk_core/common/command.c **** }
 527:./tmk_core/common/command.c **** 
 528:./tmk_core/common/command.c **** 
 529:./tmk_core/common/command.c **** /***********************************************************
 530:./tmk_core/common/command.c ****  * Command console
 531:./tmk_core/common/command.c ****  ***********************************************************/
 532:./tmk_core/common/command.c **** static void command_console_help(void)
 533:./tmk_core/common/command.c **** {
 534:./tmk_core/common/command.c ****     print("\n\t- Console -\n"
 535:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 536:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 537:./tmk_core/common/command.c ****           "m:	mousekey\n"
 538:./tmk_core/common/command.c **** #endif
 539:./tmk_core/common/command.c ****     );
 540:./tmk_core/common/command.c **** }
 541:./tmk_core/common/command.c **** 
 542:./tmk_core/common/command.c **** static bool command_console(uint8_t code)
 543:./tmk_core/common/command.c **** {
 544:./tmk_core/common/command.c ****     switch (code) {
 545:./tmk_core/common/command.c ****         case KC_H:
 546:./tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 547:./tmk_core/common/command.c ****             command_console_help();
 548:./tmk_core/common/command.c ****             break;
 549:./tmk_core/common/command.c ****         case KC_Q:
 550:./tmk_core/common/command.c ****         case KC_ESC:
 551:./tmk_core/common/command.c ****             command_state = ONESHOT;
 552:./tmk_core/common/command.c ****             return false;
 553:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 554:./tmk_core/common/command.c ****         case KC_M:
 555:./tmk_core/common/command.c ****             mousekey_console_help();
 556:./tmk_core/common/command.c ****             print("M> ");
 557:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 558:./tmk_core/common/command.c ****             return true;
 559:./tmk_core/common/command.c **** #endif
 560:./tmk_core/common/command.c ****         default:
 561:./tmk_core/common/command.c ****             print("?");
 562:./tmk_core/common/command.c ****             return false;
 563:./tmk_core/common/command.c ****     }
 564:./tmk_core/common/command.c ****     print("C> ");
 565:./tmk_core/common/command.c ****     return true;
 566:./tmk_core/common/command.c **** }
 567:./tmk_core/common/command.c **** 
 568:./tmk_core/common/command.c **** 
 569:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 570:./tmk_core/common/command.c **** /***********************************************************
 571:./tmk_core/common/command.c ****  * Mousekey console
 572:./tmk_core/common/command.c ****  ***********************************************************/
 573:./tmk_core/common/command.c **** static uint8_t mousekey_param = 0;
 574:./tmk_core/common/command.c **** 
 575:./tmk_core/common/command.c **** static void mousekey_param_print(void)
 576:./tmk_core/common/command.c **** {
 577:./tmk_core/common/command.c **** // Print these variables if NO_PRINT or USER_PRINT are not defined.
 578:./tmk_core/common/command.c **** #if !defined(NO_PRINT) && !defined(USER_PRINT)
 579:./tmk_core/common/command.c ****     print("\n\t- Values -\n");
 580:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 581:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 582:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 583:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 584:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 585:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 586:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 587:./tmk_core/common/command.c **** 
 588:./tmk_core/common/command.c **** }
 589:./tmk_core/common/command.c **** 
 590:./tmk_core/common/command.c **** //#define PRINT_SET_VAL(v)  print(#v " = "); print_dec(v); print("\n");
 591:./tmk_core/common/command.c **** #define PRINT_SET_VAL(v)  xprintf(#v " = %d\n", (v))
 592:./tmk_core/common/command.c **** static void mousekey_param_inc(uint8_t param, uint8_t inc)
 593:./tmk_core/common/command.c **** {
 594:./tmk_core/common/command.c ****     switch (param) {
 595:./tmk_core/common/command.c ****         case 1:
 596:./tmk_core/common/command.c ****             if (mk_delay + inc < UINT8_MAX)
 597:./tmk_core/common/command.c ****                 mk_delay += inc;
 598:./tmk_core/common/command.c ****             else
 599:./tmk_core/common/command.c ****                 mk_delay = UINT8_MAX;
 600:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 601:./tmk_core/common/command.c ****             break;
 602:./tmk_core/common/command.c ****         case 2:
 603:./tmk_core/common/command.c ****             if (mk_interval + inc < UINT8_MAX)
 604:./tmk_core/common/command.c ****                 mk_interval += inc;
 605:./tmk_core/common/command.c ****             else
 606:./tmk_core/common/command.c ****                 mk_interval = UINT8_MAX;
 607:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 608:./tmk_core/common/command.c ****             break;
 609:./tmk_core/common/command.c ****         case 3:
 610:./tmk_core/common/command.c ****             if (mk_max_speed + inc < UINT8_MAX)
 611:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 612:./tmk_core/common/command.c ****             else
 613:./tmk_core/common/command.c ****                 mk_max_speed = UINT8_MAX;
 614:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 615:./tmk_core/common/command.c ****             break;
 616:./tmk_core/common/command.c ****         case 4:
 617:./tmk_core/common/command.c ****             if (mk_time_to_max + inc < UINT8_MAX)
 618:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 619:./tmk_core/common/command.c ****             else
 620:./tmk_core/common/command.c ****                 mk_time_to_max = UINT8_MAX;
 621:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 622:./tmk_core/common/command.c ****             break;
 623:./tmk_core/common/command.c ****         case 5:
 624:./tmk_core/common/command.c ****             if (mk_wheel_max_speed + inc < UINT8_MAX)
 625:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 626:./tmk_core/common/command.c ****             else
 627:./tmk_core/common/command.c ****                 mk_wheel_max_speed = UINT8_MAX;
 628:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 629:./tmk_core/common/command.c ****             break;
 630:./tmk_core/common/command.c ****         case 6:
 631:./tmk_core/common/command.c ****             if (mk_wheel_time_to_max + inc < UINT8_MAX)
 632:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 633:./tmk_core/common/command.c ****             else
 634:./tmk_core/common/command.c ****                 mk_wheel_time_to_max = UINT8_MAX;
 635:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 636:./tmk_core/common/command.c ****             break;
 637:./tmk_core/common/command.c ****     }
 638:./tmk_core/common/command.c **** }
 639:./tmk_core/common/command.c **** 
 640:./tmk_core/common/command.c **** static void mousekey_param_dec(uint8_t param, uint8_t dec)
 641:./tmk_core/common/command.c **** {
 642:./tmk_core/common/command.c ****     switch (param) {
 643:./tmk_core/common/command.c ****         case 1:
 644:./tmk_core/common/command.c ****             if (mk_delay > dec)
 645:./tmk_core/common/command.c ****                 mk_delay -= dec;
 646:./tmk_core/common/command.c ****             else
 647:./tmk_core/common/command.c ****                 mk_delay = 0;
 648:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 649:./tmk_core/common/command.c ****             break;
 650:./tmk_core/common/command.c ****         case 2:
 651:./tmk_core/common/command.c ****             if (mk_interval > dec)
 652:./tmk_core/common/command.c ****                 mk_interval -= dec;
 653:./tmk_core/common/command.c ****             else
 654:./tmk_core/common/command.c ****                 mk_interval = 0;
 655:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 656:./tmk_core/common/command.c ****             break;
 657:./tmk_core/common/command.c ****         case 3:
 658:./tmk_core/common/command.c ****             if (mk_max_speed > dec)
 659:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 660:./tmk_core/common/command.c ****             else
 661:./tmk_core/common/command.c ****                 mk_max_speed = 0;
 662:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 663:./tmk_core/common/command.c ****             break;
 664:./tmk_core/common/command.c ****         case 4:
 665:./tmk_core/common/command.c ****             if (mk_time_to_max > dec)
 666:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 667:./tmk_core/common/command.c ****             else
 668:./tmk_core/common/command.c ****                 mk_time_to_max = 0;
 669:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 670:./tmk_core/common/command.c ****             break;
 671:./tmk_core/common/command.c ****         case 5:
 672:./tmk_core/common/command.c ****             if (mk_wheel_max_speed > dec)
 673:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 674:./tmk_core/common/command.c ****             else
 675:./tmk_core/common/command.c ****                 mk_wheel_max_speed = 0;
 676:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 677:./tmk_core/common/command.c ****             break;
 678:./tmk_core/common/command.c ****         case 6:
 679:./tmk_core/common/command.c ****             if (mk_wheel_time_to_max > dec)
 680:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 681:./tmk_core/common/command.c ****             else
 682:./tmk_core/common/command.c ****                 mk_wheel_time_to_max = 0;
 683:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 684:./tmk_core/common/command.c ****             break;
 685:./tmk_core/common/command.c ****     }
 686:./tmk_core/common/command.c **** }
 687:./tmk_core/common/command.c **** 
 688:./tmk_core/common/command.c **** static void mousekey_console_help(void)
 689:./tmk_core/common/command.c **** {
  15               		.loc 1 689 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 690:./tmk_core/common/command.c ****     print("\n\t- Mousekey -\n"
  21               		.loc 1 690 5 view .LVU1
  22               	.LBB15:
  23               		.loc 1 690 5 view .LVU2
  24               		.loc 1 690 5 view .LVU3
  25               	.LBE15:
  26 0000 80E0      		ldi r24,lo8(__c.3549)
  27 0002 90E0      		ldi r25,hi8(__c.3549)
  28 0004 0E94 0000 		call xputs
  29               	.LVL0:
 691:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 692:./tmk_core/common/command.c ****           "1:	delay(*10ms)\n"
 693:./tmk_core/common/command.c ****           "2:	interval(ms)\n"
 694:./tmk_core/common/command.c ****           "3:	max_speed\n"
 695:./tmk_core/common/command.c ****           "4:	time_to_max\n"
 696:./tmk_core/common/command.c ****           "5:	wheel_max_speed\n"
 697:./tmk_core/common/command.c ****           "6:	wheel_time_to_max\n"
 698:./tmk_core/common/command.c ****           "\n"
 699:./tmk_core/common/command.c ****           "p:	print values\n"
 700:./tmk_core/common/command.c ****           "d:	set defaults\n"
 701:./tmk_core/common/command.c ****           "up:	+1\n"
 702:./tmk_core/common/command.c ****           "down:	-1\n"
 703:./tmk_core/common/command.c ****           "pgup:	+10\n"
 704:./tmk_core/common/command.c ****           "pgdown:	-10\n"
 705:./tmk_core/common/command.c ****           "\n"
 706:./tmk_core/common/command.c ****           "speed = delta * max_speed * (repeat / time_to_max)\n");
 707:./tmk_core/common/command.c ****     xprintf("where delta: cursor=%d, wheel=%d\n"
  30               		.loc 1 707 5 view .LVU4
  31               	.LBB16:
  32               		.loc 1 707 5 view .LVU5
  33               		.loc 1 707 5 view .LVU6
  34               	.LBE16:
  35 0008 1F92      		push __zero_reg__
  36               	.LCFI0:
  37               		.cfi_def_cfa_offset 3
  38 000a 81E0      		ldi r24,lo8(1)
  39 000c 8F93      		push r24
  40               	.LCFI1:
  41               		.cfi_def_cfa_offset 4
  42 000e 1F92      		push __zero_reg__
  43               	.LCFI2:
  44               		.cfi_def_cfa_offset 5
  45 0010 85E0      		ldi r24,lo8(5)
  46 0012 8F93      		push r24
  47               	.LCFI3:
  48               		.cfi_def_cfa_offset 6
  49 0014 80E0      		ldi r24,lo8(__c.3551)
  50 0016 90E0      		ldi r25,hi8(__c.3551)
  51 0018 9F93      		push r25
  52               	.LCFI4:
  53               		.cfi_def_cfa_offset 7
  54 001a 8F93      		push r24
  55               	.LCFI5:
  56               		.cfi_def_cfa_offset 8
  57 001c 0E94 0000 		call __xprintf
  58               	.LVL1:
 708:./tmk_core/common/command.c ****             "See http://en.wikipedia.org/wiki/Mouse_keys\n", MOUSEKEY_MOVE_DELTA,  MOUSEKEY_WHEEL_D
 709:./tmk_core/common/command.c **** }
  59               		.loc 1 709 1 is_stmt 0 view .LVU7
  60 0020 0F90      		pop __tmp_reg__
  61 0022 0F90      		pop __tmp_reg__
  62 0024 0F90      		pop __tmp_reg__
  63 0026 0F90      		pop __tmp_reg__
  64 0028 0F90      		pop __tmp_reg__
  65 002a 0F90      		pop __tmp_reg__
  66               	.LCFI6:
  67               		.cfi_def_cfa_offset 2
  68               	/* epilogue start */
  69 002c 0895      		ret
  70               		.cfi_endproc
  71               	.LFE40:
  73               		.section	.text.mousekey_param_inc,"ax",@progbits
  75               	mousekey_param_inc:
  76               	.LVL2:
  77               	.LFB38:
 593:./tmk_core/common/command.c ****     switch (param) {
  78               		.loc 1 593 1 is_stmt 1 view -0
  79               		.cfi_startproc
  80               	/* prologue: function */
  81               	/* frame size = 0 */
  82               	/* stack size = 0 */
  83               	.L__stack_usage = 0
 594:./tmk_core/common/command.c ****         case 1:
  84               		.loc 1 594 5 view .LVU9
  85 0000 8330      		cpi r24,lo8(3)
  86 0002 01F4      		brne .+2
  87 0004 00C0      		rjmp .L3
  88 0006 00F4      		brsh .L4
  89 0008 8130      		cpi r24,lo8(1)
  90 000a 01F0      		breq .L5
  91 000c 8230      		cpi r24,lo8(2)
  92 000e 01F0      		breq .L6
  93 0010 0895      		ret
  94               	.L4:
  95 0012 8530      		cpi r24,lo8(5)
  96 0014 01F4      		brne .+2
  97 0016 00C0      		rjmp .L8
  98 0018 00F4      		brsh .+2
  99 001a 00C0      		rjmp .L9
 100 001c 8630      		cpi r24,lo8(6)
 101 001e 01F4      		brne .+2
 102 0020 00C0      		rjmp .L10
 103 0022 0895      		ret
 104               	.L5:
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 105               		.loc 1 596 13 view .LVU10
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 106               		.loc 1 596 26 is_stmt 0 view .LVU11
 107 0024 8091 0000 		lds r24,mk_delay
 108               	.LVL3:
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 109               		.loc 1 596 26 view .LVU12
 110 0028 482F      		mov r20,r24
 111 002a 460F      		add r20,r22
 112 002c 5527      		clr r21
 113 002e 551F      		rol r21
 596:./tmk_core/common/command.c ****                 mk_delay += inc;
 114               		.loc 1 596 16 view .LVU13
 115 0030 4F3F      		cpi r20,-1
 116 0032 5105      		cpc r21,__zero_reg__
 117 0034 04F4      		brge .L11
 597:./tmk_core/common/command.c ****             else
 118               		.loc 1 597 17 is_stmt 1 view .LVU14
 597:./tmk_core/common/command.c ****             else
 119               		.loc 1 597 26 is_stmt 0 view .LVU15
 120 0036 680F      		add r22,r24
 121               	.LVL4:
 597:./tmk_core/common/command.c ****             else
 122               		.loc 1 597 26 view .LVU16
 123 0038 6093 0000 		sts mk_delay,r22
 124               	.L12:
 600:./tmk_core/common/command.c ****             break;
 125               		.loc 1 600 13 is_stmt 1 view .LVU17
 126               	.LBB17:
 600:./tmk_core/common/command.c ****             break;
 127               		.loc 1 600 13 view .LVU18
 600:./tmk_core/common/command.c ****             break;
 128               		.loc 1 600 13 view .LVU19
 129               	.LBE17:
 130 003c 8091 0000 		lds r24,mk_delay
 131 0040 1F92      		push __zero_reg__
 132               	.LCFI7:
 133               		.cfi_def_cfa_offset 3
 134 0042 8F93      		push r24
 135               	.LCFI8:
 136               		.cfi_def_cfa_offset 4
 137 0044 80E0      		ldi r24,lo8(__c.3505)
 138 0046 90E0      		ldi r25,hi8(__c.3505)
 139               	.L23:
 635:./tmk_core/common/command.c ****             break;
 140               		.loc 1 635 13 is_stmt 0 view .LVU20
 141 0048 9F93      		push r25
 142               	.LCFI9:
 143               		.cfi_def_cfa_offset 5
 144 004a 8F93      		push r24
 145               	.LCFI10:
 146               		.cfi_def_cfa_offset 6
 147 004c 0E94 0000 		call __xprintf
 148               	.LVL5:
 636:./tmk_core/common/command.c ****     }
 149               		.loc 1 636 13 is_stmt 1 view .LVU21
 150 0050 0F90      		pop __tmp_reg__
 151 0052 0F90      		pop __tmp_reg__
 152 0054 0F90      		pop __tmp_reg__
 153 0056 0F90      		pop __tmp_reg__
 154               	.LCFI11:
 155               		.cfi_def_cfa_offset 2
 156               	/* epilogue start */
 638:./tmk_core/common/command.c **** 
 157               		.loc 1 638 1 is_stmt 0 view .LVU22
 158 0058 0895      		ret
 159               	.LVL6:
 160               	.L11:
 599:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 161               		.loc 1 599 17 is_stmt 1 view .LVU23
 599:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 162               		.loc 1 599 26 is_stmt 0 view .LVU24
 163 005a 8FEF      		ldi r24,lo8(-1)
 164 005c 8093 0000 		sts mk_delay,r24
 165 0060 00C0      		rjmp .L12
 166               	.LVL7:
 167               	.L6:
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 168               		.loc 1 603 13 is_stmt 1 view .LVU25
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 169               		.loc 1 603 29 is_stmt 0 view .LVU26
 170 0062 8091 0000 		lds r24,mk_interval
 171               	.LVL8:
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 172               		.loc 1 603 29 view .LVU27
 173 0066 482F      		mov r20,r24
 174 0068 460F      		add r20,r22
 175 006a 5527      		clr r21
 176 006c 551F      		rol r21
 603:./tmk_core/common/command.c ****                 mk_interval += inc;
 177               		.loc 1 603 16 view .LVU28
 178 006e 4F3F      		cpi r20,-1
 179 0070 5105      		cpc r21,__zero_reg__
 180 0072 04F4      		brge .L13
 604:./tmk_core/common/command.c ****             else
 181               		.loc 1 604 17 is_stmt 1 view .LVU29
 604:./tmk_core/common/command.c ****             else
 182               		.loc 1 604 29 is_stmt 0 view .LVU30
 183 0074 680F      		add r22,r24
 184               	.LVL9:
 604:./tmk_core/common/command.c ****             else
 185               		.loc 1 604 29 view .LVU31
 186 0076 6093 0000 		sts mk_interval,r22
 187               	.L14:
 607:./tmk_core/common/command.c ****             break;
 188               		.loc 1 607 13 is_stmt 1 view .LVU32
 189               	.LBB18:
 607:./tmk_core/common/command.c ****             break;
 190               		.loc 1 607 13 view .LVU33
 607:./tmk_core/common/command.c ****             break;
 191               		.loc 1 607 13 view .LVU34
 192               	.LBE18:
 193 007a 8091 0000 		lds r24,mk_interval
 194 007e 1F92      		push __zero_reg__
 195               	.LCFI12:
 196               		.cfi_remember_state
 197               		.cfi_def_cfa_offset 3
 198 0080 8F93      		push r24
 199               	.LCFI13:
 200               		.cfi_def_cfa_offset 4
 201 0082 80E0      		ldi r24,lo8(__c.3509)
 202 0084 90E0      		ldi r25,hi8(__c.3509)
 203 0086 00C0      		rjmp .L23
 204               	.LVL10:
 205               	.L13:
 206               	.LCFI14:
 207               		.cfi_restore_state
 606:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 208               		.loc 1 606 17 view .LVU35
 606:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 209               		.loc 1 606 29 is_stmt 0 view .LVU36
 210 0088 8FEF      		ldi r24,lo8(-1)
 211 008a 8093 0000 		sts mk_interval,r24
 212 008e 00C0      		rjmp .L14
 213               	.LVL11:
 214               	.L3:
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 215               		.loc 1 610 13 is_stmt 1 view .LVU37
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 216               		.loc 1 610 30 is_stmt 0 view .LVU38
 217 0090 8091 0000 		lds r24,mk_max_speed
 218               	.LVL12:
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 219               		.loc 1 610 30 view .LVU39
 220 0094 482F      		mov r20,r24
 221 0096 460F      		add r20,r22
 222 0098 5527      		clr r21
 223 009a 551F      		rol r21
 610:./tmk_core/common/command.c ****                 mk_max_speed += inc;
 224               		.loc 1 610 16 view .LVU40
 225 009c 4F3F      		cpi r20,-1
 226 009e 5105      		cpc r21,__zero_reg__
 227 00a0 04F4      		brge .L15
 611:./tmk_core/common/command.c ****             else
 228               		.loc 1 611 17 is_stmt 1 view .LVU41
 611:./tmk_core/common/command.c ****             else
 229               		.loc 1 611 30 is_stmt 0 view .LVU42
 230 00a2 680F      		add r22,r24
 231               	.LVL13:
 611:./tmk_core/common/command.c ****             else
 232               		.loc 1 611 30 view .LVU43
 233 00a4 6093 0000 		sts mk_max_speed,r22
 234               	.L16:
 614:./tmk_core/common/command.c ****             break;
 235               		.loc 1 614 13 is_stmt 1 view .LVU44
 236               	.LBB19:
 614:./tmk_core/common/command.c ****             break;
 237               		.loc 1 614 13 view .LVU45
 614:./tmk_core/common/command.c ****             break;
 238               		.loc 1 614 13 view .LVU46
 239               	.LBE19:
 240 00a8 8091 0000 		lds r24,mk_max_speed
 241 00ac 1F92      		push __zero_reg__
 242               	.LCFI15:
 243               		.cfi_remember_state
 244               		.cfi_def_cfa_offset 3
 245 00ae 8F93      		push r24
 246               	.LCFI16:
 247               		.cfi_def_cfa_offset 4
 248 00b0 80E0      		ldi r24,lo8(__c.3512)
 249 00b2 90E0      		ldi r25,hi8(__c.3512)
 250 00b4 00C0      		rjmp .L23
 251               	.LVL14:
 252               	.L15:
 253               	.LCFI17:
 254               		.cfi_restore_state
 613:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 255               		.loc 1 613 17 view .LVU47
 613:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 256               		.loc 1 613 30 is_stmt 0 view .LVU48
 257 00b6 8FEF      		ldi r24,lo8(-1)
 258 00b8 8093 0000 		sts mk_max_speed,r24
 259 00bc 00C0      		rjmp .L16
 260               	.LVL15:
 261               	.L9:
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 262               		.loc 1 617 13 is_stmt 1 view .LVU49
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 263               		.loc 1 617 32 is_stmt 0 view .LVU50
 264 00be 8091 0000 		lds r24,mk_time_to_max
 265               	.LVL16:
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 266               		.loc 1 617 32 view .LVU51
 267 00c2 482F      		mov r20,r24
 268 00c4 460F      		add r20,r22
 269 00c6 5527      		clr r21
 270 00c8 551F      		rol r21
 617:./tmk_core/common/command.c ****                 mk_time_to_max += inc;
 271               		.loc 1 617 16 view .LVU52
 272 00ca 4F3F      		cpi r20,-1
 273 00cc 5105      		cpc r21,__zero_reg__
 274 00ce 04F4      		brge .L17
 618:./tmk_core/common/command.c ****             else
 275               		.loc 1 618 17 is_stmt 1 view .LVU53
 618:./tmk_core/common/command.c ****             else
 276               		.loc 1 618 32 is_stmt 0 view .LVU54
 277 00d0 680F      		add r22,r24
 278               	.LVL17:
 618:./tmk_core/common/command.c ****             else
 279               		.loc 1 618 32 view .LVU55
 280 00d2 6093 0000 		sts mk_time_to_max,r22
 281               	.L18:
 621:./tmk_core/common/command.c ****             break;
 282               		.loc 1 621 13 is_stmt 1 view .LVU56
 283               	.LBB20:
 621:./tmk_core/common/command.c ****             break;
 284               		.loc 1 621 13 view .LVU57
 621:./tmk_core/common/command.c ****             break;
 285               		.loc 1 621 13 view .LVU58
 286               	.LBE20:
 287 00d6 8091 0000 		lds r24,mk_time_to_max
 288 00da 1F92      		push __zero_reg__
 289               	.LCFI18:
 290               		.cfi_remember_state
 291               		.cfi_def_cfa_offset 3
 292 00dc 8F93      		push r24
 293               	.LCFI19:
 294               		.cfi_def_cfa_offset 4
 295 00de 80E0      		ldi r24,lo8(__c.3515)
 296 00e0 90E0      		ldi r25,hi8(__c.3515)
 297 00e2 00C0      		rjmp .L23
 298               	.LVL18:
 299               	.L17:
 300               	.LCFI20:
 301               		.cfi_restore_state
 620:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 302               		.loc 1 620 17 view .LVU59
 620:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 303               		.loc 1 620 32 is_stmt 0 view .LVU60
 304 00e4 8FEF      		ldi r24,lo8(-1)
 305 00e6 8093 0000 		sts mk_time_to_max,r24
 306 00ea 00C0      		rjmp .L18
 307               	.LVL19:
 308               	.L8:
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 309               		.loc 1 624 13 is_stmt 1 view .LVU61
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 310               		.loc 1 624 36 is_stmt 0 view .LVU62
 311 00ec 8091 0000 		lds r24,mk_wheel_max_speed
 312               	.LVL20:
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 313               		.loc 1 624 36 view .LVU63
 314 00f0 482F      		mov r20,r24
 315 00f2 460F      		add r20,r22
 316 00f4 5527      		clr r21
 317 00f6 551F      		rol r21
 624:./tmk_core/common/command.c ****                 mk_wheel_max_speed += inc;
 318               		.loc 1 624 16 view .LVU64
 319 00f8 4F3F      		cpi r20,-1
 320 00fa 5105      		cpc r21,__zero_reg__
 321 00fc 04F4      		brge .L19
 625:./tmk_core/common/command.c ****             else
 322               		.loc 1 625 17 is_stmt 1 view .LVU65
 625:./tmk_core/common/command.c ****             else
 323               		.loc 1 625 36 is_stmt 0 view .LVU66
 324 00fe 680F      		add r22,r24
 325               	.LVL21:
 625:./tmk_core/common/command.c ****             else
 326               		.loc 1 625 36 view .LVU67
 327 0100 6093 0000 		sts mk_wheel_max_speed,r22
 328               	.L20:
 628:./tmk_core/common/command.c ****             break;
 329               		.loc 1 628 13 is_stmt 1 view .LVU68
 330               	.LBB21:
 628:./tmk_core/common/command.c ****             break;
 331               		.loc 1 628 13 view .LVU69
 628:./tmk_core/common/command.c ****             break;
 332               		.loc 1 628 13 view .LVU70
 333               	.LBE21:
 334 0104 8091 0000 		lds r24,mk_wheel_max_speed
 335 0108 1F92      		push __zero_reg__
 336               	.LCFI21:
 337               		.cfi_remember_state
 338               		.cfi_def_cfa_offset 3
 339 010a 8F93      		push r24
 340               	.LCFI22:
 341               		.cfi_def_cfa_offset 4
 342 010c 80E0      		ldi r24,lo8(__c.3518)
 343 010e 90E0      		ldi r25,hi8(__c.3518)
 344 0110 00C0      		rjmp .L23
 345               	.LVL22:
 346               	.L19:
 347               	.LCFI23:
 348               		.cfi_restore_state
 627:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 349               		.loc 1 627 17 view .LVU71
 627:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 350               		.loc 1 627 36 is_stmt 0 view .LVU72
 351 0112 8FEF      		ldi r24,lo8(-1)
 352 0114 8093 0000 		sts mk_wheel_max_speed,r24
 353 0118 00C0      		rjmp .L20
 354               	.LVL23:
 355               	.L10:
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 356               		.loc 1 631 13 is_stmt 1 view .LVU73
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 357               		.loc 1 631 38 is_stmt 0 view .LVU74
 358 011a 8091 0000 		lds r24,mk_wheel_time_to_max
 359               	.LVL24:
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 360               		.loc 1 631 38 view .LVU75
 361 011e 482F      		mov r20,r24
 362 0120 460F      		add r20,r22
 363 0122 5527      		clr r21
 364 0124 551F      		rol r21
 631:./tmk_core/common/command.c ****                 mk_wheel_time_to_max += inc;
 365               		.loc 1 631 16 view .LVU76
 366 0126 4F3F      		cpi r20,-1
 367 0128 5105      		cpc r21,__zero_reg__
 368 012a 04F4      		brge .L21
 632:./tmk_core/common/command.c ****             else
 369               		.loc 1 632 17 is_stmt 1 view .LVU77
 632:./tmk_core/common/command.c ****             else
 370               		.loc 1 632 38 is_stmt 0 view .LVU78
 371 012c 680F      		add r22,r24
 372               	.LVL25:
 632:./tmk_core/common/command.c ****             else
 373               		.loc 1 632 38 view .LVU79
 374 012e 6093 0000 		sts mk_wheel_time_to_max,r22
 375               	.L22:
 635:./tmk_core/common/command.c ****             break;
 376               		.loc 1 635 13 is_stmt 1 view .LVU80
 377               	.LBB22:
 635:./tmk_core/common/command.c ****             break;
 378               		.loc 1 635 13 view .LVU81
 635:./tmk_core/common/command.c ****             break;
 379               		.loc 1 635 13 view .LVU82
 380               	.LBE22:
 381 0132 8091 0000 		lds r24,mk_wheel_time_to_max
 382 0136 1F92      		push __zero_reg__
 383               	.LCFI24:
 384               		.cfi_remember_state
 385               		.cfi_def_cfa_offset 3
 386 0138 8F93      		push r24
 387               	.LCFI25:
 388               		.cfi_def_cfa_offset 4
 389 013a 80E0      		ldi r24,lo8(__c.3521)
 390 013c 90E0      		ldi r25,hi8(__c.3521)
 391 013e 00C0      		rjmp .L23
 392               	.LVL26:
 393               	.L21:
 394               	.LCFI26:
 395               		.cfi_restore_state
 634:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 396               		.loc 1 634 17 view .LVU83
 634:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 397               		.loc 1 634 38 is_stmt 0 view .LVU84
 398 0140 8FEF      		ldi r24,lo8(-1)
 399 0142 8093 0000 		sts mk_wheel_time_to_max,r24
 400 0146 00C0      		rjmp .L22
 401               		.cfi_endproc
 402               	.LFE38:
 404               		.section	.text.mousekey_param_dec,"ax",@progbits
 406               	mousekey_param_dec:
 407               	.LVL27:
 408               	.LFB39:
 641:./tmk_core/common/command.c ****     switch (param) {
 409               		.loc 1 641 1 is_stmt 1 view -0
 410               		.cfi_startproc
 411               	/* prologue: function */
 412               	/* frame size = 0 */
 413               	/* stack size = 0 */
 414               	.L__stack_usage = 0
 642:./tmk_core/common/command.c ****         case 1:
 415               		.loc 1 642 5 view .LVU86
 416 0000 8330      		cpi r24,lo8(3)
 417 0002 01F0      		breq .L25
 418 0004 00F4      		brsh .L26
 419 0006 8130      		cpi r24,lo8(1)
 420 0008 01F0      		breq .L27
 421 000a 8230      		cpi r24,lo8(2)
 422 000c 01F0      		breq .L28
 423 000e 0895      		ret
 424               	.L26:
 425 0010 8530      		cpi r24,lo8(5)
 426 0012 01F4      		brne .+2
 427 0014 00C0      		rjmp .L30
 428 0016 00F4      		brsh .+2
 429 0018 00C0      		rjmp .L31
 430 001a 8630      		cpi r24,lo8(6)
 431 001c 01F4      		brne .+2
 432 001e 00C0      		rjmp .L32
 433 0020 0895      		ret
 434               	.L27:
 644:./tmk_core/common/command.c ****                 mk_delay -= dec;
 435               		.loc 1 644 13 view .LVU87
 644:./tmk_core/common/command.c ****                 mk_delay -= dec;
 436               		.loc 1 644 26 is_stmt 0 view .LVU88
 437 0022 8091 0000 		lds r24,mk_delay
 438               	.LVL28:
 644:./tmk_core/common/command.c ****                 mk_delay -= dec;
 439               		.loc 1 644 16 view .LVU89
 440 0026 6817      		cp r22,r24
 441 0028 00F4      		brsh .L33
 645:./tmk_core/common/command.c ****             else
 442               		.loc 1 645 17 is_stmt 1 view .LVU90
 645:./tmk_core/common/command.c ****             else
 443               		.loc 1 645 26 is_stmt 0 view .LVU91
 444 002a 861B      		sub r24,r22
 445 002c 8093 0000 		sts mk_delay,r24
 446               	.L34:
 648:./tmk_core/common/command.c ****             break;
 447               		.loc 1 648 13 is_stmt 1 view .LVU92
 448               	.LBB23:
 648:./tmk_core/common/command.c ****             break;
 449               		.loc 1 648 13 view .LVU93
 648:./tmk_core/common/command.c ****             break;
 450               		.loc 1 648 13 view .LVU94
 451               	.LBE23:
 452 0030 8091 0000 		lds r24,mk_delay
 453 0034 1F92      		push __zero_reg__
 454               	.LCFI27:
 455               		.cfi_def_cfa_offset 3
 456 0036 8F93      		push r24
 457               	.LCFI28:
 458               		.cfi_def_cfa_offset 4
 459 0038 80E0      		ldi r24,lo8(__c.3528)
 460 003a 90E0      		ldi r25,hi8(__c.3528)
 461               	.L45:
 683:./tmk_core/common/command.c ****             break;
 462               		.loc 1 683 13 is_stmt 0 view .LVU95
 463 003c 9F93      		push r25
 464               	.LCFI29:
 465               		.cfi_def_cfa_offset 5
 466 003e 8F93      		push r24
 467               	.LCFI30:
 468               		.cfi_def_cfa_offset 6
 469 0040 0E94 0000 		call __xprintf
 470               	.LVL29:
 684:./tmk_core/common/command.c ****     }
 471               		.loc 1 684 13 is_stmt 1 view .LVU96
 472 0044 0F90      		pop __tmp_reg__
 473 0046 0F90      		pop __tmp_reg__
 474 0048 0F90      		pop __tmp_reg__
 475 004a 0F90      		pop __tmp_reg__
 476               	.LCFI31:
 477               		.cfi_def_cfa_offset 2
 478               	/* epilogue start */
 686:./tmk_core/common/command.c **** 
 479               		.loc 1 686 1 is_stmt 0 view .LVU97
 480 004c 0895      		ret
 481               	.LVL30:
 482               	.L33:
 647:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 483               		.loc 1 647 17 is_stmt 1 view .LVU98
 647:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_delay);
 484               		.loc 1 647 26 is_stmt 0 view .LVU99
 485 004e 1092 0000 		sts mk_delay,__zero_reg__
 486 0052 00C0      		rjmp .L34
 487               	.LVL31:
 488               	.L28:
 651:./tmk_core/common/command.c ****                 mk_interval -= dec;
 489               		.loc 1 651 13 is_stmt 1 view .LVU100
 651:./tmk_core/common/command.c ****                 mk_interval -= dec;
 490               		.loc 1 651 29 is_stmt 0 view .LVU101
 491 0054 8091 0000 		lds r24,mk_interval
 492               	.LVL32:
 651:./tmk_core/common/command.c ****                 mk_interval -= dec;
 493               		.loc 1 651 16 view .LVU102
 494 0058 6817      		cp r22,r24
 495 005a 00F4      		brsh .L35
 652:./tmk_core/common/command.c ****             else
 496               		.loc 1 652 17 is_stmt 1 view .LVU103
 652:./tmk_core/common/command.c ****             else
 497               		.loc 1 652 29 is_stmt 0 view .LVU104
 498 005c 861B      		sub r24,r22
 499 005e 8093 0000 		sts mk_interval,r24
 500               	.L36:
 655:./tmk_core/common/command.c ****             break;
 501               		.loc 1 655 13 is_stmt 1 view .LVU105
 502               	.LBB24:
 655:./tmk_core/common/command.c ****             break;
 503               		.loc 1 655 13 view .LVU106
 655:./tmk_core/common/command.c ****             break;
 504               		.loc 1 655 13 view .LVU107
 505               	.LBE24:
 506 0062 8091 0000 		lds r24,mk_interval
 507 0066 1F92      		push __zero_reg__
 508               	.LCFI32:
 509               		.cfi_remember_state
 510               		.cfi_def_cfa_offset 3
 511 0068 8F93      		push r24
 512               	.LCFI33:
 513               		.cfi_def_cfa_offset 4
 514 006a 80E0      		ldi r24,lo8(__c.3532)
 515 006c 90E0      		ldi r25,hi8(__c.3532)
 516 006e 00C0      		rjmp .L45
 517               	.L35:
 518               	.LCFI34:
 519               		.cfi_restore_state
 654:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 520               		.loc 1 654 17 view .LVU108
 654:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_interval);
 521               		.loc 1 654 29 is_stmt 0 view .LVU109
 522 0070 1092 0000 		sts mk_interval,__zero_reg__
 523 0074 00C0      		rjmp .L36
 524               	.LVL33:
 525               	.L25:
 658:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 526               		.loc 1 658 13 is_stmt 1 view .LVU110
 658:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 527               		.loc 1 658 30 is_stmt 0 view .LVU111
 528 0076 8091 0000 		lds r24,mk_max_speed
 529               	.LVL34:
 658:./tmk_core/common/command.c ****                 mk_max_speed -= dec;
 530               		.loc 1 658 16 view .LVU112
 531 007a 6817      		cp r22,r24
 532 007c 00F4      		brsh .L37
 659:./tmk_core/common/command.c ****             else
 533               		.loc 1 659 17 is_stmt 1 view .LVU113
 659:./tmk_core/common/command.c ****             else
 534               		.loc 1 659 30 is_stmt 0 view .LVU114
 535 007e 861B      		sub r24,r22
 536 0080 8093 0000 		sts mk_max_speed,r24
 537               	.L38:
 662:./tmk_core/common/command.c ****             break;
 538               		.loc 1 662 13 is_stmt 1 view .LVU115
 539               	.LBB25:
 662:./tmk_core/common/command.c ****             break;
 540               		.loc 1 662 13 view .LVU116
 662:./tmk_core/common/command.c ****             break;
 541               		.loc 1 662 13 view .LVU117
 542               	.LBE25:
 543 0084 8091 0000 		lds r24,mk_max_speed
 544 0088 1F92      		push __zero_reg__
 545               	.LCFI35:
 546               		.cfi_remember_state
 547               		.cfi_def_cfa_offset 3
 548 008a 8F93      		push r24
 549               	.LCFI36:
 550               		.cfi_def_cfa_offset 4
 551 008c 80E0      		ldi r24,lo8(__c.3535)
 552 008e 90E0      		ldi r25,hi8(__c.3535)
 553 0090 00C0      		rjmp .L45
 554               	.L37:
 555               	.LCFI37:
 556               		.cfi_restore_state
 661:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 557               		.loc 1 661 17 view .LVU118
 661:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_max_speed);
 558               		.loc 1 661 30 is_stmt 0 view .LVU119
 559 0092 1092 0000 		sts mk_max_speed,__zero_reg__
 560 0096 00C0      		rjmp .L38
 561               	.LVL35:
 562               	.L31:
 665:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 563               		.loc 1 665 13 is_stmt 1 view .LVU120
 665:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 564               		.loc 1 665 32 is_stmt 0 view .LVU121
 565 0098 8091 0000 		lds r24,mk_time_to_max
 566               	.LVL36:
 665:./tmk_core/common/command.c ****                 mk_time_to_max -= dec;
 567               		.loc 1 665 16 view .LVU122
 568 009c 6817      		cp r22,r24
 569 009e 00F4      		brsh .L39
 666:./tmk_core/common/command.c ****             else
 570               		.loc 1 666 17 is_stmt 1 view .LVU123
 666:./tmk_core/common/command.c ****             else
 571               		.loc 1 666 32 is_stmt 0 view .LVU124
 572 00a0 861B      		sub r24,r22
 573 00a2 8093 0000 		sts mk_time_to_max,r24
 574               	.L40:
 669:./tmk_core/common/command.c ****             break;
 575               		.loc 1 669 13 is_stmt 1 view .LVU125
 576               	.LBB26:
 669:./tmk_core/common/command.c ****             break;
 577               		.loc 1 669 13 view .LVU126
 669:./tmk_core/common/command.c ****             break;
 578               		.loc 1 669 13 view .LVU127
 579               	.LBE26:
 580 00a6 8091 0000 		lds r24,mk_time_to_max
 581 00aa 1F92      		push __zero_reg__
 582               	.LCFI38:
 583               		.cfi_remember_state
 584               		.cfi_def_cfa_offset 3
 585 00ac 8F93      		push r24
 586               	.LCFI39:
 587               		.cfi_def_cfa_offset 4
 588 00ae 80E0      		ldi r24,lo8(__c.3538)
 589 00b0 90E0      		ldi r25,hi8(__c.3538)
 590 00b2 00C0      		rjmp .L45
 591               	.L39:
 592               	.LCFI40:
 593               		.cfi_restore_state
 668:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 594               		.loc 1 668 17 view .LVU128
 668:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_time_to_max);
 595               		.loc 1 668 32 is_stmt 0 view .LVU129
 596 00b4 1092 0000 		sts mk_time_to_max,__zero_reg__
 597 00b8 00C0      		rjmp .L40
 598               	.LVL37:
 599               	.L30:
 672:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 600               		.loc 1 672 13 is_stmt 1 view .LVU130
 672:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 601               		.loc 1 672 36 is_stmt 0 view .LVU131
 602 00ba 8091 0000 		lds r24,mk_wheel_max_speed
 603               	.LVL38:
 672:./tmk_core/common/command.c ****                 mk_wheel_max_speed -= dec;
 604               		.loc 1 672 16 view .LVU132
 605 00be 6817      		cp r22,r24
 606 00c0 00F4      		brsh .L41
 673:./tmk_core/common/command.c ****             else
 607               		.loc 1 673 17 is_stmt 1 view .LVU133
 673:./tmk_core/common/command.c ****             else
 608               		.loc 1 673 36 is_stmt 0 view .LVU134
 609 00c2 861B      		sub r24,r22
 610 00c4 8093 0000 		sts mk_wheel_max_speed,r24
 611               	.L42:
 676:./tmk_core/common/command.c ****             break;
 612               		.loc 1 676 13 is_stmt 1 view .LVU135
 613               	.LBB27:
 676:./tmk_core/common/command.c ****             break;
 614               		.loc 1 676 13 view .LVU136
 676:./tmk_core/common/command.c ****             break;
 615               		.loc 1 676 13 view .LVU137
 616               	.LBE27:
 617 00c8 8091 0000 		lds r24,mk_wheel_max_speed
 618 00cc 1F92      		push __zero_reg__
 619               	.LCFI41:
 620               		.cfi_remember_state
 621               		.cfi_def_cfa_offset 3
 622 00ce 8F93      		push r24
 623               	.LCFI42:
 624               		.cfi_def_cfa_offset 4
 625 00d0 80E0      		ldi r24,lo8(__c.3541)
 626 00d2 90E0      		ldi r25,hi8(__c.3541)
 627 00d4 00C0      		rjmp .L45
 628               	.L41:
 629               	.LCFI43:
 630               		.cfi_restore_state
 675:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 631               		.loc 1 675 17 view .LVU138
 675:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_max_speed);
 632               		.loc 1 675 36 is_stmt 0 view .LVU139
 633 00d6 1092 0000 		sts mk_wheel_max_speed,__zero_reg__
 634 00da 00C0      		rjmp .L42
 635               	.LVL39:
 636               	.L32:
 679:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 637               		.loc 1 679 13 is_stmt 1 view .LVU140
 679:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 638               		.loc 1 679 38 is_stmt 0 view .LVU141
 639 00dc 8091 0000 		lds r24,mk_wheel_time_to_max
 640               	.LVL40:
 679:./tmk_core/common/command.c ****                 mk_wheel_time_to_max -= dec;
 641               		.loc 1 679 16 view .LVU142
 642 00e0 6817      		cp r22,r24
 643 00e2 00F4      		brsh .L43
 680:./tmk_core/common/command.c ****             else
 644               		.loc 1 680 17 is_stmt 1 view .LVU143
 680:./tmk_core/common/command.c ****             else
 645               		.loc 1 680 38 is_stmt 0 view .LVU144
 646 00e4 861B      		sub r24,r22
 647 00e6 8093 0000 		sts mk_wheel_time_to_max,r24
 648               	.L44:
 683:./tmk_core/common/command.c ****             break;
 649               		.loc 1 683 13 is_stmt 1 view .LVU145
 650               	.LBB28:
 683:./tmk_core/common/command.c ****             break;
 651               		.loc 1 683 13 view .LVU146
 683:./tmk_core/common/command.c ****             break;
 652               		.loc 1 683 13 view .LVU147
 653               	.LBE28:
 654 00ea 8091 0000 		lds r24,mk_wheel_time_to_max
 655 00ee 1F92      		push __zero_reg__
 656               	.LCFI44:
 657               		.cfi_remember_state
 658               		.cfi_def_cfa_offset 3
 659 00f0 8F93      		push r24
 660               	.LCFI45:
 661               		.cfi_def_cfa_offset 4
 662 00f2 80E0      		ldi r24,lo8(__c.3544)
 663 00f4 90E0      		ldi r25,hi8(__c.3544)
 664 00f6 00C0      		rjmp .L45
 665               	.L43:
 666               	.LCFI46:
 667               		.cfi_restore_state
 682:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 668               		.loc 1 682 17 view .LVU148
 682:./tmk_core/common/command.c ****             PRINT_SET_VAL(mk_wheel_time_to_max);
 669               		.loc 1 682 38 is_stmt 0 view .LVU149
 670 00f8 1092 0000 		sts mk_wheel_time_to_max,__zero_reg__
 671 00fc 00C0      		rjmp .L44
 672               		.cfi_endproc
 673               	.LFE39:
 675               		.section	.text.switch_default_layer,"ax",@progbits
 677               	switch_default_layer:
 678               	.LVL41:
 679               	.LFB43:
 710:./tmk_core/common/command.c **** 
 711:./tmk_core/common/command.c **** static bool mousekey_console(uint8_t code)
 712:./tmk_core/common/command.c **** {
 713:./tmk_core/common/command.c ****     switch (code) {
 714:./tmk_core/common/command.c ****         case KC_H:
 715:./tmk_core/common/command.c ****         case KC_SLASH: /* ? */
 716:./tmk_core/common/command.c ****             mousekey_console_help();
 717:./tmk_core/common/command.c ****             break;
 718:./tmk_core/common/command.c ****         case KC_Q:
 719:./tmk_core/common/command.c ****         case KC_ESC:
 720:./tmk_core/common/command.c ****             if (mousekey_param) {
 721:./tmk_core/common/command.c ****                 mousekey_param = 0;
 722:./tmk_core/common/command.c ****             } else {
 723:./tmk_core/common/command.c ****                 print("C> ");
 724:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 725:./tmk_core/common/command.c ****                 return false;
 726:./tmk_core/common/command.c ****             }
 727:./tmk_core/common/command.c ****             break;
 728:./tmk_core/common/command.c ****         case KC_P:
 729:./tmk_core/common/command.c ****             mousekey_param_print();
 730:./tmk_core/common/command.c ****             break;
 731:./tmk_core/common/command.c ****         case KC_1:
 732:./tmk_core/common/command.c ****         case KC_2:
 733:./tmk_core/common/command.c ****         case KC_3:
 734:./tmk_core/common/command.c ****         case KC_4:
 735:./tmk_core/common/command.c ****         case KC_5:
 736:./tmk_core/common/command.c ****         case KC_6:
 737:./tmk_core/common/command.c ****             mousekey_param = numkey2num(code);
 738:./tmk_core/common/command.c ****             break;
 739:./tmk_core/common/command.c ****         case KC_UP:
 740:./tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 1);
 741:./tmk_core/common/command.c ****             break;
 742:./tmk_core/common/command.c ****         case KC_DOWN:
 743:./tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 1);
 744:./tmk_core/common/command.c ****             break;
 745:./tmk_core/common/command.c ****         case KC_PGUP:
 746:./tmk_core/common/command.c ****             mousekey_param_inc(mousekey_param, 10);
 747:./tmk_core/common/command.c ****             break;
 748:./tmk_core/common/command.c ****         case KC_PGDN:
 749:./tmk_core/common/command.c ****             mousekey_param_dec(mousekey_param, 10);
 750:./tmk_core/common/command.c ****             break;
 751:./tmk_core/common/command.c ****         case KC_D:
 752:./tmk_core/common/command.c ****             mk_delay = MOUSEKEY_DELAY/10;
 753:./tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 754:./tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 755:./tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 756:./tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 757:./tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 758:./tmk_core/common/command.c ****             print("set default\n");
 759:./tmk_core/common/command.c ****             break;
 760:./tmk_core/common/command.c ****         default:
 761:./tmk_core/common/command.c ****             print("?");
 762:./tmk_core/common/command.c ****             return false;
 763:./tmk_core/common/command.c ****     }
 764:./tmk_core/common/command.c ****     if (mousekey_param) {
 765:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 766:./tmk_core/common/command.c ****     } else {
 767:./tmk_core/common/command.c ****         print("M>" );
 768:./tmk_core/common/command.c ****     }
 769:./tmk_core/common/command.c ****     return true;
 770:./tmk_core/common/command.c **** }
 771:./tmk_core/common/command.c **** #endif
 772:./tmk_core/common/command.c **** 
 773:./tmk_core/common/command.c **** 
 774:./tmk_core/common/command.c **** /***********************************************************
 775:./tmk_core/common/command.c ****  * Utilities
 776:./tmk_core/common/command.c ****  ***********************************************************/
 777:./tmk_core/common/command.c **** uint8_t numkey2num(uint8_t code)
 778:./tmk_core/common/command.c **** {
 779:./tmk_core/common/command.c ****     switch (code) {
 780:./tmk_core/common/command.c ****         case KC_1: return 1;
 781:./tmk_core/common/command.c ****         case KC_2: return 2;
 782:./tmk_core/common/command.c ****         case KC_3: return 3;
 783:./tmk_core/common/command.c ****         case KC_4: return 4;
 784:./tmk_core/common/command.c ****         case KC_5: return 5;
 785:./tmk_core/common/command.c ****         case KC_6: return 6;
 786:./tmk_core/common/command.c ****         case KC_7: return 7;
 787:./tmk_core/common/command.c ****         case KC_8: return 8;
 788:./tmk_core/common/command.c ****         case KC_9: return 9;
 789:./tmk_core/common/command.c ****         case KC_0: return 0;
 790:./tmk_core/common/command.c ****     }
 791:./tmk_core/common/command.c ****     return 0;
 792:./tmk_core/common/command.c **** }
 793:./tmk_core/common/command.c **** 
 794:./tmk_core/common/command.c **** static void switch_default_layer(uint8_t layer)
 795:./tmk_core/common/command.c **** {
 680               		.loc 1 795 1 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 795 1 is_stmt 0 view .LVU151
 683 0000 CF93      		push r28
 684               	.LCFI47:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 28, -2
 687               	/* prologue: function */
 688               	/* frame size = 0 */
 689               	/* stack size = 1 */
 690               	.L__stack_usage = 1
 691 0002 C82F      		mov r28,r24
 796:./tmk_core/common/command.c ****     xprintf("L%d\n", layer);
 692               		.loc 1 796 5 is_stmt 1 view .LVU152
 693               	.LBB29:
 694               		.loc 1 796 5 view .LVU153
 695               		.loc 1 796 5 view .LVU154
 696               	.LBE29:
 697 0004 1F92      		push __zero_reg__
 698               	.LCFI48:
 699               		.cfi_def_cfa_offset 4
 700 0006 8F93      		push r24
 701               	.LCFI49:
 702               		.cfi_def_cfa_offset 5
 703 0008 80E0      		ldi r24,lo8(__c.3600)
 704 000a 90E0      		ldi r25,hi8(__c.3600)
 705               	.LVL42:
 706               		.loc 1 796 5 is_stmt 0 view .LVU155
 707 000c 9F93      		push r25
 708               	.LCFI50:
 709               		.cfi_def_cfa_offset 6
 710 000e 8F93      		push r24
 711               	.LCFI51:
 712               		.cfi_def_cfa_offset 7
 713 0010 0E94 0000 		call __xprintf
 714               	.LVL43:
 797:./tmk_core/common/command.c ****     default_layer_set(1UL<<layer);
 715               		.loc 1 797 5 is_stmt 1 view .LVU156
 716 0014 61E0      		ldi r22,lo8(1)
 717 0016 70E0      		ldi r23,0
 718 0018 80E0      		ldi r24,0
 719 001a 90E0      		ldi r25,0
 720 001c 00C0      		rjmp 2f
 721               		1:
 722 001e 660F      		lsl r22
 723 0020 771F      		rol r23
 724 0022 881F      		rol r24
 725 0024 991F      		rol r25
 726               		2:
 727 0026 CA95      		dec r28
 728 0028 02F4      		brpl 1b
 729 002a 0E94 0000 		call default_layer_set
 730               	.LVL44:
 798:./tmk_core/common/command.c ****     clear_keyboard();
 731               		.loc 1 798 5 view .LVU157
 732 002e 0F90      		pop __tmp_reg__
 733 0030 0F90      		pop __tmp_reg__
 734 0032 0F90      		pop __tmp_reg__
 735 0034 0F90      		pop __tmp_reg__
 736               	.LCFI52:
 737               		.cfi_def_cfa_offset 3
 738               	/* epilogue start */
 799:./tmk_core/common/command.c **** }
 739               		.loc 1 799 1 is_stmt 0 view .LVU158
 740 0036 CF91      		pop r28
 741               	.LVL45:
 798:./tmk_core/common/command.c ****     clear_keyboard();
 742               		.loc 1 798 5 view .LVU159
 743 0038 0C94 0000 		jmp clear_keyboard
 744               	.LVL46:
 745               		.cfi_endproc
 746               	.LFE43:
 748               		.section	.text.command_common,"ax",@progbits
 750               	command_common:
 751               	.LFB34:
 307:./tmk_core/common/command.c **** 
 752               		.loc 1 307 1 is_stmt 1 view -0
 753               		.cfi_startproc
 754               	/* prologue: function */
 755               	/* frame size = 0 */
 756               	/* stack size = 0 */
 757               	.L__stack_usage = 0
 313:./tmk_core/common/command.c **** 
 758               		.loc 1 313 5 view .LVU161
 759 0000 8732      		cpi r24,lo8(39)
 760 0002 00F0      		brlo .+2
 761 0004 00C0      		rjmp .L48
 762 0006 8E31      		cpi r24,lo8(30)
 763 0008 00F0      		brlo .+2
 764 000a 00C0      		rjmp .L49
 765 000c 8E30      		cpi r24,lo8(14)
 766 000e 01F4      		brne .+2
 767 0010 00C0      		rjmp .L50
 768 0012 00F4      		brsh .L51
 769 0014 8730      		cpi r24,lo8(7)
 770 0016 01F4      		brne .+2
 771 0018 00C0      		rjmp .L52
 772 001a 8B30      		cpi r24,lo8(11)
 773 001c 01F4      		brne .+2
 774 001e 00C0      		rjmp .L53
 775 0020 8630      		cpi r24,lo8(6)
 776 0022 01F4      		brne .+2
 777 0024 00C0      		rjmp .L54
 778               	.L55:
 522:./tmk_core/common/command.c ****             return false;
 779               		.loc 1 522 13 view .LVU162
 780               	.LBB64:
 522:./tmk_core/common/command.c ****             return false;
 781               		.loc 1 522 13 view .LVU163
 522:./tmk_core/common/command.c ****             return false;
 782               		.loc 1 522 13 view .LVU164
 783               	.LBE64:
 784 0026 80E0      		ldi r24,lo8(__c.3435)
 785 0028 90E0      		ldi r25,hi8(__c.3435)
 786 002a 0E94 0000 		call xputs
 523:./tmk_core/common/command.c ****     }
 787               		.loc 1 523 13 view .LVU165
 523:./tmk_core/common/command.c ****     }
 788               		.loc 1 523 20 is_stmt 0 view .LVU166
 789 002e 80E0      		ldi r24,0
 790               	/* epilogue start */
 526:./tmk_core/common/command.c **** 
 791               		.loc 1 526 1 view .LVU167
 792 0030 0895      		ret
 793               	.L51:
 313:./tmk_core/common/command.c **** 
 794               		.loc 1 313 5 view .LVU168
 795 0032 8631      		cpi r24,lo8(22)
 796 0034 01F4      		brne .+2
 797 0036 00C0      		rjmp .L56
 798 0038 00F4      		brsh .L57
 799 003a 8031      		cpi r24,lo8(16)
 800 003c 01F4      		brne .L55
 417:./tmk_core/common/command.c ****             if (debug_mouse) {
 801               		.loc 1 417 13 is_stmt 1 view .LVU169
 417:./tmk_core/common/command.c ****             if (debug_mouse) {
 802               		.loc 1 417 28 is_stmt 0 view .LVU170
 803 003e 9091 0000 		lds r25,debug_config
 417:./tmk_core/common/command.c ****             if (debug_mouse) {
 804               		.loc 1 417 25 view .LVU171
 805 0042 892F      		mov r24,r25
 806 0044 877F      		andi r24,~(1<<3)
 807 0046 93FF      		sbrs r25,3
 808 0048 8860      		ori r24,1<<3
 809 004a 8093 0000 		sts debug_config,r24
 418:./tmk_core/common/command.c ****                 print("\nmouse: on\n");
 810               		.loc 1 418 13 is_stmt 1 view .LVU172
 418:./tmk_core/common/command.c ****                 print("\nmouse: on\n");
 811               		.loc 1 418 16 is_stmt 0 view .LVU173
 812 004e 83FF      		sbrs r24,3
 813 0050 00C0      		rjmp .L70
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 814               		.loc 1 419 17 is_stmt 1 view .LVU174
 815               	.LBB65:
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 816               		.loc 1 419 17 view .LVU175
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 817               		.loc 1 419 17 view .LVU176
 818               	.LBE65:
 819 0052 80E0      		ldi r24,lo8(__c.3422)
 820 0054 90E0      		ldi r25,hi8(__c.3422)
 821 0056 00C0      		rjmp .L93
 822               	.L57:
 313:./tmk_core/common/command.c **** 
 823               		.loc 1 313 5 is_stmt 0 view .LVU177
 824 0058 8931      		cpi r24,lo8(25)
 825 005a 01F4      		brne .+2
 826 005c 00C0      		rjmp .L59
 827 005e 8B31      		cpi r24,lo8(27)
 828 0060 01F4      		brne .L55
 395:./tmk_core/common/command.c ****             if (debug_matrix) {
 829               		.loc 1 395 13 is_stmt 1 view .LVU178
 395:./tmk_core/common/command.c ****             if (debug_matrix) {
 830               		.loc 1 395 29 is_stmt 0 view .LVU179
 831 0062 9091 0000 		lds r25,debug_config
 395:./tmk_core/common/command.c ****             if (debug_matrix) {
 832               		.loc 1 395 26 view .LVU180
 833 0066 892F      		mov r24,r25
 834 0068 8D7F      		andi r24,~(1<<1)
 835 006a 91FF      		sbrs r25,1
 836 006c 8260      		ori r24,1<<1
 837 006e 8093 0000 		sts debug_config,r24
 396:./tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 838               		.loc 1 396 13 is_stmt 1 view .LVU181
 396:./tmk_core/common/command.c ****                 print("\nmatrix: on\n");
 839               		.loc 1 396 16 is_stmt 0 view .LVU182
 840 0072 81FF      		sbrs r24,1
 841 0074 00C0      		rjmp .L68
 397:./tmk_core/common/command.c ****                 debug_enable = true;
 842               		.loc 1 397 17 is_stmt 1 view .LVU183
 843               	.LBB66:
 397:./tmk_core/common/command.c ****                 debug_enable = true;
 844               		.loc 1 397 17 view .LVU184
 397:./tmk_core/common/command.c ****                 debug_enable = true;
 845               		.loc 1 397 17 view .LVU185
 846               	.LBE66:
 847 0076 80E0      		ldi r24,lo8(__c.3412)
 848 0078 90E0      		ldi r25,hi8(__c.3412)
 849               	.L93:
 419:./tmk_core/common/command.c ****                 debug_enable = true;
 850               		.loc 1 419 17 is_stmt 0 view .LVU186
 851 007a 0E94 0000 		call xputs
 420:./tmk_core/common/command.c ****             } else {
 852               		.loc 1 420 17 is_stmt 1 view .LVU187
 420:./tmk_core/common/command.c ****             } else {
 853               		.loc 1 420 30 is_stmt 0 view .LVU188
 854 007e 8091 0000 		lds r24,debug_config
 855 0082 8160      		ori r24,lo8(1<<0)
 856 0084 00C0      		rjmp .L92
 857               	.L48:
 313:./tmk_core/common/command.c **** 
 858               		.loc 1 313 5 view .LVU189
 859 0086 8833      		cpi r24,lo8(56)
 860 0088 01F0      		breq .L53
 861 008a 00F4      		brsh .L61
 862 008c 8932      		cpi r24,lo8(41)
 863 008e 01F0      		breq .L62
 864 0090 8533      		cpi r24,lo8(53)
 865 0092 01F0      		breq .L62
 866 0094 8732      		cpi r24,lo8(39)
 867 0096 01F4      		brne .L55
 868               	.L62:
 454:./tmk_core/common/command.c ****             break;
 869               		.loc 1 454 13 is_stmt 1 view .LVU190
 870 0098 80E0      		ldi r24,0
 871               	.L94:
 514:./tmk_core/common/command.c ****             break;
 872               		.loc 1 514 13 is_stmt 0 view .LVU191
 873 009a 0E94 0000 		call switch_default_layer
 515:./tmk_core/common/command.c ****         case KC_0:
 874               		.loc 1 515 13 is_stmt 1 view .LVU192
 875 009e 00C0      		rjmp .L90
 876               	.L61:
 313:./tmk_core/common/command.c **** 
 877               		.loc 1 313 5 is_stmt 0 view .LVU193
 878 00a0 8334      		cpi r24,lo8(67)
 879 00a2 01F0      		breq .L62
 880 00a4 00F4      		brsh .L63
 881 00a6 8A33      		cpi r24,lo8(58)
 882 00a8 00F4      		brsh .+2
 883 00aa 00C0      		rjmp .L55
 504:./tmk_core/common/command.c ****             break;
 884               		.loc 1 504 13 is_stmt 1 view .LVU194
 885 00ac 8953      		subi r24,lo8(-(-57))
 886 00ae 00C0      		rjmp .L94
 887               	.L63:
 313:./tmk_core/common/command.c **** 
 888               		.loc 1 313 5 is_stmt 0 view .LVU195
 889 00b0 8834      		cpi r24,lo8(72)
 890 00b2 01F0      		breq .+2
 891 00b4 00C0      		rjmp .L55
 369:./tmk_core/common/command.c ****             print("\n\nJumping to bootloader... ");
 892               		.loc 1 369 13 is_stmt 1 view .LVU196
 893 00b6 0E94 0000 		call clear_keyboard
 370:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 894               		.loc 1 370 13 view .LVU197
 895               	.LBB67:
 370:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 896               		.loc 1 370 13 view .LVU198
 370:./tmk_core/common/command.c ****             #ifdef AUDIO_ENABLE
 897               		.loc 1 370 13 view .LVU199
 898               	.LBE67:
 899 00ba 80E0      		ldi r24,lo8(__c.3404)
 900 00bc 90E0      		ldi r25,hi8(__c.3404)
 901 00be 0E94 0000 		call xputs
 375:./tmk_core/common/command.c ****             #endif
 902               		.loc 1 375 14 view .LVU200
 903               	.LBB68:
 904               	.LBI68:
 905               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h"
   1:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
   6:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
   9:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  12:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      distribution.
  16:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  17:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  21:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  33:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  35:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  38:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  endif
  42:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  44:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #include <math.h>
  47:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  48:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \file */
  49:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \code
  51:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \endcode
  55:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  56:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     used.
  60:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  61:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  70:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  79:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  83:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** */
  84:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  85:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
  89:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  90:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
  97:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 103:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****     integer value.
 107:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****  */
 108:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 110:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 111:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 114:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 115:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #endif
 120:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 121:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** /**
 122:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 124:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 126:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 129:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 131:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 137:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 142:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 147:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    respectively.
 151:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 152:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \note
 153:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 154:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 164:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****  */
 165:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** void
 166:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** _delay_ms(double __ms)
 906               		.loc 2 166 1 view .LVU201
 907               	.LBB69:
 167:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** {
 168:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	double __tmp ;
 908               		.loc 2 168 2 view .LVU202
 169:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 909               		.loc 2 172 2 view .LVU203
 173:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 910               		.loc 2 173 2 view .LVU204
 174:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 911               		.loc 2 174 2 view .LVU205
 175:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 176:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 179:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 182:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#else
 183:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		//round up by default
 184:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 912               		.loc 2 184 3 view .LVU206
 185:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	#endif
 186:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 
 187:/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 913               		.loc 2 187 2 view .LVU207
 914 00c2 2FEF      		ldi r18,lo8(3199999)
 915 00c4 83ED      		ldi r24,hi8(3199999)
 916 00c6 90E3      		ldi r25,hlo8(3199999)
 917 00c8 2150      	1:	subi r18,1
 918 00ca 8040      		sbci r24,0
 919 00cc 9040      		sbci r25,0
 920 00ce 01F4      		brne 1b
 921 00d0 00C0      		rjmp .
 922 00d2 0000      		nop
 923               	.LBE69:
 924               	.LBE68:
 377:./tmk_core/common/command.c ****             break;
 925               		.loc 1 377 13 view .LVU208
 926 00d4 0E94 0000 		call bootloader_jump
 927               	.L90:
 378:./tmk_core/common/command.c **** 
 928               		.loc 1 378 13 view .LVU209
 525:./tmk_core/common/command.c **** }
 929               		.loc 1 525 12 is_stmt 0 view .LVU210
 930 00d8 81E0      		ldi r24,lo8(1)
 378:./tmk_core/common/command.c **** 
 931               		.loc 1 378 13 view .LVU211
 932 00da 0895      		ret
 933               	.L53:
 353:./tmk_core/common/command.c ****             break;
 934               		.loc 1 353 13 is_stmt 1 view .LVU212
 935               	.LBB70:
 936               	.LBI70:
 122:./tmk_core/common/command.c **** {
 937               		.loc 1 122 13 view .LVU213
 938               	.LBB71:
 124:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 939               		.loc 1 124 2 view .LVU214
 940               	.LBE71:
 941               	.LBE70:
 124:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 942               		.loc 1 124 2 view .LVU215
 124:./tmk_core/common/command.c **** 		STR(MAGIC_KEY_DEBUG       ) ":	Debug Message Toggle\n"
 943               		.loc 1 124 2 view .LVU216
 944               	.LBB73:
 945               	.LBB72:
 946 00dc 80E0      		ldi r24,lo8(__c.3364)
 947 00de 90E0      		ldi r25,hi8(__c.3364)
 948               	.L91:
 949               	.LBE72:
 950               	.LBE73:
 951               	.LBB74:
 952               	.LBB75:
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 953               		.loc 1 222 5 is_stmt 0 view .LVU217
 954 00e0 0E94 0000 		call xputs
 229:./tmk_core/common/command.c **** }
 955               		.loc 1 229 2 is_stmt 1 view .LVU218
 956 00e4 00C0      		rjmp .L90
 957               	.L54:
 958               	.LBE75:
 959               	.LBE74:
 358:./tmk_core/common/command.c ****             debug_keyboard = false;
 960               		.loc 1 358 13 view .LVU219
 359:./tmk_core/common/command.c ****             debug_mouse    = false;
 961               		.loc 1 359 13 view .LVU220
 360:./tmk_core/common/command.c ****             debug_enable   = false;
 962               		.loc 1 360 13 view .LVU221
 361:./tmk_core/common/command.c ****             command_console_help();
 963               		.loc 1 361 13 view .LVU222
 361:./tmk_core/common/command.c ****             command_console_help();
 964               		.loc 1 361 28 is_stmt 0 view .LVU223
 965 00e6 8091 0000 		lds r24,debug_config
 966 00ea 807F      		andi r24,lo8(-16)
 967 00ec 8093 0000 		sts debug_config,r24
 362:./tmk_core/common/command.c ****             print("C> ");
 968               		.loc 1 362 13 is_stmt 1 view .LVU224
 969               	.LBB83:
 970               	.LBI83:
 532:./tmk_core/common/command.c **** {
 971               		.loc 1 532 13 view .LVU225
 972               	.LBB84:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 973               		.loc 1 534 5 view .LVU226
 974               	.LBE84:
 975               	.LBE83:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 976               		.loc 1 534 5 view .LVU227
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 977               		.loc 1 534 5 view .LVU228
 978               	.LBB86:
 979               	.LBB85:
 980 00f0 80E0      		ldi r24,lo8(__c.3440)
 981 00f2 90E0      		ldi r25,hi8(__c.3440)
 982 00f4 0E94 0000 		call xputs
 983               	.LBE85:
 984               	.LBE86:
 363:./tmk_core/common/command.c ****             command_state = CONSOLE;
 985               		.loc 1 363 13 view .LVU229
 986               	.LBB87:
 363:./tmk_core/common/command.c ****             command_state = CONSOLE;
 987               		.loc 1 363 13 view .LVU230
 363:./tmk_core/common/command.c ****             command_state = CONSOLE;
 988               		.loc 1 363 13 view .LVU231
 989               	.LBE87:
 990 00f8 80E0      		ldi r24,lo8(__c.3401)
 991 00fa 90E0      		ldi r25,hi8(__c.3401)
 992 00fc 0E94 0000 		call xputs
 364:./tmk_core/common/command.c ****             break;
 993               		.loc 1 364 13 view .LVU232
 364:./tmk_core/common/command.c ****             break;
 994               		.loc 1 364 27 is_stmt 0 view .LVU233
 995 0100 81E0      		ldi r24,lo8(1)
 996 0102 8093 0000 		sts command_state,r24
 365:./tmk_core/common/command.c **** 
 997               		.loc 1 365 13 is_stmt 1 view .LVU234
 998 0106 0895      		ret
 999               	.L52:
 382:./tmk_core/common/command.c ****             if (debug_enable) {
 1000               		.loc 1 382 13 view .LVU235
 382:./tmk_core/common/command.c ****             if (debug_enable) {
 1001               		.loc 1 382 29 is_stmt 0 view .LVU236
 1002 0108 9091 0000 		lds r25,debug_config
 382:./tmk_core/common/command.c ****             if (debug_enable) {
 1003               		.loc 1 382 26 view .LVU237
 1004 010c 892F      		mov r24,r25
 1005 010e 8E7F      		andi r24,~(1<<0)
 1006 0110 90FF      		sbrs r25,0
 1007 0112 8160      		ori r24,1<<0
 1008 0114 8093 0000 		sts debug_config,r24
 383:./tmk_core/common/command.c ****                 print("\ndebug: on\n");
 1009               		.loc 1 383 13 is_stmt 1 view .LVU238
 383:./tmk_core/common/command.c ****                 print("\ndebug: on\n");
 1010               		.loc 1 383 16 is_stmt 0 view .LVU239
 1011 0118 80FF      		sbrs r24,0
 1012 011a 00C0      		rjmp .L67
 384:./tmk_core/common/command.c ****             } else {
 1013               		.loc 1 384 17 is_stmt 1 view .LVU240
 1014               	.LBB88:
 384:./tmk_core/common/command.c ****             } else {
 1015               		.loc 1 384 17 view .LVU241
 384:./tmk_core/common/command.c ****             } else {
 1016               		.loc 1 384 17 view .LVU242
 1017               	.LBE88:
 1018 011c 80E0      		ldi r24,lo8(__c.3407)
 1019 011e 90E0      		ldi r25,hi8(__c.3407)
 1020 0120 00C0      		rjmp .L91
 1021               	.L67:
 386:./tmk_core/common/command.c ****                 debug_matrix   = false;
 1022               		.loc 1 386 17 view .LVU243
 1023               	.LBB89:
 386:./tmk_core/common/command.c ****                 debug_matrix   = false;
 1024               		.loc 1 386 17 view .LVU244
 386:./tmk_core/common/command.c ****                 debug_matrix   = false;
 1025               		.loc 1 386 17 view .LVU245
 1026               	.LBE89:
 1027 0122 80E0      		ldi r24,lo8(__c.3409)
 1028 0124 90E0      		ldi r25,hi8(__c.3409)
 1029 0126 0E94 0000 		call xputs
 387:./tmk_core/common/command.c ****                 debug_keyboard = false;
 1030               		.loc 1 387 17 view .LVU246
 388:./tmk_core/common/command.c ****                 debug_mouse    = false;
 1031               		.loc 1 388 17 view .LVU247
 389:./tmk_core/common/command.c ****             }
 1032               		.loc 1 389 17 view .LVU248
 387:./tmk_core/common/command.c ****                 debug_keyboard = false;
 1033               		.loc 1 387 32 is_stmt 0 view .LVU249
 1034 012a 8091 0000 		lds r24,debug_config
 1035 012e 817F      		andi r24,lo8(-15)
 1036               	.L92:
 420:./tmk_core/common/command.c ****             } else {
 1037               		.loc 1 420 30 view .LVU250
 1038 0130 8093 0000 		sts debug_config,r24
 1039 0134 00C0      		rjmp .L90
 1040               	.L68:
 400:./tmk_core/common/command.c ****             }
 1041               		.loc 1 400 17 is_stmt 1 view .LVU251
 1042               	.LBB90:
 400:./tmk_core/common/command.c ****             }
 1043               		.loc 1 400 17 view .LVU252
 400:./tmk_core/common/command.c ****             }
 1044               		.loc 1 400 17 view .LVU253
 1045               	.LBE90:
 1046 0136 80E0      		ldi r24,lo8(__c.3414)
 1047 0138 90E0      		ldi r25,hi8(__c.3414)
 1048 013a 00C0      		rjmp .L91
 1049               	.L50:
 406:./tmk_core/common/command.c ****             if (debug_keyboard) {
 1050               		.loc 1 406 13 view .LVU254
 406:./tmk_core/common/command.c ****             if (debug_keyboard) {
 1051               		.loc 1 406 31 is_stmt 0 view .LVU255
 1052 013c 9091 0000 		lds r25,debug_config
 406:./tmk_core/common/command.c ****             if (debug_keyboard) {
 1053               		.loc 1 406 28 view .LVU256
 1054 0140 892F      		mov r24,r25
 1055 0142 8B7F      		andi r24,~(1<<2)
 1056 0144 92FF      		sbrs r25,2
 1057 0146 8460      		ori r24,1<<2
 1058 0148 8093 0000 		sts debug_config,r24
 407:./tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1059               		.loc 1 407 13 is_stmt 1 view .LVU257
 407:./tmk_core/common/command.c ****                 print("\nkeyboard: on\n");
 1060               		.loc 1 407 16 is_stmt 0 view .LVU258
 1061 014c 82FF      		sbrs r24,2
 1062 014e 00C0      		rjmp .L69
 408:./tmk_core/common/command.c ****                 debug_enable = true;
 1063               		.loc 1 408 17 is_stmt 1 view .LVU259
 1064               	.LBB91:
 408:./tmk_core/common/command.c ****                 debug_enable = true;
 1065               		.loc 1 408 17 view .LVU260
 408:./tmk_core/common/command.c ****                 debug_enable = true;
 1066               		.loc 1 408 17 view .LVU261
 1067               	.LBE91:
 1068 0150 80E0      		ldi r24,lo8(__c.3417)
 1069 0152 90E0      		ldi r25,hi8(__c.3417)
 1070 0154 00C0      		rjmp .L93
 1071               	.L69:
 411:./tmk_core/common/command.c ****             }
 1072               		.loc 1 411 17 view .LVU262
 1073               	.LBB92:
 411:./tmk_core/common/command.c ****             }
 1074               		.loc 1 411 17 view .LVU263
 411:./tmk_core/common/command.c ****             }
 1075               		.loc 1 411 17 view .LVU264
 1076               	.LBE92:
 1077 0156 80E0      		ldi r24,lo8(__c.3419)
 1078 0158 90E0      		ldi r25,hi8(__c.3419)
 1079 015a 00C0      		rjmp .L91
 1080               	.L70:
 422:./tmk_core/common/command.c ****             }
 1081               		.loc 1 422 5 view .LVU265
 1082               	.LBB93:
 422:./tmk_core/common/command.c ****             }
 1083               		.loc 1 422 5 view .LVU266
 422:./tmk_core/common/command.c ****             }
 1084               		.loc 1 422 5 view .LVU267
 1085               	.LBE93:
 1086 015c 80E0      		ldi r24,lo8(__c.3424)
 1087 015e 90E0      		ldi r25,hi8(__c.3424)
 1088 0160 00C0      		rjmp .L91
 1089               	.L59:
 428:./tmk_core/common/command.c **** 		    break;
 1090               		.loc 1 428 10 view .LVU268
 1091               	.LBB94:
 1092               	.LBI74:
 176:./tmk_core/common/command.c **** {
 1093               		.loc 1 176 13 view .LVU269
 1094               	.LBB76:
 179:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1095               		.loc 1 179 5 view .LVU270
 1096               	.LBE76:
 1097               	.LBE94:
 179:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1098               		.loc 1 179 5 view .LVU271
 179:./tmk_core/common/command.c ****     print("DESC: " STR(DESCRIPTION) "\n");
 1099               		.loc 1 179 5 view .LVU272
 1100               	.LBB95:
 1101               	.LBB77:
 1102 0162 80E0      		ldi r24,lo8(__c.3369)
 1103 0164 90E0      		ldi r25,hi8(__c.3369)
 1104 0166 0E94 0000 		call xputs
 180:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1105               		.loc 1 180 5 view .LVU273
 1106               	.LBE77:
 1107               	.LBE95:
 180:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1108               		.loc 1 180 5 view .LVU274
 180:./tmk_core/common/command.c ****     print("VID: " STR(VENDOR_ID) "(" STR(MANUFACTURER) ") "
 1109               		.loc 1 180 5 view .LVU275
 1110               	.LBB96:
 1111               	.LBB78:
 1112 016a 80E0      		ldi r24,lo8(__c.3371)
 1113 016c 90E0      		ldi r25,hi8(__c.3371)
 1114 016e 0E94 0000 		call xputs
 181:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1115               		.loc 1 181 5 view .LVU276
 1116               	.LBE78:
 1117               	.LBE96:
 181:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1118               		.loc 1 181 5 view .LVU277
 181:./tmk_core/common/command.c ****           "PID: " STR(PRODUCT_ID) "(" STR(PRODUCT) ") "
 1119               		.loc 1 181 5 view .LVU278
 1120               	.LBB97:
 1121               	.LBB79:
 1122 0172 80E0      		ldi r24,lo8(__c.3373)
 1123 0174 90E0      		ldi r25,hi8(__c.3373)
 1124 0176 0E94 0000 		call xputs
 184:./tmk_core/common/command.c **** 
 1125               		.loc 1 184 5 view .LVU279
 1126               	.LBE79:
 1127               	.LBE97:
 184:./tmk_core/common/command.c **** 
 1128               		.loc 1 184 5 view .LVU280
 184:./tmk_core/common/command.c **** 
 1129               		.loc 1 184 5 view .LVU281
 1130               	.LBB98:
 1131               	.LBB80:
 1132 017a 80E0      		ldi r24,lo8(__c.3375)
 1133 017c 90E0      		ldi r25,hi8(__c.3375)
 1134 017e 0E94 0000 		call xputs
 187:./tmk_core/common/command.c **** 
 1135               		.loc 1 187 5 view .LVU282
 1136               	.LBE80:
 1137               	.LBE98:
 187:./tmk_core/common/command.c **** 
 1138               		.loc 1 187 5 view .LVU283
 187:./tmk_core/common/command.c **** 
 1139               		.loc 1 187 5 view .LVU284
 1140               	.LBB99:
 1141               	.LBB81:
 1142 0182 80E0      		ldi r24,lo8(__c.3377)
 1143 0184 90E0      		ldi r25,hi8(__c.3377)
 1144 0186 0E94 0000 		call xputs
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 1145               		.loc 1 222 5 view .LVU285
 1146               	.LBE81:
 1147               	.LBE99:
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 1148               		.loc 1 222 5 view .LVU286
 222:./tmk_core/common/command.c **** #if defined(__AVR__)
 1149               		.loc 1 222 5 view .LVU287
 1150               	.LBB100:
 1151               	.LBB82:
 1152 018a 80E0      		ldi r24,lo8(__c.3379)
 1153 018c 90E0      		ldi r25,hi8(__c.3379)
 1154 018e 00C0      		rjmp .L91
 1155               	.L56:
 1156               	.LBE82:
 1157               	.LBE100:
 433:./tmk_core/common/command.c ****             break;
 1158               		.loc 1 433 4 view .LVU288
 1159               	.LBB101:
 1160               	.LBI101:
 232:./tmk_core/common/command.c **** {
 1161               		.loc 1 232 13 view .LVU289
 1162               	.LBB102:
 235:./tmk_core/common/command.c **** 
 1163               		.loc 1 235 5 view .LVU290
 1164               	.LBE102:
 1165               	.LBE101:
 235:./tmk_core/common/command.c **** 
 1166               		.loc 1 235 5 view .LVU291
 235:./tmk_core/common/command.c **** 
 1167               		.loc 1 235 5 view .LVU292
 1168               	.LBB108:
 1169               	.LBB103:
 1170 0190 80E0      		ldi r24,lo8(__c.3384)
 1171 0192 90E0      		ldi r25,hi8(__c.3384)
 1172 0194 0E94 0000 		call xputs
 237:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 1173               		.loc 1 237 5 view .LVU293
 1174 0198 0E94 0000 		call host_keyboard_leds
 1175               	.LBE103:
 1176               	.LBE108:
 237:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 1177               		.loc 1 237 5 view .LVU294
 237:./tmk_core/common/command.c **** #ifndef PROTOCOL_VUSB
 1178               		.loc 1 237 5 view .LVU295
 1179               	.LBB109:
 1180               	.LBB104:
 1181 019c 1F92      		push __zero_reg__
 1182               	.LCFI53:
 1183               		.cfi_def_cfa_offset 3
 1184 019e 8F93      		push r24
 1185               	.LCFI54:
 1186               		.cfi_def_cfa_offset 4
 1187 01a0 80E0      		ldi r24,lo8(__c.3386)
 1188 01a2 90E0      		ldi r25,hi8(__c.3386)
 1189 01a4 9F93      		push r25
 1190               	.LCFI55:
 1191               		.cfi_def_cfa_offset 5
 1192 01a6 8F93      		push r24
 1193               	.LCFI56:
 1194               		.cfi_def_cfa_offset 6
 1195 01a8 0E94 0000 		call __xprintf
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 1196               		.loc 1 240 5 view .LVU296
 1197               	.LBE104:
 1198               	.LBE109:
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 1199               		.loc 1 240 5 view .LVU297
 240:./tmk_core/common/command.c ****     print_val_hex8(keyboard_idle);
 1200               		.loc 1 240 5 view .LVU298
 1201               	.LBB110:
 1202               	.LBB105:
 1203 01ac 8091 0000 		lds r24,keyboard_protocol
 1204 01b0 1F92      		push __zero_reg__
 1205               	.LCFI57:
 1206               		.cfi_def_cfa_offset 7
 1207 01b2 8F93      		push r24
 1208               	.LCFI58:
 1209               		.cfi_def_cfa_offset 8
 1210 01b4 80E0      		ldi r24,lo8(__c.3388)
 1211 01b6 90E0      		ldi r25,hi8(__c.3388)
 1212 01b8 9F93      		push r25
 1213               	.LCFI59:
 1214               		.cfi_def_cfa_offset 9
 1215 01ba 8F93      		push r24
 1216               	.LCFI60:
 1217               		.cfi_def_cfa_offset 10
 1218 01bc 0E94 0000 		call __xprintf
 241:./tmk_core/common/command.c **** #endif
 1219               		.loc 1 241 5 view .LVU299
 1220               	.LBE105:
 1221               	.LBE110:
 241:./tmk_core/common/command.c **** #endif
 1222               		.loc 1 241 5 view .LVU300
 241:./tmk_core/common/command.c **** #endif
 1223               		.loc 1 241 5 view .LVU301
 1224               	.LBB111:
 1225               	.LBB106:
 1226 01c0 8091 0000 		lds r24,keyboard_idle
 1227 01c4 1F92      		push __zero_reg__
 1228               	.LCFI61:
 1229               		.cfi_def_cfa_offset 11
 1230 01c6 8F93      		push r24
 1231               	.LCFI62:
 1232               		.cfi_def_cfa_offset 12
 1233 01c8 80E0      		ldi r24,lo8(__c.3390)
 1234 01ca 90E0      		ldi r25,hi8(__c.3390)
 1235 01cc 9F93      		push r25
 1236               	.LCFI63:
 1237               		.cfi_def_cfa_offset 13
 1238 01ce 8F93      		push r24
 1239               	.LCFI64:
 1240               		.cfi_def_cfa_offset 14
 1241 01d0 0E94 0000 		call __xprintf
 246:./tmk_core/common/command.c **** 
 1242               		.loc 1 246 5 view .LVU302
 1243 01d4 0E94 0000 		call timer_read32
 1244               	.LBE106:
 1245               	.LBE111:
 246:./tmk_core/common/command.c **** 
 1246               		.loc 1 246 5 view .LVU303
 246:./tmk_core/common/command.c **** 
 1247               		.loc 1 246 5 view .LVU304
 1248               	.LBB112:
 1249               	.LBB107:
 1250 01d8 9F93      		push r25
 1251               	.LCFI65:
 1252               		.cfi_def_cfa_offset 15
 1253 01da 8F93      		push r24
 1254               	.LCFI66:
 1255               		.cfi_def_cfa_offset 16
 1256 01dc 7F93      		push r23
 1257               	.LCFI67:
 1258               		.cfi_def_cfa_offset 17
 1259 01de 6F93      		push r22
 1260               	.LCFI68:
 1261               		.cfi_def_cfa_offset 18
 1262 01e0 80E0      		ldi r24,lo8(__c.3392)
 1263 01e2 90E0      		ldi r25,hi8(__c.3392)
 1264 01e4 9F93      		push r25
 1265               	.LCFI69:
 1266               		.cfi_def_cfa_offset 19
 1267 01e6 8F93      		push r24
 1268               	.LCFI70:
 1269               		.cfi_def_cfa_offset 20
 1270 01e8 0E94 0000 		call __xprintf
 261:./tmk_core/common/command.c **** }
 1271               		.loc 1 261 2 view .LVU305
 246:./tmk_core/common/command.c **** 
 1272               		.loc 1 246 5 is_stmt 0 view .LVU306
 1273 01ec 8DB7      		in r24,__SP_L__
 1274 01ee 9EB7      		in r25,__SP_H__
 1275 01f0 4296      		adiw r24,18
 1276 01f2 0FB6      		in __tmp_reg__,__SREG__
 1277 01f4 F894      		cli
 1278 01f6 9EBF      		out __SP_H__,r25
 1279 01f8 0FBE      		out __SREG__,__tmp_reg__
 1280 01fa 8DBF      		out __SP_L__,r24
 1281               	.LCFI71:
 1282               		.cfi_def_cfa_offset 2
 1283 01fc 00C0      		rjmp .L90
 1284               	.L49:
 1285               	.LBE107:
 1286               	.LBE112:
 514:./tmk_core/common/command.c ****             break;
 1287               		.loc 1 514 13 is_stmt 1 view .LVU307
 1288 01fe 8D51      		subi r24,lo8(-(-29))
 1289 0200 00C0      		rjmp .L94
 1290               		.cfi_endproc
 1291               	.LFE34:
 1293               		.section	.text.rgblight_toggle,"ax",@progbits
 1294               		.weak	rgblight_toggle
 1296               	rgblight_toggle:
 1297               	.LFB13:
 1298               		.file 3 "./quantum/rgb.h"
   1:./quantum/rgb.h **** /* Copyright 2017 Jack Humbert
   2:./quantum/rgb.h ****  *
   3:./quantum/rgb.h ****  * This program is free software: you can redistribute it and/or modify
   4:./quantum/rgb.h ****  * it under the terms of the GNU General Public License as published by
   5:./quantum/rgb.h ****  * the Free Software Foundation, either version 2 of the License, or
   6:./quantum/rgb.h ****  * (at your option) any later version.
   7:./quantum/rgb.h ****  *
   8:./quantum/rgb.h ****  * This program is distributed in the hope that it will be useful,
   9:./quantum/rgb.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:./quantum/rgb.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  11:./quantum/rgb.h ****  * GNU General Public License for more details.
  12:./quantum/rgb.h ****  *
  13:./quantum/rgb.h ****  * You should have received a copy of the GNU General Public License
  14:./quantum/rgb.h ****  * along with this program.  If not, see <http://www.gnu.org/licenses/>.
  15:./quantum/rgb.h ****  */
  16:./quantum/rgb.h **** 
  17:./quantum/rgb.h **** #ifndef RGB_H
  18:./quantum/rgb.h **** #define RGB_H
  19:./quantum/rgb.h **** 
  20:./quantum/rgb.h **** __attribute__((weak))
  21:./quantum/rgb.h **** void rgblight_toggle(void) {};
 1299               		.loc 3 21 28 view -0
 1300               		.cfi_startproc
 1301               	/* prologue: function */
 1302               	/* frame size = 0 */
 1303               	/* stack size = 0 */
 1304               	.L__stack_usage = 0
 1305               		.loc 3 21 29 view .LVU309
 1306               	/* epilogue start */
 1307               		.loc 3 21 1 is_stmt 0 view .LVU310
 1308 0000 0895      		ret
 1309               		.cfi_endproc
 1310               	.LFE13:
 1312               		.section	.text.rgblight_step,"ax",@progbits
 1313               		.weak	rgblight_step
 1315               	rgblight_step:
 1316               	.LFB47:
 1317               		.cfi_startproc
 1318               	/* prologue: function */
 1319               	/* frame size = 0 */
 1320               	/* stack size = 0 */
 1321               	.L__stack_usage = 0
 1322               	/* epilogue start */
 1323 0000 0895      		ret
 1324               		.cfi_endproc
 1325               	.LFE47:
 1327               		.section	.text.rgblight_step_reverse,"ax",@progbits
 1328               		.weak	rgblight_step_reverse
 1330               	rgblight_step_reverse:
 1331               	.LFB49:
 1332               		.cfi_startproc
 1333               	/* prologue: function */
 1334               	/* frame size = 0 */
 1335               	/* stack size = 0 */
 1336               	.L__stack_usage = 0
 1337               	/* epilogue start */
 1338 0000 0895      		ret
 1339               		.cfi_endproc
 1340               	.LFE49:
 1342               		.section	.text.rgblight_increase_hue,"ax",@progbits
 1343               		.weak	rgblight_increase_hue
 1345               	rgblight_increase_hue:
 1346               	.LFB51:
 1347               		.cfi_startproc
 1348               	/* prologue: function */
 1349               	/* frame size = 0 */
 1350               	/* stack size = 0 */
 1351               	.L__stack_usage = 0
 1352               	/* epilogue start */
 1353 0000 0895      		ret
 1354               		.cfi_endproc
 1355               	.LFE51:
 1357               		.section	.text.rgblight_decrease_hue,"ax",@progbits
 1358               		.weak	rgblight_decrease_hue
 1360               	rgblight_decrease_hue:
 1361               	.LFB53:
 1362               		.cfi_startproc
 1363               	/* prologue: function */
 1364               	/* frame size = 0 */
 1365               	/* stack size = 0 */
 1366               	.L__stack_usage = 0
 1367               	/* epilogue start */
 1368 0000 0895      		ret
 1369               		.cfi_endproc
 1370               	.LFE53:
 1372               		.section	.text.rgblight_increase_sat,"ax",@progbits
 1373               		.weak	rgblight_increase_sat
 1375               	rgblight_increase_sat:
 1376               	.LFB55:
 1377               		.cfi_startproc
 1378               	/* prologue: function */
 1379               	/* frame size = 0 */
 1380               	/* stack size = 0 */
 1381               	.L__stack_usage = 0
 1382               	/* epilogue start */
 1383 0000 0895      		ret
 1384               		.cfi_endproc
 1385               	.LFE55:
 1387               		.section	.text.rgblight_decrease_sat,"ax",@progbits
 1388               		.weak	rgblight_decrease_sat
 1390               	rgblight_decrease_sat:
 1391               	.LFB57:
 1392               		.cfi_startproc
 1393               	/* prologue: function */
 1394               	/* frame size = 0 */
 1395               	/* stack size = 0 */
 1396               	.L__stack_usage = 0
 1397               	/* epilogue start */
 1398 0000 0895      		ret
 1399               		.cfi_endproc
 1400               	.LFE57:
 1402               		.section	.text.rgblight_increase_val,"ax",@progbits
 1403               		.weak	rgblight_increase_val
 1405               	rgblight_increase_val:
 1406               	.LFB59:
 1407               		.cfi_startproc
 1408               	/* prologue: function */
 1409               	/* frame size = 0 */
 1410               	/* stack size = 0 */
 1411               	.L__stack_usage = 0
 1412               	/* epilogue start */
 1413 0000 0895      		ret
 1414               		.cfi_endproc
 1415               	.LFE59:
 1417               		.section	.text.rgblight_decrease_val,"ax",@progbits
 1418               		.weak	rgblight_decrease_val
 1420               	rgblight_decrease_val:
 1421               	.LFB61:
 1422               		.cfi_startproc
 1423               	/* prologue: function */
 1424               	/* frame size = 0 */
 1425               	/* stack size = 0 */
 1426               	.L__stack_usage = 0
 1427               	/* epilogue start */
 1428 0000 0895      		ret
 1429               		.cfi_endproc
 1430               	.LFE61:
 1432               		.section	.text.rgblight_increase_speed,"ax",@progbits
 1433               		.weak	rgblight_increase_speed
 1435               	rgblight_increase_speed:
 1436               	.LFB63:
 1437               		.cfi_startproc
 1438               	/* prologue: function */
 1439               	/* frame size = 0 */
 1440               	/* stack size = 0 */
 1441               	.L__stack_usage = 0
 1442               	/* epilogue start */
 1443 0000 0895      		ret
 1444               		.cfi_endproc
 1445               	.LFE63:
 1447               		.section	.text.rgblight_decrease_speed,"ax",@progbits
 1448               		.weak	rgblight_decrease_speed
 1450               	rgblight_decrease_speed:
 1451               	.LFB65:
 1452               		.cfi_startproc
 1453               	/* prologue: function */
 1454               	/* frame size = 0 */
 1455               	/* stack size = 0 */
 1456               	.L__stack_usage = 0
 1457               	/* epilogue start */
 1458 0000 0895      		ret
 1459               		.cfi_endproc
 1460               	.LFE65:
 1462               		.section	.text.command_extra,"ax",@progbits
 1463               		.weak	command_extra
 1465               	command_extra:
 1466               	.LVL47:
 1467               	.LFB29:
 106:./tmk_core/common/command.c ****     (void)code;
 1468               		.loc 1 106 1 is_stmt 1 view -0
 1469               		.cfi_startproc
 1470               	/* prologue: function */
 1471               	/* frame size = 0 */
 1472               	/* stack size = 0 */
 1473               	.L__stack_usage = 0
 107:./tmk_core/common/command.c ****     return false;
 1474               		.loc 1 107 5 view .LVU312
 108:./tmk_core/common/command.c **** }
 1475               		.loc 1 108 5 view .LVU313
 109:./tmk_core/common/command.c **** 
 1476               		.loc 1 109 1 is_stmt 0 view .LVU314
 1477 0000 80E0      		ldi r24,0
 1478               	.LVL48:
 1479               	/* epilogue start */
 109:./tmk_core/common/command.c **** 
 1480               		.loc 1 109 1 view .LVU315
 1481 0002 0895      		ret
 1482               		.cfi_endproc
 1483               	.LFE29:
 1485               		.set	command_extra.localalias.0,command_extra
 1486               		.section	.text.command_console_extra,"ax",@progbits
 1487               		.weak	command_console_extra
 1489               	command_console_extra:
 1490               	.LFB45:
 1491               		.cfi_startproc
 1492               	/* prologue: function */
 1493               	/* frame size = 0 */
 1494               	/* stack size = 0 */
 1495               	.L__stack_usage = 0
 1496 0000 0C94 0000 		jmp command_extra.localalias.0
 1497               		.cfi_endproc
 1498               	.LFE45:
 1500               		.section	.text.numkey2num,"ax",@progbits
 1501               	.global	numkey2num
 1503               	numkey2num:
 1504               	.LVL49:
 1505               	.LFB42:
 778:./tmk_core/common/command.c ****     switch (code) {
 1506               		.loc 1 778 1 is_stmt 1 view -0
 1507               		.cfi_startproc
 1508               	/* prologue: function */
 1509               	/* frame size = 0 */
 1510               	/* stack size = 0 */
 1511               	.L__stack_usage = 0
 779:./tmk_core/common/command.c ****         case KC_1: return 1;
 1512               		.loc 1 779 5 view .LVU317
 1513 0000 8E51      		subi r24,lo8(-(-30))
 1514               	.LVL50:
 779:./tmk_core/common/command.c ****         case KC_1: return 1;
 1515               		.loc 1 779 5 is_stmt 0 view .LVU318
 1516 0002 8A30      		cpi r24,lo8(10)
 1517 0004 00F4      		brsh .L110
 1518 0006 E82F      		mov r30,r24
 1519 0008 F0E0      		ldi r31,0
 1520 000a E050      		subi r30,lo8(-(CSWTCH.57))
 1521 000c F040      		sbci r31,hi8(-(CSWTCH.57))
 1522 000e 8081      		ld r24,Z
 1523               	.LVL51:
 779:./tmk_core/common/command.c ****         case KC_1: return 1;
 1524               		.loc 1 779 5 view .LVU319
 1525 0010 0895      		ret
 1526               	.L110:
 778:./tmk_core/common/command.c ****     switch (code) {
 1527               		.loc 1 778 1 view .LVU320
 1528 0012 80E0      		ldi r24,0
 1529               	/* epilogue start */
 792:./tmk_core/common/command.c **** 
 1530               		.loc 1 792 1 view .LVU321
 1531 0014 0895      		ret
 1532               		.cfi_endproc
 1533               	.LFE42:
 1535               		.section	.text.command_proc,"ax",@progbits
 1536               	.global	command_proc
 1538               	command_proc:
 1539               	.LFB28:
  77:./tmk_core/common/command.c ****     switch (command_state) {
 1540               		.loc 1 77 1 is_stmt 1 view -0
 1541               		.cfi_startproc
 1542 0000 CF93      		push r28
 1543               	.LCFI72:
 1544               		.cfi_def_cfa_offset 3
 1545               		.cfi_offset 28, -2
 1546               	/* prologue: function */
 1547               	/* frame size = 0 */
 1548               	/* stack size = 1 */
 1549               	.L__stack_usage = 1
 1550 0002 C82F      		mov r28,r24
  78:./tmk_core/common/command.c ****         case ONESHOT:
 1551               		.loc 1 78 5 view .LVU323
 1552 0004 8091 0000 		lds r24,command_state
 1553 0008 8130      		cpi r24,lo8(1)
 1554 000a 01F0      		breq .L112
 1555 000c 8823      		tst r24
 1556 000e 01F0      		breq .L113
 1557 0010 8230      		cpi r24,lo8(2)
 1558 0012 01F4      		brne .+2
 1559 0014 00C0      		rjmp .L114
  96:./tmk_core/common/command.c ****             return false;
 1560               		.loc 1 96 13 view .LVU324
  96:./tmk_core/common/command.c ****             return false;
 1561               		.loc 1 96 27 is_stmt 0 view .LVU325
 1562 0016 1092 0000 		sts command_state,__zero_reg__
  97:./tmk_core/common/command.c ****     }
 1563               		.loc 1 97 13 is_stmt 1 view .LVU326
 1564               	.L142:
  81:./tmk_core/common/command.c ****             return (command_extra(code) || command_common(code));
 1565               		.loc 1 81 24 is_stmt 0 view .LVU327
 1566 001a 80E0      		ldi r24,0
 1567 001c 00C0      		rjmp .L111
 1568               	.L113:
  80:./tmk_core/common/command.c ****                 return false;
 1569               		.loc 1 80 13 is_stmt 1 view .LVU328
  80:./tmk_core/common/command.c ****                 return false;
 1570               		.loc 1 80 18 is_stmt 0 view .LVU329
 1571 001e E091 0000 		lds r30,keyboard_report
 1572 0022 F091 0000 		lds r31,keyboard_report+1
  80:./tmk_core/common/command.c ****                 return false;
 1573               		.loc 1 80 16 view .LVU330
 1574 0026 8081      		ld r24,Z
 1575 0028 8232      		cpi r24,lo8(34)
 1576 002a 01F4      		brne .L142
 1577               	.L175:
  86:./tmk_core/common/command.c ****             else
 1578               		.loc 1 86 17 is_stmt 1 view .LVU331
  86:./tmk_core/common/command.c ****             else
 1579               		.loc 1 86 25 is_stmt 0 view .LVU332
 1580 002c 8C2F      		mov r24,r28
 1581 002e 0E94 0000 		call command_extra
  86:./tmk_core/common/command.c ****             else
 1582               		.loc 1 86 45 view .LVU333
 1583 0032 8111      		cpse r24,__zero_reg__
 1584 0034 00C0      		rjmp .L144
  86:./tmk_core/common/command.c ****             else
 1585               		.loc 1 86 48 discriminator 2 view .LVU334
 1586 0036 8C2F      		mov r24,r28
 1587 0038 0E94 0000 		call command_common
 1588               	.L120:
  88:./tmk_core/common/command.c ****             break;
 1589               		.loc 1 88 53 discriminator 6 view .LVU335
 1590 003c 8170      		andi r24,lo8(1)
 1591               	.L111:
 1592               	/* epilogue start */
 100:./tmk_core/common/command.c **** 
 1593               		.loc 1 100 1 view .LVU336
 1594 003e CF91      		pop r28
 1595 0040 0895      		ret
 1596               	.L112:
  83:./tmk_core/common/command.c ****         case CONSOLE:
 1597               		.loc 1 83 13 is_stmt 1 view .LVU337
  85:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1598               		.loc 1 85 13 view .LVU338
  85:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1599               		.loc 1 85 17 is_stmt 0 view .LVU339
 1600 0042 E091 0000 		lds r30,keyboard_report
 1601 0046 F091 0000 		lds r31,keyboard_report+1
  85:./tmk_core/common/command.c ****                 return (command_extra(code) || command_common(code));
 1602               		.loc 1 85 16 view .LVU340
 1603 004a 8081      		ld r24,Z
 1604 004c 8232      		cpi r24,lo8(34)
 1605 004e 01F0      		breq .L175
  88:./tmk_core/common/command.c ****             break;
 1606               		.loc 1 88 17 is_stmt 1 view .LVU341
  88:./tmk_core/common/command.c ****             break;
 1607               		.loc 1 88 25 is_stmt 0 view .LVU342
 1608 0050 8C2F      		mov r24,r28
 1609 0052 0E94 0000 		call command_console_extra
  88:./tmk_core/common/command.c ****             break;
 1610               		.loc 1 88 53 view .LVU343
 1611 0056 8111      		cpse r24,__zero_reg__
 1612 0058 00C0      		rjmp .L145
 1613               	.LBB149:
 1614               	.LBI149:
 542:./tmk_core/common/command.c **** {
 1615               		.loc 1 542 13 is_stmt 1 view .LVU344
 1616               	.LBB150:
 544:./tmk_core/common/command.c ****         case KC_H:
 1617               		.loc 1 544 5 view .LVU345
 1618 005a C431      		cpi r28,lo8(20)
 1619 005c 01F0      		breq .L121
 1620 005e 00F4      		brsh .L122
 1621 0060 CB30      		cpi r28,lo8(11)
 1622 0062 01F0      		breq .L123
 1623 0064 C031      		cpi r28,lo8(16)
 1624 0066 01F0      		breq .L124
 1625               	.L125:
 561:./tmk_core/common/command.c ****             return false;
 1626               		.loc 1 561 13 view .LVU346
 1627               	.LBE150:
 1628               	.LBE149:
 561:./tmk_core/common/command.c ****             return false;
 1629               		.loc 1 561 13 view .LVU347
 561:./tmk_core/common/command.c ****             return false;
 1630               		.loc 1 561 13 view .LVU348
 1631               	.LBB162:
 1632               	.LBB155:
 1633 0068 80E0      		ldi r24,lo8(__c.3454)
 1634 006a 90E0      		ldi r25,hi8(__c.3454)
 1635 006c 0E94 0000 		call xputs
 1636 0070 00C0      		rjmp .L168
 1637               	.L144:
 1638               	.LBE155:
 1639               	.LBE162:
  86:./tmk_core/common/command.c ****             else
 1640               		.loc 1 86 45 is_stmt 0 view .LVU349
 1641 0072 81E0      		ldi r24,lo8(1)
 1642 0074 90E0      		ldi r25,0
 1643 0076 00C0      		rjmp .L120
 1644               	.L122:
 1645               	.LBB163:
 1646               	.LBB156:
 544:./tmk_core/common/command.c ****         case KC_H:
 1647               		.loc 1 544 5 view .LVU350
 1648 0078 C932      		cpi r28,lo8(41)
 1649 007a 01F0      		breq .L121
 1650 007c C833      		cpi r28,lo8(56)
 1651 007e 01F4      		brne .L125
 1652               	.L123:
 547:./tmk_core/common/command.c ****             break;
 1653               		.loc 1 547 13 is_stmt 1 view .LVU351
 1654               	.LBB151:
 1655               	.LBI151:
 532:./tmk_core/common/command.c **** {
 1656               		.loc 1 532 13 view .LVU352
 1657               	.LBB152:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1658               		.loc 1 534 5 view .LVU353
 1659               	.LBE152:
 1660               	.LBE151:
 1661               	.LBE156:
 1662               	.LBE163:
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1663               		.loc 1 534 5 view .LVU354
 534:./tmk_core/common/command.c ****           "ESC/q:	quit\n"
 1664               		.loc 1 534 5 view .LVU355
 1665               	.LBB164:
 1666               	.LBB157:
 1667               	.LBB154:
 1668               	.LBB153:
 1669 0080 80E0      		ldi r24,lo8(__c.3440)
 1670 0082 90E0      		ldi r25,hi8(__c.3440)
 1671 0084 0E94 0000 		call xputs
 1672               	.LBE153:
 1673               	.LBE154:
 548:./tmk_core/common/command.c ****         case KC_Q:
 1674               		.loc 1 548 13 view .LVU356
 564:./tmk_core/common/command.c ****     return true;
 1675               		.loc 1 564 5 view .LVU357
 1676               	.LBE157:
 1677               	.LBE164:
 564:./tmk_core/common/command.c ****     return true;
 1678               		.loc 1 564 5 view .LVU358
 564:./tmk_core/common/command.c ****     return true;
 1679               		.loc 1 564 5 view .LVU359
 1680               	.LBB165:
 1681               	.LBB158:
 1682 0088 80E0      		ldi r24,lo8(__c.3456)
 1683 008a 90E0      		ldi r25,hi8(__c.3456)
 1684 008c 0E94 0000 		call xputs
 565:./tmk_core/common/command.c **** }
 1685               		.loc 1 565 5 view .LVU360
 1686               	.L145:
 1687               	.LBE158:
 1688               	.LBE165:
  88:./tmk_core/common/command.c ****             break;
 1689               		.loc 1 88 53 is_stmt 0 view .LVU361
 1690 0090 81E0      		ldi r24,lo8(1)
 1691 0092 00C0      		rjmp .L120
 1692               	.L121:
 1693               	.LBB166:
 1694               	.LBB159:
 551:./tmk_core/common/command.c ****             return false;
 1695               		.loc 1 551 13 is_stmt 1 view .LVU362
 551:./tmk_core/common/command.c ****             return false;
 1696               		.loc 1 551 27 is_stmt 0 view .LVU363
 1697 0094 1092 0000 		sts command_state,__zero_reg__
 552:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1698               		.loc 1 552 13 is_stmt 1 view .LVU364
 1699               	.L168:
 562:./tmk_core/common/command.c ****     }
 1700               		.loc 1 562 13 view .LVU365
 1701               	.LBE159:
 1702               	.LBE166:
  88:./tmk_core/common/command.c ****             break;
 1703               		.loc 1 88 53 is_stmt 0 view .LVU366
 1704 0098 80E0      		ldi r24,0
 1705 009a 00C0      		rjmp .L120
 1706               	.L124:
 1707               	.LBB167:
 1708               	.LBB160:
 555:./tmk_core/common/command.c ****             print("M> ");
 1709               		.loc 1 555 13 is_stmt 1 view .LVU367
 1710 009c 0E94 0000 		call mousekey_console_help
 556:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1711               		.loc 1 556 13 view .LVU368
 1712               	.LBE160:
 1713               	.LBE167:
 556:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1714               		.loc 1 556 13 view .LVU369
 556:./tmk_core/common/command.c ****             command_state = MOUSEKEY;
 1715               		.loc 1 556 13 view .LVU370
 1716               	.LBB168:
 1717               	.LBB161:
 1718 00a0 80E0      		ldi r24,lo8(__c.3451)
 1719 00a2 90E0      		ldi r25,hi8(__c.3451)
 1720 00a4 0E94 0000 		call xputs
 557:./tmk_core/common/command.c ****             return true;
 1721               		.loc 1 557 13 view .LVU371
 557:./tmk_core/common/command.c ****             return true;
 1722               		.loc 1 557 27 is_stmt 0 view .LVU372
 1723 00a8 82E0      		ldi r24,lo8(2)
 1724 00aa 8093 0000 		sts command_state,r24
 558:./tmk_core/common/command.c **** #endif
 1725               		.loc 1 558 13 is_stmt 1 view .LVU373
 1726 00ae 00C0      		rjmp .L145
 1727               	.L114:
 1728               	.LBE161:
 1729               	.LBE168:
  89:./tmk_core/common/command.c **** #ifdef MOUSEKEY_ENABLE
 1730               		.loc 1 89 13 view .LVU374
  92:./tmk_core/common/command.c ****             break;
 1731               		.loc 1 92 13 view .LVU375
 1732               	.LBB169:
 1733               	.LBI169:
 711:./tmk_core/common/command.c **** {
 1734               		.loc 1 711 13 view .LVU376
 1735               	.LBB170:
 713:./tmk_core/common/command.c ****         case KC_H:
 1736               		.loc 1 713 5 view .LVU377
 1737 00b0 C432      		cpi r28,lo8(36)
 1738 00b2 00F4      		brsh .L126
 1739 00b4 CE31      		cpi r28,lo8(30)
 1740 00b6 00F0      		brlo .+2
 1741 00b8 00C0      		rjmp .L127
 1742 00ba CB30      		cpi r28,lo8(11)
 1743 00bc 01F0      		breq .L128
 1744 00be 00F4      		brsh .L129
 1745 00c0 C730      		cpi r28,lo8(7)
 1746 00c2 01F4      		brne .+2
 1747 00c4 00C0      		rjmp .L130
 1748               	.L131:
 761:./tmk_core/common/command.c ****             return false;
 1749               		.loc 1 761 13 view .LVU378
 1750               	.LBE170:
 1751               	.LBE169:
 761:./tmk_core/common/command.c ****             return false;
 1752               		.loc 1 761 13 view .LVU379
 761:./tmk_core/common/command.c ****             return false;
 1753               		.loc 1 761 13 view .LVU380
 1754               	.LBB236:
 1755               	.LBB211:
 1756 00c6 80E0      		ldi r24,lo8(__c.3578)
 1757 00c8 90E0      		ldi r25,hi8(__c.3578)
 1758               	.L172:
 767:./tmk_core/common/command.c ****     }
 1759               		.loc 1 767 9 is_stmt 0 view .LVU381
 1760 00ca 0E94 0000 		call xputs
 1761 00ce 00C0      		rjmp .L171
 1762               	.L129:
 713:./tmk_core/common/command.c ****         case KC_H:
 1763               		.loc 1 713 5 view .LVU382
 1764 00d0 C331      		cpi r28,lo8(19)
 1765 00d2 01F0      		breq .L132
 1766 00d4 C431      		cpi r28,lo8(20)
 1767 00d6 01F4      		brne .L131
 1768               	.L133:
 720:./tmk_core/common/command.c ****                 mousekey_param = 0;
 1769               		.loc 1 720 13 is_stmt 1 view .LVU383
 720:./tmk_core/common/command.c ****                 mousekey_param = 0;
 1770               		.loc 1 720 16 is_stmt 0 view .LVU384
 1771 00d8 8091 0000 		lds r24,mousekey_param
 1772 00dc 8823      		tst r24
 1773 00de 01F0      		breq .L140
 721:./tmk_core/common/command.c ****             } else {
 1774               		.loc 1 721 17 is_stmt 1 view .LVU385
 721:./tmk_core/common/command.c ****             } else {
 1775               		.loc 1 721 32 is_stmt 0 view .LVU386
 1776 00e0 1092 0000 		sts mousekey_param,__zero_reg__
 727:./tmk_core/common/command.c ****         case KC_P:
 1777               		.loc 1 727 13 is_stmt 1 view .LVU387
 1778 00e4 00C0      		rjmp .L139
 1779               	.L126:
 713:./tmk_core/common/command.c ****         case KC_H:
 1780               		.loc 1 713 5 is_stmt 0 view .LVU388
 1781 00e6 CB34      		cpi r28,lo8(75)
 1782 00e8 01F4      		brne .+2
 1783 00ea 00C0      		rjmp .L134
 1784 00ec 00F4      		brsh .L135
 1785 00ee C932      		cpi r28,lo8(41)
 1786 00f0 01F0      		breq .L133
 1787 00f2 C833      		cpi r28,lo8(56)
 1788 00f4 01F4      		brne .L131
 1789               	.L128:
 716:./tmk_core/common/command.c ****             break;
 1790               		.loc 1 716 13 is_stmt 1 view .LVU389
 1791 00f6 0E94 0000 		call mousekey_console_help
 717:./tmk_core/common/command.c ****         case KC_Q:
 1792               		.loc 1 717 13 view .LVU390
 1793               	.L139:
 764:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1794               		.loc 1 764 5 view .LVU391
 764:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1795               		.loc 1 764 9 is_stmt 0 view .LVU392
 1796 00fa 8091 0000 		lds r24,mousekey_param
 764:./tmk_core/common/command.c ****         xprintf("M%d> ", mousekey_param);
 1797               		.loc 1 764 8 view .LVU393
 1798 00fe 8823      		tst r24
 1799 0100 01F4      		brne .+2
 1800 0102 00C0      		rjmp .L141
 765:./tmk_core/common/command.c ****     } else {
 1801               		.loc 1 765 9 is_stmt 1 view .LVU394
 1802               	.LBE211:
 1803               	.LBE236:
 765:./tmk_core/common/command.c ****     } else {
 1804               		.loc 1 765 9 view .LVU395
 765:./tmk_core/common/command.c ****     } else {
 1805               		.loc 1 765 9 view .LVU396
 1806               	.LBB237:
 1807               	.LBB212:
 1808 0104 1F92      		push __zero_reg__
 1809               	.LCFI73:
 1810               		.cfi_def_cfa_offset 4
 1811 0106 8F93      		push r24
 1812               	.LCFI74:
 1813               		.cfi_def_cfa_offset 5
 1814 0108 80E0      		ldi r24,lo8(__c.3580)
 1815 010a 90E0      		ldi r25,hi8(__c.3580)
 1816 010c 9F93      		push r25
 1817               	.LCFI75:
 1818               		.cfi_def_cfa_offset 6
 1819 010e 8F93      		push r24
 1820               	.LCFI76:
 1821               		.cfi_def_cfa_offset 7
 1822 0110 0E94 0000 		call __xprintf
 1823 0114 0F90      		pop __tmp_reg__
 1824 0116 0F90      		pop __tmp_reg__
 1825 0118 0F90      		pop __tmp_reg__
 1826 011a 0F90      		pop __tmp_reg__
 1827               	.LCFI77:
 1828               		.cfi_def_cfa_offset 3
 1829               	.L171:
 1830               	.LBE212:
 1831               	.LBE237:
  99:./tmk_core/common/command.c **** }
 1832               		.loc 1 99 12 is_stmt 0 view .LVU397
 1833 011c 81E0      		ldi r24,lo8(1)
 1834 011e 00C0      		rjmp .L111
 1835               	.L135:
 1836               	.LBB238:
 1837               	.LBB213:
 713:./tmk_core/common/command.c ****         case KC_H:
 1838               		.loc 1 713 5 view .LVU398
 1839 0120 C135      		cpi r28,lo8(81)
 1840 0122 01F4      		brne .+2
 1841 0124 00C0      		rjmp .L136
 1842 0126 C235      		cpi r28,lo8(82)
 1843 0128 01F4      		brne .+2
 1844 012a 00C0      		rjmp .L137
 1845 012c CE34      		cpi r28,lo8(78)
 1846 012e 01F4      		brne .L131
 749:./tmk_core/common/command.c ****             break;
 1847               		.loc 1 749 13 is_stmt 1 view .LVU399
 1848 0130 6AE0      		ldi r22,lo8(10)
 1849 0132 00C0      		rjmp .L170
 1850               	.L140:
 723:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 1851               		.loc 1 723 17 view .LVU400
 1852               	.LBE213:
 1853               	.LBE238:
 723:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 1854               		.loc 1 723 17 view .LVU401
 723:./tmk_core/common/command.c ****                 command_state = CONSOLE;
 1855               		.loc 1 723 17 view .LVU402
 1856               	.LBB239:
 1857               	.LBB214:
 1858 0134 80E0      		ldi r24,lo8(__c.3561)
 1859 0136 90E0      		ldi r25,hi8(__c.3561)
 1860 0138 0E94 0000 		call xputs
 724:./tmk_core/common/command.c ****                 return false;
 1861               		.loc 1 724 17 view .LVU403
 724:./tmk_core/common/command.c ****                 return false;
 1862               		.loc 1 724 31 is_stmt 0 view .LVU404
 1863 013c 81E0      		ldi r24,lo8(1)
 1864 013e 8093 0000 		sts command_state,r24
 725:./tmk_core/common/command.c ****             }
 1865               		.loc 1 725 17 is_stmt 1 view .LVU405
 1866 0142 00C0      		rjmp .L111
 1867               	.L132:
 729:./tmk_core/common/command.c ****             break;
 1868               		.loc 1 729 13 view .LVU406
 1869               	.LBB171:
 1870               	.LBI171:
 575:./tmk_core/common/command.c **** {
 1871               		.loc 1 575 13 view .LVU407
 1872               	.LBB172:
 579:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1873               		.loc 1 579 5 view .LVU408
 1874               	.LBE172:
 1875               	.LBE171:
 1876               	.LBE214:
 1877               	.LBE239:
 579:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1878               		.loc 1 579 5 view .LVU409
 579:./tmk_core/common/command.c ****     print("1: delay(*10ms): "); pdec(mk_delay); print("\n");
 1879               		.loc 1 579 5 view .LVU410
 1880               	.LBB240:
 1881               	.LBB215:
 1882               	.LBB192:
 1883               	.LBB173:
 1884 0144 80E0      		ldi r24,lo8(__c.3462)
 1885 0146 90E0      		ldi r25,hi8(__c.3462)
 1886 0148 0E94 0000 		call xputs
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1887               		.loc 1 580 5 view .LVU411
 1888               	.LBE173:
 1889               	.LBE192:
 1890               	.LBE215:
 1891               	.LBE240:
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1892               		.loc 1 580 5 view .LVU412
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1893               		.loc 1 580 5 view .LVU413
 1894               	.LBB241:
 1895               	.LBB216:
 1896               	.LBB193:
 1897               	.LBB174:
 1898 014c 80E0      		ldi r24,lo8(__c.3464)
 1899 014e 90E0      		ldi r25,hi8(__c.3464)
 1900 0150 0E94 0000 		call xputs
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1901               		.loc 1 580 33 view .LVU414
 1902               	.LBE174:
 1903               	.LBE193:
 1904               	.LBE216:
 1905               	.LBE241:
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1906               		.loc 1 580 33 view .LVU415
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1907               		.loc 1 580 33 view .LVU416
 1908               	.LBB242:
 1909               	.LBB217:
 1910               	.LBB194:
 1911               	.LBB175:
 1912 0154 8091 0000 		lds r24,mk_delay
 1913 0158 1F92      		push __zero_reg__
 1914               	.LCFI78:
 1915               		.cfi_def_cfa_offset 4
 1916 015a 8F93      		push r24
 1917               	.LCFI79:
 1918               		.cfi_def_cfa_offset 5
 1919 015c 80E0      		ldi r24,lo8(__c.3466)
 1920 015e 90E0      		ldi r25,hi8(__c.3466)
 1921 0160 9F93      		push r25
 1922               	.LCFI80:
 1923               		.cfi_def_cfa_offset 6
 1924 0162 8F93      		push r24
 1925               	.LCFI81:
 1926               		.cfi_def_cfa_offset 7
 1927 0164 0E94 0000 		call __xprintf
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1928               		.loc 1 580 49 view .LVU417
 1929               	.LBE175:
 1930               	.LBE194:
 1931               	.LBE217:
 1932               	.LBE242:
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1933               		.loc 1 580 49 view .LVU418
 580:./tmk_core/common/command.c ****     print("2: interval(ms): "); pdec(mk_interval); print("\n");
 1934               		.loc 1 580 49 view .LVU419
 1935               	.LBB243:
 1936               	.LBB218:
 1937               	.LBB195:
 1938               	.LBB176:
 1939 0168 80E0      		ldi r24,lo8(__c.3468)
 1940 016a 90E0      		ldi r25,hi8(__c.3468)
 1941 016c 0E94 0000 		call xputs
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1942               		.loc 1 581 5 view .LVU420
 1943               	.LBE176:
 1944               	.LBE195:
 1945               	.LBE218:
 1946               	.LBE243:
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1947               		.loc 1 581 5 view .LVU421
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1948               		.loc 1 581 5 view .LVU422
 1949               	.LBB244:
 1950               	.LBB219:
 1951               	.LBB196:
 1952               	.LBB177:
 1953 0170 80E0      		ldi r24,lo8(__c.3470)
 1954 0172 90E0      		ldi r25,hi8(__c.3470)
 1955 0174 0E94 0000 		call xputs
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1956               		.loc 1 581 33 view .LVU423
 1957               	.LBE177:
 1958               	.LBE196:
 1959               	.LBE219:
 1960               	.LBE244:
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1961               		.loc 1 581 33 view .LVU424
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1962               		.loc 1 581 33 view .LVU425
 1963               	.LBB245:
 1964               	.LBB220:
 1965               	.LBB197:
 1966               	.LBB178:
 1967 0178 8091 0000 		lds r24,mk_interval
 1968 017c 1F92      		push __zero_reg__
 1969               	.LCFI82:
 1970               		.cfi_def_cfa_offset 8
 1971 017e 8F93      		push r24
 1972               	.LCFI83:
 1973               		.cfi_def_cfa_offset 9
 1974 0180 80E0      		ldi r24,lo8(__c.3472)
 1975 0182 90E0      		ldi r25,hi8(__c.3472)
 1976 0184 9F93      		push r25
 1977               	.LCFI84:
 1978               		.cfi_def_cfa_offset 10
 1979 0186 8F93      		push r24
 1980               	.LCFI85:
 1981               		.cfi_def_cfa_offset 11
 1982 0188 0E94 0000 		call __xprintf
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1983               		.loc 1 581 52 view .LVU426
 1984               	.LBE178:
 1985               	.LBE197:
 1986               	.LBE220:
 1987               	.LBE245:
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1988               		.loc 1 581 52 view .LVU427
 581:./tmk_core/common/command.c ****     print("3: max_speed: "); pdec(mk_max_speed); print("\n");
 1989               		.loc 1 581 52 view .LVU428
 1990               	.LBB246:
 1991               	.LBB221:
 1992               	.LBB198:
 1993               	.LBB179:
 1994 018c 80E0      		ldi r24,lo8(__c.3474)
 1995 018e 90E0      		ldi r25,hi8(__c.3474)
 1996 0190 0E94 0000 		call xputs
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 1997               		.loc 1 582 5 view .LVU429
 1998               	.LBE179:
 1999               	.LBE198:
 2000               	.LBE221:
 2001               	.LBE246:
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2002               		.loc 1 582 5 view .LVU430
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2003               		.loc 1 582 5 view .LVU431
 2004               	.LBB247:
 2005               	.LBB222:
 2006               	.LBB199:
 2007               	.LBB180:
 2008 0194 80E0      		ldi r24,lo8(__c.3476)
 2009 0196 90E0      		ldi r25,hi8(__c.3476)
 2010 0198 0E94 0000 		call xputs
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2011               		.loc 1 582 30 view .LVU432
 2012               	.LBE180:
 2013               	.LBE199:
 2014               	.LBE222:
 2015               	.LBE247:
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2016               		.loc 1 582 30 view .LVU433
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2017               		.loc 1 582 30 view .LVU434
 2018               	.LBB248:
 2019               	.LBB223:
 2020               	.LBB200:
 2021               	.LBB181:
 2022 019c 8091 0000 		lds r24,mk_max_speed
 2023 01a0 1F92      		push __zero_reg__
 2024               	.LCFI86:
 2025               		.cfi_def_cfa_offset 12
 2026 01a2 8F93      		push r24
 2027               	.LCFI87:
 2028               		.cfi_def_cfa_offset 13
 2029 01a4 80E0      		ldi r24,lo8(__c.3478)
 2030 01a6 90E0      		ldi r25,hi8(__c.3478)
 2031 01a8 9F93      		push r25
 2032               	.LCFI88:
 2033               		.cfi_def_cfa_offset 14
 2034 01aa 8F93      		push r24
 2035               	.LCFI89:
 2036               		.cfi_def_cfa_offset 15
 2037 01ac 0E94 0000 		call __xprintf
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2038               		.loc 1 582 50 view .LVU435
 2039               	.LBE181:
 2040               	.LBE200:
 2041               	.LBE223:
 2042               	.LBE248:
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2043               		.loc 1 582 50 view .LVU436
 582:./tmk_core/common/command.c ****     print("4: time_to_max: "); pdec(mk_time_to_max); print("\n");
 2044               		.loc 1 582 50 view .LVU437
 2045               	.LBB249:
 2046               	.LBB224:
 2047               	.LBB201:
 2048               	.LBB182:
 2049 01b0 80E0      		ldi r24,lo8(__c.3480)
 2050 01b2 90E0      		ldi r25,hi8(__c.3480)
 2051 01b4 0E94 0000 		call xputs
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2052               		.loc 1 583 5 view .LVU438
 2053               	.LBE182:
 2054               	.LBE201:
 2055               	.LBE224:
 2056               	.LBE249:
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2057               		.loc 1 583 5 view .LVU439
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2058               		.loc 1 583 5 view .LVU440
 2059               	.LBB250:
 2060               	.LBB225:
 2061               	.LBB202:
 2062               	.LBB183:
 2063 01b8 80E0      		ldi r24,lo8(__c.3482)
 2064 01ba 90E0      		ldi r25,hi8(__c.3482)
 2065 01bc 0E94 0000 		call xputs
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2066               		.loc 1 583 32 view .LVU441
 2067               	.LBE183:
 2068               	.LBE202:
 2069               	.LBE225:
 2070               	.LBE250:
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2071               		.loc 1 583 32 view .LVU442
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2072               		.loc 1 583 32 view .LVU443
 2073               	.LBB251:
 2074               	.LBB226:
 2075               	.LBB203:
 2076               	.LBB184:
 2077 01c0 8091 0000 		lds r24,mk_time_to_max
 2078 01c4 1F92      		push __zero_reg__
 2079               	.LCFI90:
 2080               		.cfi_def_cfa_offset 16
 2081 01c6 8F93      		push r24
 2082               	.LCFI91:
 2083               		.cfi_def_cfa_offset 17
 2084 01c8 80E0      		ldi r24,lo8(__c.3484)
 2085 01ca 90E0      		ldi r25,hi8(__c.3484)
 2086 01cc 9F93      		push r25
 2087               	.LCFI92:
 2088               		.cfi_def_cfa_offset 18
 2089 01ce 8F93      		push r24
 2090               	.LCFI93:
 2091               		.cfi_def_cfa_offset 19
 2092 01d0 0E94 0000 		call __xprintf
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2093               		.loc 1 583 54 view .LVU444
 2094               	.LBE184:
 2095               	.LBE203:
 2096               	.LBE226:
 2097               	.LBE251:
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2098               		.loc 1 583 54 view .LVU445
 583:./tmk_core/common/command.c ****     print("5: wheel_max_speed: "); pdec(mk_wheel_max_speed); print("\n");
 2099               		.loc 1 583 54 view .LVU446
 2100               	.LBB252:
 2101               	.LBB227:
 2102               	.LBB204:
 2103               	.LBB185:
 2104 01d4 80E0      		ldi r24,lo8(__c.3486)
 2105 01d6 90E0      		ldi r25,hi8(__c.3486)
 2106 01d8 0E94 0000 		call xputs
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2107               		.loc 1 584 5 view .LVU447
 2108               	.LBE185:
 2109               	.LBE204:
 2110               	.LBE227:
 2111               	.LBE252:
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2112               		.loc 1 584 5 view .LVU448
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2113               		.loc 1 584 5 view .LVU449
 2114               	.LBB253:
 2115               	.LBB228:
 2116               	.LBB205:
 2117               	.LBB186:
 2118 01dc 80E0      		ldi r24,lo8(__c.3488)
 2119 01de 90E0      		ldi r25,hi8(__c.3488)
 2120 01e0 0E94 0000 		call xputs
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2121               		.loc 1 584 36 view .LVU450
 2122               	.LBE186:
 2123               	.LBE205:
 2124               	.LBE228:
 2125               	.LBE253:
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2126               		.loc 1 584 36 view .LVU451
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2127               		.loc 1 584 36 view .LVU452
 2128               	.LBB254:
 2129               	.LBB229:
 2130               	.LBB206:
 2131               	.LBB187:
 2132 01e4 8091 0000 		lds r24,mk_wheel_max_speed
 2133 01e8 1F92      		push __zero_reg__
 2134               	.LCFI94:
 2135               		.cfi_def_cfa_offset 20
 2136 01ea 8F93      		push r24
 2137               	.LCFI95:
 2138               		.cfi_def_cfa_offset 21
 2139 01ec 80E0      		ldi r24,lo8(__c.3490)
 2140 01ee 90E0      		ldi r25,hi8(__c.3490)
 2141 01f0 9F93      		push r25
 2142               	.LCFI96:
 2143               		.cfi_def_cfa_offset 22
 2144 01f2 8F93      		push r24
 2145               	.LCFI97:
 2146               		.cfi_def_cfa_offset 23
 2147 01f4 0E94 0000 		call __xprintf
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2148               		.loc 1 584 62 view .LVU453
 2149               	.LBE187:
 2150               	.LBE206:
 2151               	.LBE229:
 2152               	.LBE254:
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2153               		.loc 1 584 62 view .LVU454
 584:./tmk_core/common/command.c ****     print("6: wheel_time_to_max: "); pdec(mk_wheel_time_to_max); print("\n");
 2154               		.loc 1 584 62 view .LVU455
 2155               	.LBB255:
 2156               	.LBB230:
 2157               	.LBB207:
 2158               	.LBB188:
 2159 01f8 80E0      		ldi r24,lo8(__c.3492)
 2160 01fa 90E0      		ldi r25,hi8(__c.3492)
 2161 01fc 0E94 0000 		call xputs
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2162               		.loc 1 585 5 view .LVU456
 2163               	.LBE188:
 2164               	.LBE207:
 2165               	.LBE230:
 2166               	.LBE255:
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2167               		.loc 1 585 5 view .LVU457
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2168               		.loc 1 585 5 view .LVU458
 2169               	.LBB256:
 2170               	.LBB231:
 2171               	.LBB208:
 2172               	.LBB189:
 2173 0200 80E0      		ldi r24,lo8(__c.3494)
 2174 0202 90E0      		ldi r25,hi8(__c.3494)
 2175 0204 0E94 0000 		call xputs
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2176               		.loc 1 585 38 view .LVU459
 2177               	.LBE189:
 2178               	.LBE208:
 2179               	.LBE231:
 2180               	.LBE256:
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2181               		.loc 1 585 38 view .LVU460
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2182               		.loc 1 585 38 view .LVU461
 2183               	.LBB257:
 2184               	.LBB232:
 2185               	.LBB209:
 2186               	.LBB190:
 2187 0208 8091 0000 		lds r24,mk_wheel_time_to_max
 2188 020c 1F92      		push __zero_reg__
 2189               	.LCFI98:
 2190               		.cfi_def_cfa_offset 24
 2191 020e 8F93      		push r24
 2192               	.LCFI99:
 2193               		.cfi_def_cfa_offset 25
 2194 0210 80E0      		ldi r24,lo8(__c.3496)
 2195 0212 90E0      		ldi r25,hi8(__c.3496)
 2196 0214 9F93      		push r25
 2197               	.LCFI100:
 2198               		.cfi_def_cfa_offset 26
 2199 0216 8F93      		push r24
 2200               	.LCFI101:
 2201               		.cfi_def_cfa_offset 27
 2202 0218 0E94 0000 		call __xprintf
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2203               		.loc 1 585 66 view .LVU462
 2204               	.LBE190:
 2205               	.LBE209:
 2206               	.LBE232:
 2207               	.LBE257:
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2208               		.loc 1 585 66 view .LVU463
 585:./tmk_core/common/command.c **** #endif /* !NO_PRINT */
 2209               		.loc 1 585 66 view .LVU464
 2210               	.LBB258:
 2211               	.LBB233:
 2212               	.LBB210:
 2213               	.LBB191:
 2214 021c 80E0      		ldi r24,lo8(__c.3498)
 2215 021e 90E0      		ldi r25,hi8(__c.3498)
 2216 0220 0E94 0000 		call xputs
 2217 0224 8DB7      		in r24,__SP_L__
 2218 0226 9EB7      		in r25,__SP_H__
 2219 0228 4896      		adiw r24,24
 2220 022a 0FB6      		in __tmp_reg__,__SREG__
 2221 022c F894      		cli
 2222 022e 9EBF      		out __SP_H__,r25
 2223 0230 0FBE      		out __SREG__,__tmp_reg__
 2224 0232 8DBF      		out __SP_L__,r24
 2225               	.LCFI102:
 2226               		.cfi_def_cfa_offset 3
 2227 0234 00C0      		rjmp .L139
 2228               	.L127:
 2229               	.LBE191:
 2230               	.LBE210:
 737:./tmk_core/common/command.c ****             break;
 2231               		.loc 1 737 13 view .LVU465
 737:./tmk_core/common/command.c ****             break;
 2232               		.loc 1 737 30 is_stmt 0 view .LVU466
 2233 0236 8C2F      		mov r24,r28
 2234 0238 0E94 0000 		call numkey2num
 737:./tmk_core/common/command.c ****             break;
 2235               		.loc 1 737 28 view .LVU467
 2236 023c 8093 0000 		sts mousekey_param,r24
 738:./tmk_core/common/command.c ****         case KC_UP:
 2237               		.loc 1 738 13 is_stmt 1 view .LVU468
 2238 0240 00C0      		rjmp .L139
 2239               	.L137:
 740:./tmk_core/common/command.c ****             break;
 2240               		.loc 1 740 13 view .LVU469
 2241 0242 61E0      		ldi r22,lo8(1)
 2242               	.L169:
 746:./tmk_core/common/command.c ****             break;
 2243               		.loc 1 746 13 is_stmt 0 view .LVU470
 2244 0244 8091 0000 		lds r24,mousekey_param
 2245 0248 0E94 0000 		call mousekey_param_inc
 747:./tmk_core/common/command.c ****         case KC_PGDN:
 2246               		.loc 1 747 13 is_stmt 1 view .LVU471
 2247 024c 00C0      		rjmp .L139
 2248               	.L136:
 743:./tmk_core/common/command.c ****             break;
 2249               		.loc 1 743 13 view .LVU472
 2250 024e 61E0      		ldi r22,lo8(1)
 2251               	.L170:
 749:./tmk_core/common/command.c ****             break;
 2252               		.loc 1 749 13 is_stmt 0 view .LVU473
 2253 0250 8091 0000 		lds r24,mousekey_param
 2254 0254 0E94 0000 		call mousekey_param_dec
 750:./tmk_core/common/command.c ****         case KC_D:
 2255               		.loc 1 750 13 is_stmt 1 view .LVU474
 2256 0258 00C0      		rjmp .L139
 2257               	.L134:
 746:./tmk_core/common/command.c ****             break;
 2258               		.loc 1 746 13 view .LVU475
 2259 025a 6AE0      		ldi r22,lo8(10)
 2260 025c 00C0      		rjmp .L169
 2261               	.L130:
 752:./tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2262               		.loc 1 752 13 view .LVU476
 752:./tmk_core/common/command.c ****             mk_interval = MOUSEKEY_INTERVAL;
 2263               		.loc 1 752 22 is_stmt 0 view .LVU477
 2264 025e 1092 0000 		sts mk_delay,__zero_reg__
 753:./tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2265               		.loc 1 753 13 is_stmt 1 view .LVU478
 753:./tmk_core/common/command.c ****             mk_max_speed = MOUSEKEY_MAX_SPEED;
 2266               		.loc 1 753 25 is_stmt 0 view .LVU479
 2267 0262 80E1      		ldi r24,lo8(16)
 2268 0264 8093 0000 		sts mk_interval,r24
 754:./tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2269               		.loc 1 754 13 is_stmt 1 view .LVU480
 754:./tmk_core/common/command.c ****             mk_time_to_max = MOUSEKEY_TIME_TO_MAX;
 2270               		.loc 1 754 26 is_stmt 0 view .LVU481
 2271 0268 C093 0000 		sts mk_max_speed,r28
 755:./tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2272               		.loc 1 755 13 is_stmt 1 view .LVU482
 755:./tmk_core/common/command.c ****             mk_wheel_max_speed = MOUSEKEY_WHEEL_MAX_SPEED;
 2273               		.loc 1 755 28 is_stmt 0 view .LVU483
 2274 026c 8CE3      		ldi r24,lo8(60)
 2275 026e 8093 0000 		sts mk_time_to_max,r24
 756:./tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2276               		.loc 1 756 13 is_stmt 1 view .LVU484
 756:./tmk_core/common/command.c ****             mk_wheel_time_to_max = MOUSEKEY_WHEEL_TIME_TO_MAX;
 2277               		.loc 1 756 32 is_stmt 0 view .LVU485
 2278 0272 88E0      		ldi r24,lo8(8)
 2279 0274 8093 0000 		sts mk_wheel_max_speed,r24
 757:./tmk_core/common/command.c ****             print("set default\n");
 2280               		.loc 1 757 13 is_stmt 1 view .LVU486
 757:./tmk_core/common/command.c ****             print("set default\n");
 2281               		.loc 1 757 34 is_stmt 0 view .LVU487
 2282 0278 88E2      		ldi r24,lo8(40)
 2283 027a 8093 0000 		sts mk_wheel_time_to_max,r24
 758:./tmk_core/common/command.c ****             break;
 2284               		.loc 1 758 13 is_stmt 1 view .LVU488
 2285               	.LBE233:
 2286               	.LBE258:
 758:./tmk_core/common/command.c ****             break;
 2287               		.loc 1 758 13 view .LVU489
 758:./tmk_core/common/command.c ****             break;
 2288               		.loc 1 758 13 view .LVU490
 2289               	.LBB259:
 2290               	.LBB234:
 2291 027e 80E0      		ldi r24,lo8(__c.3575)
 2292 0280 90E0      		ldi r25,hi8(__c.3575)
 2293 0282 0E94 0000 		call xputs
 759:./tmk_core/common/command.c ****         default:
 2294               		.loc 1 759 13 view .LVU491
 2295 0286 00C0      		rjmp .L139
 2296               	.L141:
 767:./tmk_core/common/command.c ****     }
 2297               		.loc 1 767 9 view .LVU492
 2298               	.LBE234:
 2299               	.LBE259:
 767:./tmk_core/common/command.c ****     }
 2300               		.loc 1 767 9 view .LVU493
 767:./tmk_core/common/command.c ****     }
 2301               		.loc 1 767 9 view .LVU494
 2302               	.LBB260:
 2303               	.LBB235:
 2304 0288 80E0      		ldi r24,lo8(__c.3582)
 2305 028a 90E0      		ldi r25,hi8(__c.3582)
 2306 028c 00C0      		rjmp .L172
 2307               	.LBE235:
 2308               	.LBE260:
 2309               		.cfi_endproc
 2310               	.LFE28:
 2312               		.section	.rodata.CSWTCH.57,"a"
 2315               	CSWTCH.57:
 2316 0000 01        		.byte	1
 2317 0001 02        		.byte	2
 2318 0002 03        		.byte	3
 2319 0003 04        		.byte	4
 2320 0004 05        		.byte	5
 2321 0005 06        		.byte	6
 2322 0006 07        		.byte	7
 2323 0007 08        		.byte	8
 2324 0008 09        		.byte	9
 2325 0009 00        		.byte	0
 2326               		.section	.progmem.data.__c.3544,"a"
 2329               	__c.3544:
 2330 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2330      6865 656C 
 2330      5F74 696D 
 2330      655F 746F 
 2330      5F6D 6178 
 2331               		.section	.progmem.data.__c.3541,"a"
 2334               	__c.3541:
 2335 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2335      6865 656C 
 2335      5F6D 6178 
 2335      5F73 7065 
 2335      6564 203D 
 2336               		.section	.progmem.data.__c.3538,"a"
 2339               	__c.3538:
 2340 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2340      696D 655F 
 2340      746F 5F6D 
 2340      6178 203D 
 2340      2025 640A 
 2341               		.section	.progmem.data.__c.3535,"a"
 2344               	__c.3535:
 2345 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2345      6178 5F73 
 2345      7065 6564 
 2345      203D 2025 
 2345      640A 00
 2346               		.section	.progmem.data.__c.3532,"a"
 2349               	__c.3532:
 2350 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2350      6E74 6572 
 2350      7661 6C20 
 2350      3D20 2564 
 2350      0A00 
 2351               		.section	.progmem.data.__c.3528,"a"
 2354               	__c.3528:
 2355 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2355      656C 6179 
 2355      203D 2025 
 2355      640A 00
 2356               		.section	.progmem.data.__c.3521,"a"
 2359               	__c.3521:
 2360 0000 6D6B 5F77 		.string	"mk_wheel_time_to_max = %d\n"
 2360      6865 656C 
 2360      5F74 696D 
 2360      655F 746F 
 2360      5F6D 6178 
 2361               		.section	.progmem.data.__c.3518,"a"
 2364               	__c.3518:
 2365 0000 6D6B 5F77 		.string	"mk_wheel_max_speed = %d\n"
 2365      6865 656C 
 2365      5F6D 6178 
 2365      5F73 7065 
 2365      6564 203D 
 2366               		.section	.progmem.data.__c.3515,"a"
 2369               	__c.3515:
 2370 0000 6D6B 5F74 		.string	"mk_time_to_max = %d\n"
 2370      696D 655F 
 2370      746F 5F6D 
 2370      6178 203D 
 2370      2025 640A 
 2371               		.section	.progmem.data.__c.3512,"a"
 2374               	__c.3512:
 2375 0000 6D6B 5F6D 		.string	"mk_max_speed = %d\n"
 2375      6178 5F73 
 2375      7065 6564 
 2375      203D 2025 
 2375      640A 00
 2376               		.section	.progmem.data.__c.3509,"a"
 2379               	__c.3509:
 2380 0000 6D6B 5F69 		.string	"mk_interval = %d\n"
 2380      6E74 6572 
 2380      7661 6C20 
 2380      3D20 2564 
 2380      0A00 
 2381               		.section	.progmem.data.__c.3505,"a"
 2384               	__c.3505:
 2385 0000 6D6B 5F64 		.string	"mk_delay = %d\n"
 2385      656C 6179 
 2385      203D 2025 
 2385      640A 00
 2386               		.section	.progmem.data.__c.3498,"a"
 2389               	__c.3498:
 2390 0000 0A00      		.string	"\n"
 2391               		.section	.progmem.data.__c.3496,"a"
 2394               	__c.3496:
 2395 0000 2575 00   		.string	"%u"
 2396               		.section	.progmem.data.__c.3494,"a"
 2399               	__c.3494:
 2400 0000 363A 2077 		.string	"6: wheel_time_to_max: "
 2400      6865 656C 
 2400      5F74 696D 
 2400      655F 746F 
 2400      5F6D 6178 
 2401               		.section	.progmem.data.__c.3492,"a"
 2404               	__c.3492:
 2405 0000 0A00      		.string	"\n"
 2406               		.section	.progmem.data.__c.3490,"a"
 2409               	__c.3490:
 2410 0000 2575 00   		.string	"%u"
 2411               		.section	.progmem.data.__c.3488,"a"
 2414               	__c.3488:
 2415 0000 353A 2077 		.string	"5: wheel_max_speed: "
 2415      6865 656C 
 2415      5F6D 6178 
 2415      5F73 7065 
 2415      6564 3A20 
 2416               		.section	.progmem.data.__c.3486,"a"
 2419               	__c.3486:
 2420 0000 0A00      		.string	"\n"
 2421               		.section	.progmem.data.__c.3484,"a"
 2424               	__c.3484:
 2425 0000 2575 00   		.string	"%u"
 2426               		.section	.progmem.data.__c.3482,"a"
 2429               	__c.3482:
 2430 0000 343A 2074 		.string	"4: time_to_max: "
 2430      696D 655F 
 2430      746F 5F6D 
 2430      6178 3A20 
 2430      00
 2431               		.section	.progmem.data.__c.3480,"a"
 2434               	__c.3480:
 2435 0000 0A00      		.string	"\n"
 2436               		.section	.progmem.data.__c.3478,"a"
 2439               	__c.3478:
 2440 0000 2575 00   		.string	"%u"
 2441               		.section	.progmem.data.__c.3476,"a"
 2444               	__c.3476:
 2445 0000 333A 206D 		.string	"3: max_speed: "
 2445      6178 5F73 
 2445      7065 6564 
 2445      3A20 00
 2446               		.section	.progmem.data.__c.3474,"a"
 2449               	__c.3474:
 2450 0000 0A00      		.string	"\n"
 2451               		.section	.progmem.data.__c.3472,"a"
 2454               	__c.3472:
 2455 0000 2575 00   		.string	"%u"
 2456               		.section	.progmem.data.__c.3470,"a"
 2459               	__c.3470:
 2460 0000 323A 2069 		.string	"2: interval(ms): "
 2460      6E74 6572 
 2460      7661 6C28 
 2460      6D73 293A 
 2460      2000 
 2461               		.section	.progmem.data.__c.3468,"a"
 2464               	__c.3468:
 2465 0000 0A00      		.string	"\n"
 2466               		.section	.progmem.data.__c.3466,"a"
 2469               	__c.3466:
 2470 0000 2575 00   		.string	"%u"
 2471               		.section	.progmem.data.__c.3464,"a"
 2474               	__c.3464:
 2475 0000 313A 2064 		.string	"1: delay(*10ms): "
 2475      656C 6179 
 2475      282A 3130 
 2475      6D73 293A 
 2475      2000 
 2476               		.section	.progmem.data.__c.3462,"a"
 2479               	__c.3462:
 2480 0000 0A09 2D20 		.string	"\n\t- Values -\n"
 2480      5661 6C75 
 2480      6573 202D 
 2480      0A00 
 2481               		.section	.progmem.data.__c.3582,"a"
 2484               	__c.3582:
 2485 0000 4D3E 00   		.string	"M>"
 2486               		.section	.progmem.data.__c.3580,"a"
 2489               	__c.3580:
 2490 0000 4D25 643E 		.string	"M%d> "
 2490      2000 
 2491               		.section	.progmem.data.__c.3578,"a"
 2494               	__c.3578:
 2495 0000 3F00      		.string	"?"
 2496               		.section	.progmem.data.__c.3575,"a"
 2499               	__c.3575:
 2500 0000 7365 7420 		.string	"set default\n"
 2500      6465 6661 
 2500      756C 740A 
 2500      00
 2501               		.section	.progmem.data.__c.3561,"a"
 2504               	__c.3561:
 2505 0000 433E 2000 		.string	"C> "
 2506               		.section	.progmem.data.__c.3551,"a"
 2509               	__c.3551:
 2510 0000 7768 6572 		.string	"where delta: cursor=%d, wheel=%d\nSee http://en.wikipedia.org/wiki/Mouse_keys\n"
 2510      6520 6465 
 2510      6C74 613A 
 2510      2063 7572 
 2510      736F 723D 
 2511               		.section	.progmem.data.__c.3549,"a"
 2514               	__c.3549:
 2515 0000 0A09 2D20 		.string	"\n\t- Mousekey -\nESC/q:\tquit\n1:\tdelay(*10ms)\n2:\tinterval(ms)\n3:\tmax_speed\n4:\tti
 2515      4D6F 7573 
 2515      656B 6579 
 2515      202D 0A45 
 2515      5343 2F71 
 2516               		.section	.progmem.data.__c.3454,"a"
 2519               	__c.3454:
 2520 0000 3F00      		.string	"?"
 2521               		.section	.progmem.data.__c.3451,"a"
 2524               	__c.3451:
 2525 0000 4D3E 2000 		.string	"M> "
 2526               		.section	.progmem.data.__c.3456,"a"
 2529               	__c.3456:
 2530 0000 433E 2000 		.string	"C> "
 2531               		.section	.progmem.data.__c.3600,"a"
 2534               	__c.3600:
 2535 0000 4C25 640A 		.string	"L%d\n"
 2535      00
 2536               		.section	.progmem.data.__c.3392,"a"
 2539               	__c.3392:
 2540 0000 7469 6D65 		.string	"timer_read32(): %04lX\n"
 2540      725F 7265 
 2540      6164 3332 
 2540      2829 3A20 
 2540      2530 346C 
 2541               		.section	.progmem.data.__c.3390,"a"
 2544               	__c.3390:
 2545 0000 6B65 7962 		.string	"keyboard_idle: %X\n"
 2545      6F61 7264 
 2545      5F69 646C 
 2545      653A 2025 
 2545      580A 00
 2546               		.section	.progmem.data.__c.3388,"a"
 2549               	__c.3388:
 2550 0000 6B65 7962 		.string	"keyboard_protocol: %X\n"
 2550      6F61 7264 
 2550      5F70 726F 
 2550      746F 636F 
 2550      6C3A 2025 
 2551               		.section	.progmem.data.__c.3386,"a"
 2554               	__c.3386:
 2555 0000 686F 7374 		.string	"host_keyboard_leds(): %X\n"
 2555      5F6B 6579 
 2555      626F 6172 
 2555      645F 6C65 
 2555      6473 2829 
 2556               		.section	.progmem.data.__c.3384,"a"
 2559               	__c.3384:
 2560 0000 0A09 2D20 		.string	"\n\t- Status -\n"
 2560      5374 6174 
 2560      7573 202D 
 2560      0A00 
 2561               		.section	.progmem.data.__c.3379,"a"
 2564               	__c.3379:
 2565 0000 4743 433A 		.string	"GCC: 8.3.0 AVR-LIBC: 2.0.0 AVR_ARCH: avr5\n"
 2565      2038 2E33 
 2565      2E30 2041 
 2565      5652 2D4C 
 2565      4942 433A 
 2566               		.section	.progmem.data.__c.3377,"a"
 2569               	__c.3377:
 2570 0000 4F50 5449 		.string	"OPTIONS: LUFA MOUSEKEY EXTRAKEY CONSOLE COMMAND 4096\n"
 2570      4F4E 533A 
 2570      204C 5546 
 2570      4120 4D4F 
 2570      5553 454B 
 2571               		.section	.progmem.data.__c.3375,"a"
 2574               	__c.3375:
 2575 0000 4255 494C 		.string	"BUILD: \"f124a2-dirty\" (14:32:56 May  2 2020)\n"
 2575      443A 2022 
 2575      6631 3234 
 2575      6132 2D64 
 2575      6972 7479 
 2576               		.section	.progmem.data.__c.3373,"a"
 2579               	__c.3373:
 2580 0000 5649 443A 		.string	"VID: 0xFEED(CH boxMods) PID: 0x3060(Dactyl) VER: 0x0001\n"
 2580      2030 7846 
 2580      4545 4428 
 2580      4348 2062 
 2580      6F78 4D6F 
 2581               		.section	.progmem.data.__c.3371,"a"
 2584               	__c.3371:
 2585 0000 4445 5343 		.string	"DESC: A split ergonomic keyboard for the adventerous makers\n"
 2585      3A20 4120 
 2585      7370 6C69 
 2585      7420 6572 
 2585      676F 6E6F 
 2586               		.section	.progmem.data.__c.3369,"a"
 2589               	__c.3369:
 2590 0000 0A09 2D20 		.string	"\n\t- Version -\n"
 2590      5665 7273 
 2590      696F 6E20 
 2590      2D0A 00
 2591               		.section	.progmem.data.__c.3440,"a"
 2594               	__c.3440:
 2595 0000 0A09 2D20 		.string	"\n\t- Console -\nESC/q:\tquit\nm:\tmousekey\n"
 2595      436F 6E73 
 2595      6F6C 6520 
 2595      2D0A 4553 
 2595      432F 713A 
 2596               		.section	.progmem.data.__c.3364,"a"
 2599               	__c.3364:
 2600 0000 0A09 2D20 		.ascii	"\n\t- Magic -\nD:\tDebug Message Toggle\nX:\tMatrix Debug Mo"
 2600      4D61 6769 
 2600      6320 2D0A 
 2600      443A 0944 
 2600      6562 7567 
 2601 0036 6465 2054 		.ascii	"de Toggle - Show keypresses in matrix grid\nK:\tKeyboard Deb"
 2601      6F67 676C 
 2601      6520 2D20 
 2601      5368 6F77 
 2601      206B 6579 
 2602 0070 7567 2054 		.ascii	"ug Toggle - Show keypress r"
 2602      6F67 676C 
 2602      6520 2D20 
 2602      5368 6F77 
 2602      206B 6579 
 2603 008b 6570 6F72 		.string	"eport\nM:\tDebug Mouse Toggle\nV:\tVersion\nS:\tStatus\nC:\tActivate Console Mode\nF1-F10
 2603      740A 4D3A 
 2603      0944 6562 
 2603      7567 204D 
 2603      6F75 7365 
 2604               		.section	.progmem.data.__c.3435,"a"
 2607               	__c.3435:
 2608 0000 3F00      		.string	"?"
 2609               		.section	.progmem.data.__c.3424,"a"
 2612               	__c.3424:
 2613 0000 0A6D 6F75 		.string	"\nmouse: off\n"
 2613      7365 3A20 
 2613      6F66 660A 
 2613      00
 2614               		.section	.progmem.data.__c.3422,"a"
 2617               	__c.3422:
 2618 0000 0A6D 6F75 		.string	"\nmouse: on\n"
 2618      7365 3A20 
 2618      6F6E 0A00 
 2619               		.section	.progmem.data.__c.3419,"a"
 2622               	__c.3419:
 2623 0000 0A6B 6579 		.string	"\nkeyboard: off\n"
 2623      626F 6172 
 2623      643A 206F 
 2623      6666 0A00 
 2624               		.section	.progmem.data.__c.3417,"a"
 2627               	__c.3417:
 2628 0000 0A6B 6579 		.string	"\nkeyboard: on\n"
 2628      626F 6172 
 2628      643A 206F 
 2628      6E0A 00
 2629               		.section	.progmem.data.__c.3414,"a"
 2632               	__c.3414:
 2633 0000 0A6D 6174 		.string	"\nmatrix: off\n"
 2633      7269 783A 
 2633      206F 6666 
 2633      0A00 
 2634               		.section	.progmem.data.__c.3412,"a"
 2637               	__c.3412:
 2638 0000 0A6D 6174 		.string	"\nmatrix: on\n"
 2638      7269 783A 
 2638      206F 6E0A 
 2638      00
 2639               		.section	.progmem.data.__c.3409,"a"
 2642               	__c.3409:
 2643 0000 0A64 6562 		.string	"\ndebug: off\n"
 2643      7567 3A20 
 2643      6F66 660A 
 2643      00
 2644               		.section	.progmem.data.__c.3407,"a"
 2647               	__c.3407:
 2648 0000 0A64 6562 		.string	"\ndebug: on\n"
 2648      7567 3A20 
 2648      6F6E 0A00 
 2649               		.section	.progmem.data.__c.3404,"a"
 2652               	__c.3404:
 2653 0000 0A0A 4A75 		.string	"\n\nJumping to bootloader... "
 2653      6D70 696E 
 2653      6720 746F 
 2653      2062 6F6F 
 2653      746C 6F61 
 2654               		.section	.progmem.data.__c.3401,"a"
 2657               	__c.3401:
 2658 0000 433E 2000 		.string	"C> "
 2659               		.section	.bss.mousekey_param,"aw",@nobits
 2662               	mousekey_param:
 2663 0000 00        		.zero	1
 2664               	.global	command_state
 2665               		.section	.bss.command_state,"aw",@nobits
 2668               	command_state:
 2669 0000 00        		.zero	1
 2670               		.text
 2671               	.Letext0:
 2672               		.file 4 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 2673               		.file 5 "./tmk_core/common/report.h"
 2674               		.file 6 "./tmk_core/common/host.h"
 2675               		.file 7 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/lib/avr-gcc/8/gcc/avr/8.3.0/include/stddef.h"
 2676               		.file 8 "./tmk_core/common/avr/xprintf.h"
 2677               		.file 9 "./tmk_core/common/debug.h"
 2678               		.file 10 "./quantum/keycode_config.h"
 2679               		.file 11 "./quantum/keymap.h"
 2680               		.file 12 "./tmk_core/common/timer.h"
 2681               		.file 13 "./tmk_core/common/action_layer.h"
 2682               		.file 14 "./tmk_core/common/action_util.h"
 2683               		.file 15 "./tmk_core/common/command.h"
 2684               		.file 16 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdlib.h"
 2685               		.file 17 "./quantum/process_keycode/process_tap_dance.h"
 2686               		.file 18 "./quantum/quantum.h"
 2687               		.file 19 "./tmk_core/common/mousekey.h"
 2688               		.file 20 "./tmk_core/common/action.h"
 2689               		.file 21 "./tmk_core/common/keycode.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 command.c
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:12     .text.mousekey_console_help:0000000000000000 mousekey_console_help
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2514   .progmem.data.__c.3549:0000000000000000 __c.3549
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2509   .progmem.data.__c.3551:0000000000000000 __c.3551
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:75     .text.mousekey_param_inc:0000000000000000 mousekey_param_inc
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2384   .progmem.data.__c.3505:0000000000000000 __c.3505
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2379   .progmem.data.__c.3509:0000000000000000 __c.3509
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2374   .progmem.data.__c.3512:0000000000000000 __c.3512
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2369   .progmem.data.__c.3515:0000000000000000 __c.3515
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2364   .progmem.data.__c.3518:0000000000000000 __c.3518
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2359   .progmem.data.__c.3521:0000000000000000 __c.3521
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:406    .text.mousekey_param_dec:0000000000000000 mousekey_param_dec
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2354   .progmem.data.__c.3528:0000000000000000 __c.3528
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2349   .progmem.data.__c.3532:0000000000000000 __c.3532
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2344   .progmem.data.__c.3535:0000000000000000 __c.3535
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2339   .progmem.data.__c.3538:0000000000000000 __c.3538
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2334   .progmem.data.__c.3541:0000000000000000 __c.3541
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2329   .progmem.data.__c.3544:0000000000000000 __c.3544
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:677    .text.switch_default_layer:0000000000000000 switch_default_layer
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2534   .progmem.data.__c.3600:0000000000000000 __c.3600
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:750    .text.command_common:0000000000000000 command_common
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2607   .progmem.data.__c.3435:0000000000000000 __c.3435
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2617   .progmem.data.__c.3422:0000000000000000 __c.3422
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2637   .progmem.data.__c.3412:0000000000000000 __c.3412
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2652   .progmem.data.__c.3404:0000000000000000 __c.3404
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2599   .progmem.data.__c.3364:0000000000000000 __c.3364
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2594   .progmem.data.__c.3440:0000000000000000 __c.3440
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2657   .progmem.data.__c.3401:0000000000000000 __c.3401
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2668   .bss.command_state:0000000000000000 command_state
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2647   .progmem.data.__c.3407:0000000000000000 __c.3407
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2642   .progmem.data.__c.3409:0000000000000000 __c.3409
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2632   .progmem.data.__c.3414:0000000000000000 __c.3414
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2627   .progmem.data.__c.3417:0000000000000000 __c.3417
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2622   .progmem.data.__c.3419:0000000000000000 __c.3419
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2612   .progmem.data.__c.3424:0000000000000000 __c.3424
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2589   .progmem.data.__c.3369:0000000000000000 __c.3369
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2584   .progmem.data.__c.3371:0000000000000000 __c.3371
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2579   .progmem.data.__c.3373:0000000000000000 __c.3373
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2574   .progmem.data.__c.3375:0000000000000000 __c.3375
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2569   .progmem.data.__c.3377:0000000000000000 __c.3377
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2564   .progmem.data.__c.3379:0000000000000000 __c.3379
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2559   .progmem.data.__c.3384:0000000000000000 __c.3384
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2554   .progmem.data.__c.3386:0000000000000000 __c.3386
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2549   .progmem.data.__c.3388:0000000000000000 __c.3388
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2544   .progmem.data.__c.3390:0000000000000000 __c.3390
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2539   .progmem.data.__c.3392:0000000000000000 __c.3392
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1296   .text.rgblight_toggle:0000000000000000 rgblight_toggle
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1315   .text.rgblight_step:0000000000000000 rgblight_step
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1330   .text.rgblight_step_reverse:0000000000000000 rgblight_step_reverse
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1345   .text.rgblight_increase_hue:0000000000000000 rgblight_increase_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1360   .text.rgblight_decrease_hue:0000000000000000 rgblight_decrease_hue
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1375   .text.rgblight_increase_sat:0000000000000000 rgblight_increase_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1390   .text.rgblight_decrease_sat:0000000000000000 rgblight_decrease_sat
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1405   .text.rgblight_increase_val:0000000000000000 rgblight_increase_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1420   .text.rgblight_decrease_val:0000000000000000 rgblight_decrease_val
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1435   .text.rgblight_increase_speed:0000000000000000 rgblight_increase_speed
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1450   .text.rgblight_decrease_speed:0000000000000000 rgblight_decrease_speed
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1465   .text.command_extra:0000000000000000 command_extra
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1465   .text.command_extra:0000000000000000 command_extra.localalias.0
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1489   .text.command_console_extra:0000000000000000 command_console_extra
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1503   .text.numkey2num:0000000000000000 numkey2num
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2315   .rodata.CSWTCH.57:0000000000000000 CSWTCH.57
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:1538   .text.command_proc:0000000000000000 command_proc
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2519   .progmem.data.__c.3454:0000000000000000 __c.3454
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2529   .progmem.data.__c.3456:0000000000000000 __c.3456
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2524   .progmem.data.__c.3451:0000000000000000 __c.3451
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2494   .progmem.data.__c.3578:0000000000000000 __c.3578
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2662   .bss.mousekey_param:0000000000000000 mousekey_param
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2489   .progmem.data.__c.3580:0000000000000000 __c.3580
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2504   .progmem.data.__c.3561:0000000000000000 __c.3561
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2479   .progmem.data.__c.3462:0000000000000000 __c.3462
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2474   .progmem.data.__c.3464:0000000000000000 __c.3464
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2469   .progmem.data.__c.3466:0000000000000000 __c.3466
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2464   .progmem.data.__c.3468:0000000000000000 __c.3468
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2459   .progmem.data.__c.3470:0000000000000000 __c.3470
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2454   .progmem.data.__c.3472:0000000000000000 __c.3472
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2449   .progmem.data.__c.3474:0000000000000000 __c.3474
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2444   .progmem.data.__c.3476:0000000000000000 __c.3476
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2439   .progmem.data.__c.3478:0000000000000000 __c.3478
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2434   .progmem.data.__c.3480:0000000000000000 __c.3480
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2429   .progmem.data.__c.3482:0000000000000000 __c.3482
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2424   .progmem.data.__c.3484:0000000000000000 __c.3484
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2419   .progmem.data.__c.3486:0000000000000000 __c.3486
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2414   .progmem.data.__c.3488:0000000000000000 __c.3488
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2409   .progmem.data.__c.3490:0000000000000000 __c.3490
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2404   .progmem.data.__c.3492:0000000000000000 __c.3492
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2399   .progmem.data.__c.3494:0000000000000000 __c.3494
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2394   .progmem.data.__c.3496:0000000000000000 __c.3496
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2389   .progmem.data.__c.3498:0000000000000000 __c.3498
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2499   .progmem.data.__c.3575:0000000000000000 __c.3575
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccW7J1UJ.s:2484   .progmem.data.__c.3582:0000000000000000 __c.3582

UNDEFINED SYMBOLS
xputs
__xprintf
mk_delay
mk_interval
mk_max_speed
mk_time_to_max
mk_wheel_max_speed
mk_wheel_time_to_max
default_layer_set
clear_keyboard
debug_config
bootloader_jump
host_keyboard_leds
keyboard_protocol
keyboard_idle
timer_read32
keyboard_report
__do_copy_data
__do_clear_bss
