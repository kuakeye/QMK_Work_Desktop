   1               		.file	"action_layer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.default_layer_state_set_kb,"ax",@progbits
  11               		.weak	default_layer_state_set_kb
  13               	default_layer_state_set_kb:
  14               	.LVL0:
  15               	.LFB4:
  16               		.file 1 "./tmk_core/common/action_layer.c"
   1:./tmk_core/common/action_layer.c **** #include <stdint.h>
   2:./tmk_core/common/action_layer.c **** #include "keyboard.h"
   3:./tmk_core/common/action_layer.c **** #include "action.h"
   4:./tmk_core/common/action_layer.c **** #include "util.h"
   5:./tmk_core/common/action_layer.c **** #include "action_layer.h"
   6:./tmk_core/common/action_layer.c **** 
   7:./tmk_core/common/action_layer.c **** #ifdef DEBUG_ACTION
   8:./tmk_core/common/action_layer.c **** #include "debug.h"
   9:./tmk_core/common/action_layer.c **** #else
  10:./tmk_core/common/action_layer.c **** #include "nodebug.h"
  11:./tmk_core/common/action_layer.c **** #endif
  12:./tmk_core/common/action_layer.c **** 
  13:./tmk_core/common/action_layer.c **** 
  14:./tmk_core/common/action_layer.c **** /** \brief Default Layer State
  15:./tmk_core/common/action_layer.c ****  */
  16:./tmk_core/common/action_layer.c **** uint32_t default_layer_state = 0;
  17:./tmk_core/common/action_layer.c **** 
  18:./tmk_core/common/action_layer.c **** /** \brief Default Layer State Set At Keyboard Level
  19:./tmk_core/common/action_layer.c ****  *
  20:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  21:./tmk_core/common/action_layer.c ****  */
  22:./tmk_core/common/action_layer.c **** __attribute__((weak))
  23:./tmk_core/common/action_layer.c **** uint32_t default_layer_state_set_kb(uint32_t state) {
  17               		.loc 1 23 53 view -0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  24:./tmk_core/common/action_layer.c ****     return state;
  23               		.loc 1 24 5 view .LVU1
  24               	/* epilogue start */
  25:./tmk_core/common/action_layer.c **** }
  25               		.loc 1 25 1 is_stmt 0 view .LVU2
  26 0000 0895      		ret
  27               		.cfi_endproc
  28               	.LFE4:
  30               		.set	default_layer_state_set_kb.localalias,default_layer_state_set_kb
  31               		.section	.text.default_layer_state_set,"ax",@progbits
  33               	default_layer_state_set:
  34               	.LVL1:
  35               	.LFB5:
  26:./tmk_core/common/action_layer.c **** 
  27:./tmk_core/common/action_layer.c **** /** \brief Default Layer State Set
  28:./tmk_core/common/action_layer.c ****  *
  29:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  30:./tmk_core/common/action_layer.c ****  */
  31:./tmk_core/common/action_layer.c **** static void default_layer_state_set(uint32_t state)
  32:./tmk_core/common/action_layer.c **** {
  36               		.loc 1 32 1 is_stmt 1 view -0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  33:./tmk_core/common/action_layer.c ****     state = default_layer_state_set_kb(state);
  42               		.loc 1 33 5 view .LVU4
  43               		.loc 1 33 13 is_stmt 0 view .LVU5
  44 0000 0E94 0000 		call default_layer_state_set_kb
  45               	.LVL2:
  46               		.loc 1 33 13 view .LVU6
  47 0004 6093 0000 		sts default_layer_state,r22
  48 0008 7093 0000 		sts default_layer_state+1,r23
  49 000c 8093 0000 		sts default_layer_state+2,r24
  50 0010 9093 0000 		sts default_layer_state+3,r25
  51               	.LVL3:
  34:./tmk_core/common/action_layer.c ****     debug("default_layer_state: ");
  52               		.loc 1 34 35 is_stmt 1 view .LVU7
  35:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug(" to ");
  53               		.loc 1 35 5 view .LVU8
  54               		.loc 1 35 41 view .LVU9
  36:./tmk_core/common/action_layer.c ****     default_layer_state = state;
  55               		.loc 1 36 5 view .LVU10
  37:./tmk_core/common/action_layer.c ****     default_layer_debug(); debug("\n");
  56               		.loc 1 37 5 view .LVU11
  57               		.loc 1 37 39 view .LVU12
  38:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
  58               		.loc 1 38 5 view .LVU13
  59 0014 0C94 0000 		jmp clear_keyboard_but_mods
  60               	.LVL4:
  61               		.loc 1 38 5 is_stmt 0 view .LVU14
  62               		.cfi_endproc
  63               	.LFE5:
  65               		.section	.text.default_layer_debug,"ax",@progbits
  66               	.global	default_layer_debug
  68               	default_layer_debug:
  69               	.LFB6:
  39:./tmk_core/common/action_layer.c **** }
  40:./tmk_core/common/action_layer.c **** 
  41:./tmk_core/common/action_layer.c **** /** \brief Default Layer Print
  42:./tmk_core/common/action_layer.c ****  *
  43:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  44:./tmk_core/common/action_layer.c ****  */
  45:./tmk_core/common/action_layer.c **** void default_layer_debug(void)
  46:./tmk_core/common/action_layer.c **** {
  70               		.loc 1 46 1 is_stmt 1 view -0
  71               		.cfi_startproc
  72               	/* prologue: function */
  73               	/* frame size = 0 */
  74               	/* stack size = 0 */
  75               	.L__stack_usage = 0
  47:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", default_layer_state, biton32(default_layer_state));
  76               		.loc 1 47 76 view .LVU16
  77               	/* epilogue start */
  48:./tmk_core/common/action_layer.c **** }
  78               		.loc 1 48 1 is_stmt 0 view .LVU17
  79 0000 0895      		ret
  80               		.cfi_endproc
  81               	.LFE6:
  83               		.section	.text.default_layer_set,"ax",@progbits
  84               	.global	default_layer_set
  86               	default_layer_set:
  87               	.LVL5:
  88               	.LFB7:
  49:./tmk_core/common/action_layer.c **** 
  50:./tmk_core/common/action_layer.c **** /** \brief Default Layer Set
  51:./tmk_core/common/action_layer.c ****  *
  52:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  53:./tmk_core/common/action_layer.c ****  */
  54:./tmk_core/common/action_layer.c **** void default_layer_set(uint32_t state)
  55:./tmk_core/common/action_layer.c **** {
  89               		.loc 1 55 1 is_stmt 1 view -0
  90               		.cfi_startproc
  91               	/* prologue: function */
  92               	/* frame size = 0 */
  93               	/* stack size = 0 */
  94               	.L__stack_usage = 0
  56:./tmk_core/common/action_layer.c ****     default_layer_state_set(state);
  95               		.loc 1 56 5 view .LVU19
  96 0000 0C94 0000 		jmp default_layer_state_set
  97               	.LVL6:
  98               		.loc 1 56 5 is_stmt 0 view .LVU20
  99               		.cfi_endproc
 100               	.LFE7:
 102               		.section	.text.default_layer_or,"ax",@progbits
 103               	.global	default_layer_or
 105               	default_layer_or:
 106               	.LVL7:
 107               	.LFB8:
  57:./tmk_core/common/action_layer.c **** }
  58:./tmk_core/common/action_layer.c **** 
  59:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  60:./tmk_core/common/action_layer.c **** /** \brief Default Layer Or
  61:./tmk_core/common/action_layer.c ****  *
  62:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  63:./tmk_core/common/action_layer.c ****  */
  64:./tmk_core/common/action_layer.c **** void default_layer_or(uint32_t state)
  65:./tmk_core/common/action_layer.c **** {
 108               		.loc 1 65 1 is_stmt 1 view -0
 109               		.cfi_startproc
 110               		.loc 1 65 1 is_stmt 0 view .LVU22
 111 0000 CF93      		push r28
 112               	.LCFI0:
 113               		.cfi_def_cfa_offset 3
 114               		.cfi_offset 28, -2
 115 0002 DF93      		push r29
 116               	.LCFI1:
 117               		.cfi_def_cfa_offset 4
 118               		.cfi_offset 29, -3
 119 0004 00D0      		rcall .
 120 0006 00D0      		rcall .
 121               	.LCFI2:
 122               		.cfi_def_cfa_offset 8
 123 0008 CDB7      		in r28,__SP_L__
 124 000a DEB7      		in r29,__SP_H__
 125               	.LCFI3:
 126               		.cfi_def_cfa_register 28
 127               	/* prologue: function */
 128               	/* frame size = 4 */
 129               	/* stack size = 6 */
 130               	.L__stack_usage = 6
 131 000c 6983      		std Y+1,r22
 132 000e 7A83      		std Y+2,r23
 133 0010 8B83      		std Y+3,r24
 134 0012 9C83      		std Y+4,r25
  66:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 135               		.loc 1 66 5 is_stmt 1 view .LVU23
 136 0014 8091 0000 		lds r24,default_layer_state
 137 0018 9091 0000 		lds r25,default_layer_state+1
 138 001c A091 0000 		lds r26,default_layer_state+2
 139 0020 B091 0000 		lds r27,default_layer_state+3
 140 0024 2981      		ldd r18,Y+1
 141 0026 3A81      		ldd r19,Y+2
 142 0028 4B81      		ldd r20,Y+3
 143 002a 5C81      		ldd r21,Y+4
 144 002c 282B      		or r18,r24
 145 002e 392B      		or r19,r25
 146 0030 4A2B      		or r20,r26
 147 0032 5B2B      		or r21,r27
 148 0034 2983      		std Y+1,r18
 149 0036 3A83      		std Y+2,r19
 150 0038 4B83      		std Y+3,r20
 151 003a 5C83      		std Y+4,r21
 152 003c CA01      		movw r24,r20
 153 003e B901      		movw r22,r18
 154               	.LVL8:
 155               	/* epilogue start */
  67:./tmk_core/common/action_layer.c **** }
 156               		.loc 1 67 1 is_stmt 0 view .LVU24
 157 0040 0F90      		pop __tmp_reg__
 158 0042 0F90      		pop __tmp_reg__
 159 0044 0F90      		pop __tmp_reg__
 160 0046 0F90      		pop __tmp_reg__
 161 0048 DF91      		pop r29
 162 004a CF91      		pop r28
  66:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state | state);
 163               		.loc 1 66 5 view .LVU25
 164 004c 0C94 0000 		jmp default_layer_state_set
 165               	.LVL9:
 166               		.cfi_endproc
 167               	.LFE8:
 169               		.section	.text.default_layer_and,"ax",@progbits
 170               	.global	default_layer_and
 172               	default_layer_and:
 173               	.LVL10:
 174               	.LFB9:
  68:./tmk_core/common/action_layer.c **** /** \brief Default Layer And
  69:./tmk_core/common/action_layer.c ****  *
  70:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  71:./tmk_core/common/action_layer.c ****  */
  72:./tmk_core/common/action_layer.c **** void default_layer_and(uint32_t state)
  73:./tmk_core/common/action_layer.c **** {
 175               		.loc 1 73 1 is_stmt 1 view -0
 176               		.cfi_startproc
 177               		.loc 1 73 1 is_stmt 0 view .LVU27
 178 0000 CF93      		push r28
 179               	.LCFI4:
 180               		.cfi_def_cfa_offset 3
 181               		.cfi_offset 28, -2
 182 0002 DF93      		push r29
 183               	.LCFI5:
 184               		.cfi_def_cfa_offset 4
 185               		.cfi_offset 29, -3
 186 0004 00D0      		rcall .
 187 0006 00D0      		rcall .
 188               	.LCFI6:
 189               		.cfi_def_cfa_offset 8
 190 0008 CDB7      		in r28,__SP_L__
 191 000a DEB7      		in r29,__SP_H__
 192               	.LCFI7:
 193               		.cfi_def_cfa_register 28
 194               	/* prologue: function */
 195               	/* frame size = 4 */
 196               	/* stack size = 6 */
 197               	.L__stack_usage = 6
 198 000c 6983      		std Y+1,r22
 199 000e 7A83      		std Y+2,r23
 200 0010 8B83      		std Y+3,r24
 201 0012 9C83      		std Y+4,r25
  74:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 202               		.loc 1 74 5 is_stmt 1 view .LVU28
 203 0014 8091 0000 		lds r24,default_layer_state
 204 0018 9091 0000 		lds r25,default_layer_state+1
 205 001c A091 0000 		lds r26,default_layer_state+2
 206 0020 B091 0000 		lds r27,default_layer_state+3
 207 0024 2981      		ldd r18,Y+1
 208 0026 3A81      		ldd r19,Y+2
 209 0028 4B81      		ldd r20,Y+3
 210 002a 5C81      		ldd r21,Y+4
 211 002c 2823      		and r18,r24
 212 002e 3923      		and r19,r25
 213 0030 4A23      		and r20,r26
 214 0032 5B23      		and r21,r27
 215 0034 2983      		std Y+1,r18
 216 0036 3A83      		std Y+2,r19
 217 0038 4B83      		std Y+3,r20
 218 003a 5C83      		std Y+4,r21
 219 003c CA01      		movw r24,r20
 220 003e B901      		movw r22,r18
 221               	.LVL11:
 222               	/* epilogue start */
  75:./tmk_core/common/action_layer.c **** }
 223               		.loc 1 75 1 is_stmt 0 view .LVU29
 224 0040 0F90      		pop __tmp_reg__
 225 0042 0F90      		pop __tmp_reg__
 226 0044 0F90      		pop __tmp_reg__
 227 0046 0F90      		pop __tmp_reg__
 228 0048 DF91      		pop r29
 229 004a CF91      		pop r28
  74:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state & state);
 230               		.loc 1 74 5 view .LVU30
 231 004c 0C94 0000 		jmp default_layer_state_set
 232               	.LVL12:
 233               		.cfi_endproc
 234               	.LFE9:
 236               		.section	.text.default_layer_xor,"ax",@progbits
 237               	.global	default_layer_xor
 239               	default_layer_xor:
 240               	.LVL13:
 241               	.LFB10:
  76:./tmk_core/common/action_layer.c **** /** \brief Default Layer Xor
  77:./tmk_core/common/action_layer.c ****  *
  78:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  79:./tmk_core/common/action_layer.c ****  */
  80:./tmk_core/common/action_layer.c **** void default_layer_xor(uint32_t state)
  81:./tmk_core/common/action_layer.c **** {
 242               		.loc 1 81 1 is_stmt 1 view -0
 243               		.cfi_startproc
 244               		.loc 1 81 1 is_stmt 0 view .LVU32
 245 0000 CF93      		push r28
 246               	.LCFI8:
 247               		.cfi_def_cfa_offset 3
 248               		.cfi_offset 28, -2
 249 0002 DF93      		push r29
 250               	.LCFI9:
 251               		.cfi_def_cfa_offset 4
 252               		.cfi_offset 29, -3
 253 0004 00D0      		rcall .
 254 0006 00D0      		rcall .
 255               	.LCFI10:
 256               		.cfi_def_cfa_offset 8
 257 0008 CDB7      		in r28,__SP_L__
 258 000a DEB7      		in r29,__SP_H__
 259               	.LCFI11:
 260               		.cfi_def_cfa_register 28
 261               	/* prologue: function */
 262               	/* frame size = 4 */
 263               	/* stack size = 6 */
 264               	.L__stack_usage = 6
 265 000c 6983      		std Y+1,r22
 266 000e 7A83      		std Y+2,r23
 267 0010 8B83      		std Y+3,r24
 268 0012 9C83      		std Y+4,r25
  82:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 269               		.loc 1 82 5 is_stmt 1 view .LVU33
 270 0014 8091 0000 		lds r24,default_layer_state
 271 0018 9091 0000 		lds r25,default_layer_state+1
 272 001c A091 0000 		lds r26,default_layer_state+2
 273 0020 B091 0000 		lds r27,default_layer_state+3
 274 0024 2981      		ldd r18,Y+1
 275 0026 3A81      		ldd r19,Y+2
 276 0028 4B81      		ldd r20,Y+3
 277 002a 5C81      		ldd r21,Y+4
 278 002c 2827      		eor r18,r24
 279 002e 3927      		eor r19,r25
 280 0030 4A27      		eor r20,r26
 281 0032 5B27      		eor r21,r27
 282 0034 2983      		std Y+1,r18
 283 0036 3A83      		std Y+2,r19
 284 0038 4B83      		std Y+3,r20
 285 003a 5C83      		std Y+4,r21
 286 003c CA01      		movw r24,r20
 287 003e B901      		movw r22,r18
 288               	.LVL14:
 289               	/* epilogue start */
  83:./tmk_core/common/action_layer.c **** }
 290               		.loc 1 83 1 is_stmt 0 view .LVU34
 291 0040 0F90      		pop __tmp_reg__
 292 0042 0F90      		pop __tmp_reg__
 293 0044 0F90      		pop __tmp_reg__
 294 0046 0F90      		pop __tmp_reg__
 295 0048 DF91      		pop r29
 296 004a CF91      		pop r28
  82:./tmk_core/common/action_layer.c ****     default_layer_state_set(default_layer_state ^ state);
 297               		.loc 1 82 5 view .LVU35
 298 004c 0C94 0000 		jmp default_layer_state_set
 299               	.LVL15:
 300               		.cfi_endproc
 301               	.LFE10:
 303               		.section	.text.layer_state_set_user,"ax",@progbits
 304               		.weak	layer_state_set_user
 306               	layer_state_set_user:
 307               	.LFB31:
 308               		.cfi_startproc
 309               	/* prologue: function */
 310               	/* frame size = 0 */
 311               	/* stack size = 0 */
 312               	.L__stack_usage = 0
 313 0000 0C94 0000 		jmp default_layer_state_set_kb.localalias
 314               		.cfi_endproc
 315               	.LFE31:
 317               		.section	.text.layer_state_set_kb,"ax",@progbits
 318               		.weak	layer_state_set_kb
 320               	layer_state_set_kb:
 321               	.LVL16:
 322               	.LFB12:
  84:./tmk_core/common/action_layer.c **** #endif
  85:./tmk_core/common/action_layer.c **** 
  86:./tmk_core/common/action_layer.c **** 
  87:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
  88:./tmk_core/common/action_layer.c **** /** \brief Keymap Layer State
  89:./tmk_core/common/action_layer.c ****  */
  90:./tmk_core/common/action_layer.c **** uint32_t layer_state = 0;
  91:./tmk_core/common/action_layer.c **** 
  92:./tmk_core/common/action_layer.c **** /** \brief Layer state set user
  93:./tmk_core/common/action_layer.c ****  *
  94:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
  95:./tmk_core/common/action_layer.c ****  */
  96:./tmk_core/common/action_layer.c **** __attribute__((weak))
  97:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_user(uint32_t state) {
  98:./tmk_core/common/action_layer.c ****     return state;
  99:./tmk_core/common/action_layer.c **** }
 100:./tmk_core/common/action_layer.c **** 
 101:./tmk_core/common/action_layer.c **** /** \brief Layer state set keyboard
 102:./tmk_core/common/action_layer.c ****  *
 103:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 104:./tmk_core/common/action_layer.c ****  */
 105:./tmk_core/common/action_layer.c **** __attribute__((weak))
 106:./tmk_core/common/action_layer.c **** uint32_t layer_state_set_kb(uint32_t state) {
 323               		.loc 1 106 45 is_stmt 1 view -0
 324               		.cfi_startproc
 325               	/* prologue: function */
 326               	/* frame size = 0 */
 327               	/* stack size = 0 */
 328               	.L__stack_usage = 0
 107:./tmk_core/common/action_layer.c ****     return layer_state_set_user(state);
 329               		.loc 1 107 5 view .LVU37
 330               		.loc 1 107 12 is_stmt 0 view .LVU38
 331 0000 0C94 0000 		jmp layer_state_set_user
 332               	.LVL17:
 333               		.loc 1 107 12 view .LVU39
 334               		.cfi_endproc
 335               	.LFE12:
 337               		.section	.text.layer_state_set,"ax",@progbits
 338               	.global	layer_state_set
 340               	layer_state_set:
 341               	.LVL18:
 342               	.LFB13:
 108:./tmk_core/common/action_layer.c **** }
 109:./tmk_core/common/action_layer.c **** 
 110:./tmk_core/common/action_layer.c **** /** \brief Layer state set
 111:./tmk_core/common/action_layer.c ****  *
 112:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 113:./tmk_core/common/action_layer.c ****  */
 114:./tmk_core/common/action_layer.c **** void layer_state_set(uint32_t state)
 115:./tmk_core/common/action_layer.c **** {
 343               		.loc 1 115 1 is_stmt 1 view -0
 344               		.cfi_startproc
 345               	/* prologue: function */
 346               	/* frame size = 0 */
 347               	/* stack size = 0 */
 348               	.L__stack_usage = 0
 116:./tmk_core/common/action_layer.c ****     state = layer_state_set_kb(state);
 349               		.loc 1 116 5 view .LVU41
 350               		.loc 1 116 13 is_stmt 0 view .LVU42
 351 0000 0E94 0000 		call layer_state_set_kb
 352               	.LVL19:
 353               		.loc 1 116 13 view .LVU43
 354 0004 6093 0000 		sts layer_state,r22
 355 0008 7093 0000 		sts layer_state+1,r23
 356 000c 8093 0000 		sts layer_state+2,r24
 357 0010 9093 0000 		sts layer_state+3,r25
 358               	.LVL20:
 117:./tmk_core/common/action_layer.c ****     dprint("layer_state: ");
 359               		.loc 1 117 28 is_stmt 1 view .LVU44
 118:./tmk_core/common/action_layer.c ****     layer_debug(); dprint(" to ");
 360               		.loc 1 118 5 view .LVU45
 361               		.loc 1 118 34 view .LVU46
 119:./tmk_core/common/action_layer.c ****     layer_state = state;
 362               		.loc 1 119 5 view .LVU47
 120:./tmk_core/common/action_layer.c ****     layer_debug(); dprintln();
 363               		.loc 1 120 5 view .LVU48
 364               		.loc 1 120 30 view .LVU49
 121:./tmk_core/common/action_layer.c ****     clear_keyboard_but_mods(); // To avoid stuck keys
 365               		.loc 1 121 5 view .LVU50
 366 0014 0C94 0000 		jmp clear_keyboard_but_mods
 367               	.LVL21:
 368               		.loc 1 121 5 is_stmt 0 view .LVU51
 369               		.cfi_endproc
 370               	.LFE13:
 372               		.section	.text.layer_clear,"ax",@progbits
 373               	.global	layer_clear
 375               	layer_clear:
 376               	.LFB14:
 122:./tmk_core/common/action_layer.c **** }
 123:./tmk_core/common/action_layer.c **** 
 124:./tmk_core/common/action_layer.c **** /** \brief Layer clear
 125:./tmk_core/common/action_layer.c ****  *
 126:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 127:./tmk_core/common/action_layer.c ****  */
 128:./tmk_core/common/action_layer.c **** void layer_clear(void)
 129:./tmk_core/common/action_layer.c **** {
 377               		.loc 1 129 1 is_stmt 1 view -0
 378               		.cfi_startproc
 379               	/* prologue: function */
 380               	/* frame size = 0 */
 381               	/* stack size = 0 */
 382               	.L__stack_usage = 0
 130:./tmk_core/common/action_layer.c ****     layer_state_set(0);
 383               		.loc 1 130 5 view .LVU53
 384 0000 60E0      		ldi r22,0
 385 0002 70E0      		ldi r23,0
 386 0004 CB01      		movw r24,r22
 387 0006 0C94 0000 		jmp layer_state_set
 388               	.LVL22:
 389               		.cfi_endproc
 390               	.LFE14:
 392               		.section	.text.layer_state_is,"ax",@progbits
 393               	.global	layer_state_is
 395               	layer_state_is:
 396               	.LVL23:
 397               	.LFB15:
 131:./tmk_core/common/action_layer.c **** }
 132:./tmk_core/common/action_layer.c **** 
 133:./tmk_core/common/action_layer.c **** /** \brief Layer state is
 134:./tmk_core/common/action_layer.c ****  *
 135:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 136:./tmk_core/common/action_layer.c ****  */
 137:./tmk_core/common/action_layer.c **** bool layer_state_is(uint8_t layer)
 138:./tmk_core/common/action_layer.c **** {
 398               		.loc 1 138 1 view -0
 399               		.cfi_startproc
 400               	/* prologue: function */
 401               	/* frame size = 0 */
 402               	/* stack size = 0 */
 403               	.L__stack_usage = 0
 404               		.loc 1 138 1 is_stmt 0 view .LVU55
 405 0000 282F      		mov r18,r24
 139:./tmk_core/common/action_layer.c ****     return layer_state_cmp(layer_state, layer);
 406               		.loc 1 139 5 is_stmt 1 view .LVU56
 407               		.loc 1 139 12 is_stmt 0 view .LVU57
 408 0002 8091 0000 		lds r24,layer_state
 409 0006 9091 0000 		lds r25,layer_state+1
 410 000a A091 0000 		lds r26,layer_state+2
 411 000e B091 0000 		lds r27,layer_state+3
 412               	.LVL24:
 413               	.LBB4:
 414               	.LBI4:
 140:./tmk_core/common/action_layer.c **** }
 141:./tmk_core/common/action_layer.c **** 
 142:./tmk_core/common/action_layer.c **** /** \brief Layer state compare
 143:./tmk_core/common/action_layer.c ****  *
 144:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 145:./tmk_core/common/action_layer.c ****  */
 146:./tmk_core/common/action_layer.c **** bool layer_state_cmp(uint32_t cmp_layer_state, uint8_t layer) {
 415               		.loc 1 146 6 is_stmt 1 view .LVU58
 416               	.LBB5:
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 417               		.loc 1 147 5 view .LVU59
 418               		.loc 1 147 8 is_stmt 0 view .LVU60
 419 0012 0097      		sbiw r24,0
 420 0014 A105      		cpc r26,__zero_reg__
 421 0016 B105      		cpc r27,__zero_reg__
 422 0018 01F4      		brne .L13
 423               		.loc 1 147 29 is_stmt 1 view .LVU61
 424               		.loc 1 147 42 is_stmt 0 view .LVU62
 425 001a 81E0      		ldi r24,lo8(1)
 426               	.LVL25:
 427               		.loc 1 147 42 view .LVU63
 428 001c 2223      		tst r18
 429 001e 01F0      		breq .L12
 430 0020 80E0      		ldi r24,0
 431 0022 0895      		ret
 432               	.LVL26:
 433               	.L13:
 148:./tmk_core/common/action_layer.c ****     return (cmp_layer_state & (1UL<<layer)) != 0;
 434               		.loc 1 148 5 is_stmt 1 view .LVU64
 435               		.loc 1 148 45 is_stmt 0 view .LVU65
 436 0024 00C0      		rjmp 2f
 437               		1:
 438 0026 B695      		lsr r27
 439 0028 A795      		ror r26
 440 002a 9795      		ror r25
 441 002c 8795      		ror r24
 442               		2:
 443 002e 2A95      		dec r18
 444 0030 02F4      		brpl 1b
 445               	.LVL27:
 446               		.loc 1 148 45 view .LVU66
 447 0032 8170      		andi r24,lo8(1)
 448               	.LVL28:
 449               	.L12:
 450               	/* epilogue start */
 451               		.loc 1 148 45 view .LVU67
 452               	.LBE5:
 453               	.LBE4:
 140:./tmk_core/common/action_layer.c **** }
 454               		.loc 1 140 1 view .LVU68
 455 0034 0895      		ret
 456               		.cfi_endproc
 457               	.LFE15:
 459               		.section	.text.layer_state_cmp,"ax",@progbits
 460               	.global	layer_state_cmp
 462               	layer_state_cmp:
 463               	.LVL29:
 464               	.LFB16:
 146:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 465               		.loc 1 146 63 is_stmt 1 view -0
 466               		.cfi_startproc
 467               	/* prologue: function */
 468               	/* frame size = 0 */
 469               	/* stack size = 0 */
 470               	.L__stack_usage = 0
 146:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 471               		.loc 1 146 63 is_stmt 0 view .LVU70
 472 0000 382F      		mov r19,r24
 473 0002 292F      		mov r18,r25
 474 0004 CB01      		movw r24,r22
 475 0006 A32F      		mov r26,r19
 476 0008 B22F      		mov r27,r18
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 477               		.loc 1 147 5 is_stmt 1 view .LVU71
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 478               		.loc 1 147 8 is_stmt 0 view .LVU72
 479 000a 0097      		sbiw r24,0
 480 000c A105      		cpc r26,__zero_reg__
 481 000e B105      		cpc r27,__zero_reg__
 482 0010 01F4      		brne .L20
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 483               		.loc 1 147 29 is_stmt 1 discriminator 1 view .LVU73
 147:./tmk_core/common/action_layer.c ****     if (!cmp_layer_state) { return layer == 0; }
 484               		.loc 1 147 42 is_stmt 0 discriminator 1 view .LVU74
 485 0012 81E0      		ldi r24,lo8(1)
 486 0014 4423      		tst r20
 487 0016 01F0      		breq .L19
 488 0018 80E0      		ldi r24,0
 489 001a 0895      		ret
 490               	.L20:
 491               		.loc 1 148 5 is_stmt 1 view .LVU75
 492               		.loc 1 148 45 is_stmt 0 view .LVU76
 493 001c 00C0      		rjmp 2f
 494               		1:
 495 001e B695      		lsr r27
 496 0020 A795      		ror r26
 497 0022 9795      		ror r25
 498 0024 8795      		ror r24
 499               		2:
 500 0026 4A95      		dec r20
 501 0028 02F4      		brpl 1b
 502 002a 8170      		andi r24,lo8(1)
 503               	.L19:
 504               	/* epilogue start */
 149:./tmk_core/common/action_layer.c **** }
 505               		.loc 1 149 1 view .LVU77
 506 002c 0895      		ret
 507               		.cfi_endproc
 508               	.LFE16:
 510               		.section	.text.layer_move,"ax",@progbits
 511               	.global	layer_move
 513               	layer_move:
 514               	.LVL30:
 515               	.LFB17:
 150:./tmk_core/common/action_layer.c **** 
 151:./tmk_core/common/action_layer.c **** /** \brief Layer move
 152:./tmk_core/common/action_layer.c ****  *
 153:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 154:./tmk_core/common/action_layer.c ****  */
 155:./tmk_core/common/action_layer.c **** void layer_move(uint8_t layer)
 156:./tmk_core/common/action_layer.c **** {
 516               		.loc 1 156 1 is_stmt 1 view -0
 517               		.cfi_startproc
 518               		.loc 1 156 1 is_stmt 0 view .LVU79
 519 0000 0F93      		push r16
 520               	.LCFI12:
 521               		.cfi_def_cfa_offset 3
 522               		.cfi_offset 16, -2
 523 0002 1F93      		push r17
 524               	.LCFI13:
 525               		.cfi_def_cfa_offset 4
 526               		.cfi_offset 17, -3
 527 0004 CF93      		push r28
 528               	.LCFI14:
 529               		.cfi_def_cfa_offset 5
 530               		.cfi_offset 28, -4
 531 0006 DF93      		push r29
 532               	.LCFI15:
 533               		.cfi_def_cfa_offset 6
 534               		.cfi_offset 29, -5
 535 0008 00D0      		rcall .
 536 000a 00D0      		rcall .
 537               	.LCFI16:
 538               		.cfi_def_cfa_offset 10
 539 000c CDB7      		in r28,__SP_L__
 540 000e DEB7      		in r29,__SP_H__
 541               	.LCFI17:
 542               		.cfi_def_cfa_register 28
 543               	/* prologue: function */
 544               	/* frame size = 4 */
 545               	/* stack size = 8 */
 546               	.L__stack_usage = 8
 157:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 547               		.loc 1 157 5 is_stmt 1 view .LVU80
 548 0010 41E0      		ldi r20,lo8(1)
 549 0012 50E0      		ldi r21,0
 550 0014 60E0      		ldi r22,0
 551 0016 70E0      		ldi r23,0
 552 0018 8A01      		movw r16,r20
 553 001a 9B01      		movw r18,r22
 554 001c 00C0      		rjmp 2f
 555               		1:
 556 001e 000F      		lsl r16
 557 0020 111F      		rol r17
 558 0022 221F      		rol r18
 559 0024 331F      		rol r19
 560               		2:
 561 0026 8A95      		dec r24
 562 0028 02F4      		brpl 1b
 563 002a 0983      		std Y+1,r16
 564 002c 1A83      		std Y+2,r17
 565 002e 2B83      		std Y+3,r18
 566 0030 3C83      		std Y+4,r19
 567 0032 C901      		movw r24,r18
 568               	.LVL31:
 569               		.loc 1 157 5 is_stmt 0 view .LVU81
 570 0034 B801      		movw r22,r16
 571               	/* epilogue start */
 158:./tmk_core/common/action_layer.c **** }
 572               		.loc 1 158 1 view .LVU82
 573 0036 0F90      		pop __tmp_reg__
 574 0038 0F90      		pop __tmp_reg__
 575 003a 0F90      		pop __tmp_reg__
 576 003c 0F90      		pop __tmp_reg__
 577 003e DF91      		pop r29
 578 0040 CF91      		pop r28
 579 0042 1F91      		pop r17
 580 0044 0F91      		pop r16
 157:./tmk_core/common/action_layer.c ****     layer_state_set(1UL<<layer);
 581               		.loc 1 157 5 view .LVU83
 582 0046 0C94 0000 		jmp layer_state_set
 583               	.LVL32:
 584               		.cfi_endproc
 585               	.LFE17:
 587               		.section	.text.layer_on,"ax",@progbits
 588               	.global	layer_on
 590               	layer_on:
 591               	.LVL33:
 592               	.LFB18:
 159:./tmk_core/common/action_layer.c **** 
 160:./tmk_core/common/action_layer.c **** /** \brief Layer on
 161:./tmk_core/common/action_layer.c ****  *
 162:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 163:./tmk_core/common/action_layer.c ****  */
 164:./tmk_core/common/action_layer.c **** void layer_on(uint8_t layer)
 165:./tmk_core/common/action_layer.c **** {
 593               		.loc 1 165 1 is_stmt 1 view -0
 594               		.cfi_startproc
 595               		.loc 1 165 1 is_stmt 0 view .LVU85
 596 0000 0F93      		push r16
 597               	.LCFI18:
 598               		.cfi_def_cfa_offset 3
 599               		.cfi_offset 16, -2
 600 0002 1F93      		push r17
 601               	.LCFI19:
 602               		.cfi_def_cfa_offset 4
 603               		.cfi_offset 17, -3
 604 0004 CF93      		push r28
 605               	.LCFI20:
 606               		.cfi_def_cfa_offset 5
 607               		.cfi_offset 28, -4
 608 0006 DF93      		push r29
 609               	.LCFI21:
 610               		.cfi_def_cfa_offset 6
 611               		.cfi_offset 29, -5
 612 0008 00D0      		rcall .
 613 000a 00D0      		rcall .
 614               	.LCFI22:
 615               		.cfi_def_cfa_offset 10
 616 000c CDB7      		in r28,__SP_L__
 617 000e DEB7      		in r29,__SP_H__
 618               	.LCFI23:
 619               		.cfi_def_cfa_register 28
 620               	/* prologue: function */
 621               	/* frame size = 4 */
 622               	/* stack size = 8 */
 623               	.L__stack_usage = 8
 166:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 624               		.loc 1 166 5 is_stmt 1 view .LVU86
 625               		.loc 1 166 39 is_stmt 0 view .LVU87
 626 0010 41E0      		ldi r20,lo8(1)
 627 0012 50E0      		ldi r21,0
 628 0014 60E0      		ldi r22,0
 629 0016 70E0      		ldi r23,0
 630 0018 00C0      		rjmp 2f
 631               		1:
 632 001a 440F      		lsl r20
 633 001c 551F      		rol r21
 634 001e 661F      		rol r22
 635 0020 771F      		rol r23
 636               		2:
 637 0022 8A95      		dec r24
 638 0024 02F4      		brpl 1b
 639               		.loc 1 166 5 view .LVU88
 640 0026 8091 0000 		lds r24,layer_state
 641 002a 9091 0000 		lds r25,layer_state+1
 642 002e A091 0000 		lds r26,layer_state+2
 643 0032 B091 0000 		lds r27,layer_state+3
 644               	.LVL34:
 645               		.loc 1 166 5 view .LVU89
 646 0036 8A01      		movw r16,r20
 647 0038 9B01      		movw r18,r22
 648 003a 082B      		or r16,r24
 649 003c 192B      		or r17,r25
 650 003e 2A2B      		or r18,r26
 651 0040 3B2B      		or r19,r27
 652 0042 0983      		std Y+1,r16
 653 0044 1A83      		std Y+2,r17
 654 0046 2B83      		std Y+3,r18
 655 0048 3C83      		std Y+4,r19
 656 004a C901      		movw r24,r18
 657 004c B801      		movw r22,r16
 658               	/* epilogue start */
 167:./tmk_core/common/action_layer.c **** }
 659               		.loc 1 167 1 view .LVU90
 660 004e 0F90      		pop __tmp_reg__
 661 0050 0F90      		pop __tmp_reg__
 662 0052 0F90      		pop __tmp_reg__
 663 0054 0F90      		pop __tmp_reg__
 664 0056 DF91      		pop r29
 665 0058 CF91      		pop r28
 666 005a 1F91      		pop r17
 667 005c 0F91      		pop r16
 166:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | (1UL<<layer));
 668               		.loc 1 166 5 view .LVU91
 669 005e 0C94 0000 		jmp layer_state_set
 670               	.LVL35:
 671               		.cfi_endproc
 672               	.LFE18:
 674               		.section	.text.layer_off,"ax",@progbits
 675               	.global	layer_off
 677               	layer_off:
 678               	.LVL36:
 679               	.LFB19:
 168:./tmk_core/common/action_layer.c **** 
 169:./tmk_core/common/action_layer.c **** /** \brief Layer off
 170:./tmk_core/common/action_layer.c ****  *
 171:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 172:./tmk_core/common/action_layer.c ****  */
 173:./tmk_core/common/action_layer.c **** void layer_off(uint8_t layer)
 174:./tmk_core/common/action_layer.c **** {
 680               		.loc 1 174 1 is_stmt 1 view -0
 681               		.cfi_startproc
 682               		.loc 1 174 1 is_stmt 0 view .LVU93
 683 0000 0F93      		push r16
 684               	.LCFI24:
 685               		.cfi_def_cfa_offset 3
 686               		.cfi_offset 16, -2
 687 0002 1F93      		push r17
 688               	.LCFI25:
 689               		.cfi_def_cfa_offset 4
 690               		.cfi_offset 17, -3
 691 0004 CF93      		push r28
 692               	.LCFI26:
 693               		.cfi_def_cfa_offset 5
 694               		.cfi_offset 28, -4
 695 0006 DF93      		push r29
 696               	.LCFI27:
 697               		.cfi_def_cfa_offset 6
 698               		.cfi_offset 29, -5
 699 0008 00D0      		rcall .
 700 000a 00D0      		rcall .
 701               	.LCFI28:
 702               		.cfi_def_cfa_offset 10
 703 000c CDB7      		in r28,__SP_L__
 704 000e DEB7      		in r29,__SP_H__
 705               	.LCFI29:
 706               		.cfi_def_cfa_register 28
 707               	/* prologue: function */
 708               	/* frame size = 4 */
 709               	/* stack size = 8 */
 710               	.L__stack_usage = 8
 175:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 711               		.loc 1 175 5 is_stmt 1 view .LVU94
 712               		.loc 1 175 40 is_stmt 0 view .LVU95
 713 0010 41E0      		ldi r20,lo8(1)
 714 0012 50E0      		ldi r21,0
 715 0014 60E0      		ldi r22,0
 716 0016 70E0      		ldi r23,0
 717 0018 00C0      		rjmp 2f
 718               		1:
 719 001a 440F      		lsl r20
 720 001c 551F      		rol r21
 721 001e 661F      		rol r22
 722 0020 771F      		rol r23
 723               		2:
 724 0022 8A95      		dec r24
 725 0024 02F4      		brpl 1b
 726               		.loc 1 175 35 view .LVU96
 727 0026 4095      		com r20
 728 0028 5095      		com r21
 729 002a 6095      		com r22
 730 002c 7095      		com r23
 731               		.loc 1 175 5 view .LVU97
 732 002e 8091 0000 		lds r24,layer_state
 733 0032 9091 0000 		lds r25,layer_state+1
 734 0036 A091 0000 		lds r26,layer_state+2
 735 003a B091 0000 		lds r27,layer_state+3
 736               	.LVL37:
 737               		.loc 1 175 5 view .LVU98
 738 003e 8A01      		movw r16,r20
 739 0040 9B01      		movw r18,r22
 740 0042 0823      		and r16,r24
 741 0044 1923      		and r17,r25
 742 0046 2A23      		and r18,r26
 743 0048 3B23      		and r19,r27
 744 004a 0983      		std Y+1,r16
 745 004c 1A83      		std Y+2,r17
 746 004e 2B83      		std Y+3,r18
 747 0050 3C83      		std Y+4,r19
 748 0052 C901      		movw r24,r18
 749 0054 B801      		movw r22,r16
 750               	/* epilogue start */
 176:./tmk_core/common/action_layer.c **** }
 751               		.loc 1 176 1 view .LVU99
 752 0056 0F90      		pop __tmp_reg__
 753 0058 0F90      		pop __tmp_reg__
 754 005a 0F90      		pop __tmp_reg__
 755 005c 0F90      		pop __tmp_reg__
 756 005e DF91      		pop r29
 757 0060 CF91      		pop r28
 758 0062 1F91      		pop r17
 759 0064 0F91      		pop r16
 175:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & ~(1UL<<layer));
 760               		.loc 1 175 5 view .LVU100
 761 0066 0C94 0000 		jmp layer_state_set
 762               	.LVL38:
 763               		.cfi_endproc
 764               	.LFE19:
 766               		.section	.text.layer_invert,"ax",@progbits
 767               	.global	layer_invert
 769               	layer_invert:
 770               	.LVL39:
 771               	.LFB20:
 177:./tmk_core/common/action_layer.c **** 
 178:./tmk_core/common/action_layer.c **** /** \brief Layer invert
 179:./tmk_core/common/action_layer.c ****  *
 180:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 181:./tmk_core/common/action_layer.c ****  */
 182:./tmk_core/common/action_layer.c **** void layer_invert(uint8_t layer)
 183:./tmk_core/common/action_layer.c **** {
 772               		.loc 1 183 1 is_stmt 1 view -0
 773               		.cfi_startproc
 774               		.loc 1 183 1 is_stmt 0 view .LVU102
 775 0000 0F93      		push r16
 776               	.LCFI30:
 777               		.cfi_def_cfa_offset 3
 778               		.cfi_offset 16, -2
 779 0002 1F93      		push r17
 780               	.LCFI31:
 781               		.cfi_def_cfa_offset 4
 782               		.cfi_offset 17, -3
 783 0004 CF93      		push r28
 784               	.LCFI32:
 785               		.cfi_def_cfa_offset 5
 786               		.cfi_offset 28, -4
 787 0006 DF93      		push r29
 788               	.LCFI33:
 789               		.cfi_def_cfa_offset 6
 790               		.cfi_offset 29, -5
 791 0008 00D0      		rcall .
 792 000a 00D0      		rcall .
 793               	.LCFI34:
 794               		.cfi_def_cfa_offset 10
 795 000c CDB7      		in r28,__SP_L__
 796 000e DEB7      		in r29,__SP_H__
 797               	.LCFI35:
 798               		.cfi_def_cfa_register 28
 799               	/* prologue: function */
 800               	/* frame size = 4 */
 801               	/* stack size = 8 */
 802               	.L__stack_usage = 8
 184:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 803               		.loc 1 184 5 is_stmt 1 view .LVU103
 804               		.loc 1 184 39 is_stmt 0 view .LVU104
 805 0010 41E0      		ldi r20,lo8(1)
 806 0012 50E0      		ldi r21,0
 807 0014 60E0      		ldi r22,0
 808 0016 70E0      		ldi r23,0
 809 0018 00C0      		rjmp 2f
 810               		1:
 811 001a 440F      		lsl r20
 812 001c 551F      		rol r21
 813 001e 661F      		rol r22
 814 0020 771F      		rol r23
 815               		2:
 816 0022 8A95      		dec r24
 817 0024 02F4      		brpl 1b
 818               		.loc 1 184 5 view .LVU105
 819 0026 8091 0000 		lds r24,layer_state
 820 002a 9091 0000 		lds r25,layer_state+1
 821 002e A091 0000 		lds r26,layer_state+2
 822 0032 B091 0000 		lds r27,layer_state+3
 823               	.LVL40:
 824               		.loc 1 184 5 view .LVU106
 825 0036 8A01      		movw r16,r20
 826 0038 9B01      		movw r18,r22
 827 003a 0827      		eor r16,r24
 828 003c 1927      		eor r17,r25
 829 003e 2A27      		eor r18,r26
 830 0040 3B27      		eor r19,r27
 831 0042 0983      		std Y+1,r16
 832 0044 1A83      		std Y+2,r17
 833 0046 2B83      		std Y+3,r18
 834 0048 3C83      		std Y+4,r19
 835 004a C901      		movw r24,r18
 836 004c B801      		movw r22,r16
 837               	/* epilogue start */
 185:./tmk_core/common/action_layer.c **** }
 838               		.loc 1 185 1 view .LVU107
 839 004e 0F90      		pop __tmp_reg__
 840 0050 0F90      		pop __tmp_reg__
 841 0052 0F90      		pop __tmp_reg__
 842 0054 0F90      		pop __tmp_reg__
 843 0056 DF91      		pop r29
 844 0058 CF91      		pop r28
 845 005a 1F91      		pop r17
 846 005c 0F91      		pop r16
 184:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ (1UL<<layer));
 847               		.loc 1 184 5 view .LVU108
 848 005e 0C94 0000 		jmp layer_state_set
 849               	.LVL41:
 850               		.cfi_endproc
 851               	.LFE20:
 853               		.section	.text.layer_or,"ax",@progbits
 854               	.global	layer_or
 856               	layer_or:
 857               	.LVL42:
 858               	.LFB21:
 186:./tmk_core/common/action_layer.c **** 
 187:./tmk_core/common/action_layer.c **** /** \brief Layer or
 188:./tmk_core/common/action_layer.c ****  *
 189:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 190:./tmk_core/common/action_layer.c ****  */
 191:./tmk_core/common/action_layer.c **** void layer_or(uint32_t state)
 192:./tmk_core/common/action_layer.c **** {
 859               		.loc 1 192 1 is_stmt 1 view -0
 860               		.cfi_startproc
 861               		.loc 1 192 1 is_stmt 0 view .LVU110
 862 0000 CF93      		push r28
 863               	.LCFI36:
 864               		.cfi_def_cfa_offset 3
 865               		.cfi_offset 28, -2
 866 0002 DF93      		push r29
 867               	.LCFI37:
 868               		.cfi_def_cfa_offset 4
 869               		.cfi_offset 29, -3
 870 0004 00D0      		rcall .
 871 0006 00D0      		rcall .
 872               	.LCFI38:
 873               		.cfi_def_cfa_offset 8
 874 0008 CDB7      		in r28,__SP_L__
 875 000a DEB7      		in r29,__SP_H__
 876               	.LCFI39:
 877               		.cfi_def_cfa_register 28
 878               	/* prologue: function */
 879               	/* frame size = 4 */
 880               	/* stack size = 6 */
 881               	.L__stack_usage = 6
 882 000c 6983      		std Y+1,r22
 883 000e 7A83      		std Y+2,r23
 884 0010 8B83      		std Y+3,r24
 885 0012 9C83      		std Y+4,r25
 193:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 886               		.loc 1 193 5 is_stmt 1 view .LVU111
 887 0014 8091 0000 		lds r24,layer_state
 888 0018 9091 0000 		lds r25,layer_state+1
 889 001c A091 0000 		lds r26,layer_state+2
 890 0020 B091 0000 		lds r27,layer_state+3
 891 0024 2981      		ldd r18,Y+1
 892 0026 3A81      		ldd r19,Y+2
 893 0028 4B81      		ldd r20,Y+3
 894 002a 5C81      		ldd r21,Y+4
 895 002c 282B      		or r18,r24
 896 002e 392B      		or r19,r25
 897 0030 4A2B      		or r20,r26
 898 0032 5B2B      		or r21,r27
 899 0034 2983      		std Y+1,r18
 900 0036 3A83      		std Y+2,r19
 901 0038 4B83      		std Y+3,r20
 902 003a 5C83      		std Y+4,r21
 903 003c CA01      		movw r24,r20
 904 003e B901      		movw r22,r18
 905               	.LVL43:
 906               	/* epilogue start */
 194:./tmk_core/common/action_layer.c **** }
 907               		.loc 1 194 1 is_stmt 0 view .LVU112
 908 0040 0F90      		pop __tmp_reg__
 909 0042 0F90      		pop __tmp_reg__
 910 0044 0F90      		pop __tmp_reg__
 911 0046 0F90      		pop __tmp_reg__
 912 0048 DF91      		pop r29
 913 004a CF91      		pop r28
 193:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state | state);
 914               		.loc 1 193 5 view .LVU113
 915 004c 0C94 0000 		jmp layer_state_set
 916               	.LVL44:
 917               		.cfi_endproc
 918               	.LFE21:
 920               		.section	.text.layer_and,"ax",@progbits
 921               	.global	layer_and
 923               	layer_and:
 924               	.LVL45:
 925               	.LFB22:
 195:./tmk_core/common/action_layer.c **** /** \brief Layer and
 196:./tmk_core/common/action_layer.c ****  *
 197:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 198:./tmk_core/common/action_layer.c ****  */
 199:./tmk_core/common/action_layer.c **** void layer_and(uint32_t state)
 200:./tmk_core/common/action_layer.c **** {
 926               		.loc 1 200 1 is_stmt 1 view -0
 927               		.cfi_startproc
 928               		.loc 1 200 1 is_stmt 0 view .LVU115
 929 0000 CF93      		push r28
 930               	.LCFI40:
 931               		.cfi_def_cfa_offset 3
 932               		.cfi_offset 28, -2
 933 0002 DF93      		push r29
 934               	.LCFI41:
 935               		.cfi_def_cfa_offset 4
 936               		.cfi_offset 29, -3
 937 0004 00D0      		rcall .
 938 0006 00D0      		rcall .
 939               	.LCFI42:
 940               		.cfi_def_cfa_offset 8
 941 0008 CDB7      		in r28,__SP_L__
 942 000a DEB7      		in r29,__SP_H__
 943               	.LCFI43:
 944               		.cfi_def_cfa_register 28
 945               	/* prologue: function */
 946               	/* frame size = 4 */
 947               	/* stack size = 6 */
 948               	.L__stack_usage = 6
 949 000c 6983      		std Y+1,r22
 950 000e 7A83      		std Y+2,r23
 951 0010 8B83      		std Y+3,r24
 952 0012 9C83      		std Y+4,r25
 201:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 953               		.loc 1 201 5 is_stmt 1 view .LVU116
 954 0014 8091 0000 		lds r24,layer_state
 955 0018 9091 0000 		lds r25,layer_state+1
 956 001c A091 0000 		lds r26,layer_state+2
 957 0020 B091 0000 		lds r27,layer_state+3
 958 0024 2981      		ldd r18,Y+1
 959 0026 3A81      		ldd r19,Y+2
 960 0028 4B81      		ldd r20,Y+3
 961 002a 5C81      		ldd r21,Y+4
 962 002c 2823      		and r18,r24
 963 002e 3923      		and r19,r25
 964 0030 4A23      		and r20,r26
 965 0032 5B23      		and r21,r27
 966 0034 2983      		std Y+1,r18
 967 0036 3A83      		std Y+2,r19
 968 0038 4B83      		std Y+3,r20
 969 003a 5C83      		std Y+4,r21
 970 003c CA01      		movw r24,r20
 971 003e B901      		movw r22,r18
 972               	.LVL46:
 973               	/* epilogue start */
 202:./tmk_core/common/action_layer.c **** }
 974               		.loc 1 202 1 is_stmt 0 view .LVU117
 975 0040 0F90      		pop __tmp_reg__
 976 0042 0F90      		pop __tmp_reg__
 977 0044 0F90      		pop __tmp_reg__
 978 0046 0F90      		pop __tmp_reg__
 979 0048 DF91      		pop r29
 980 004a CF91      		pop r28
 201:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state & state);
 981               		.loc 1 201 5 view .LVU118
 982 004c 0C94 0000 		jmp layer_state_set
 983               	.LVL47:
 984               		.cfi_endproc
 985               	.LFE22:
 987               		.section	.text.layer_xor,"ax",@progbits
 988               	.global	layer_xor
 990               	layer_xor:
 991               	.LVL48:
 992               	.LFB23:
 203:./tmk_core/common/action_layer.c **** /** \brief Layer xor
 204:./tmk_core/common/action_layer.c ****  *
 205:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 206:./tmk_core/common/action_layer.c ****  */
 207:./tmk_core/common/action_layer.c **** void layer_xor(uint32_t state)
 208:./tmk_core/common/action_layer.c **** {
 993               		.loc 1 208 1 is_stmt 1 view -0
 994               		.cfi_startproc
 995               		.loc 1 208 1 is_stmt 0 view .LVU120
 996 0000 CF93      		push r28
 997               	.LCFI44:
 998               		.cfi_def_cfa_offset 3
 999               		.cfi_offset 28, -2
 1000 0002 DF93      		push r29
 1001               	.LCFI45:
 1002               		.cfi_def_cfa_offset 4
 1003               		.cfi_offset 29, -3
 1004 0004 00D0      		rcall .
 1005 0006 00D0      		rcall .
 1006               	.LCFI46:
 1007               		.cfi_def_cfa_offset 8
 1008 0008 CDB7      		in r28,__SP_L__
 1009 000a DEB7      		in r29,__SP_H__
 1010               	.LCFI47:
 1011               		.cfi_def_cfa_register 28
 1012               	/* prologue: function */
 1013               	/* frame size = 4 */
 1014               	/* stack size = 6 */
 1015               	.L__stack_usage = 6
 1016 000c 6983      		std Y+1,r22
 1017 000e 7A83      		std Y+2,r23
 1018 0010 8B83      		std Y+3,r24
 1019 0012 9C83      		std Y+4,r25
 209:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 1020               		.loc 1 209 5 is_stmt 1 view .LVU121
 1021 0014 8091 0000 		lds r24,layer_state
 1022 0018 9091 0000 		lds r25,layer_state+1
 1023 001c A091 0000 		lds r26,layer_state+2
 1024 0020 B091 0000 		lds r27,layer_state+3
 1025 0024 2981      		ldd r18,Y+1
 1026 0026 3A81      		ldd r19,Y+2
 1027 0028 4B81      		ldd r20,Y+3
 1028 002a 5C81      		ldd r21,Y+4
 1029 002c 2827      		eor r18,r24
 1030 002e 3927      		eor r19,r25
 1031 0030 4A27      		eor r20,r26
 1032 0032 5B27      		eor r21,r27
 1033 0034 2983      		std Y+1,r18
 1034 0036 3A83      		std Y+2,r19
 1035 0038 4B83      		std Y+3,r20
 1036 003a 5C83      		std Y+4,r21
 1037 003c CA01      		movw r24,r20
 1038 003e B901      		movw r22,r18
 1039               	.LVL49:
 1040               	/* epilogue start */
 210:./tmk_core/common/action_layer.c **** }
 1041               		.loc 1 210 1 is_stmt 0 view .LVU122
 1042 0040 0F90      		pop __tmp_reg__
 1043 0042 0F90      		pop __tmp_reg__
 1044 0044 0F90      		pop __tmp_reg__
 1045 0046 0F90      		pop __tmp_reg__
 1046 0048 DF91      		pop r29
 1047 004a CF91      		pop r28
 209:./tmk_core/common/action_layer.c ****     layer_state_set(layer_state ^ state);
 1048               		.loc 1 209 5 view .LVU123
 1049 004c 0C94 0000 		jmp layer_state_set
 1050               	.LVL50:
 1051               		.cfi_endproc
 1052               	.LFE23:
 1054               		.section	.text.layer_debug,"ax",@progbits
 1055               	.global	layer_debug
 1057               	layer_debug:
 1058               	.LFB29:
 1059               		.cfi_startproc
 1060               	/* prologue: function */
 1061               	/* frame size = 0 */
 1062               	/* stack size = 0 */
 1063               	.L__stack_usage = 0
 1064               	/* epilogue start */
 1065 0000 0895      		ret
 1066               		.cfi_endproc
 1067               	.LFE29:
 1069               		.section	.text.layer_switch_get_layer,"ax",@progbits
 1070               	.global	layer_switch_get_layer
 1072               	layer_switch_get_layer:
 1073               	.LVL51:
 1074               	.LFB26:
 211:./tmk_core/common/action_layer.c **** 
 212:./tmk_core/common/action_layer.c **** /** \brief Layer debug printing
 213:./tmk_core/common/action_layer.c ****  *
 214:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 215:./tmk_core/common/action_layer.c ****  */
 216:./tmk_core/common/action_layer.c **** void layer_debug(void)
 217:./tmk_core/common/action_layer.c **** {
 218:./tmk_core/common/action_layer.c ****     dprintf("%08lX(%u)", layer_state, biton32(layer_state));
 219:./tmk_core/common/action_layer.c **** }
 220:./tmk_core/common/action_layer.c **** #endif
 221:./tmk_core/common/action_layer.c **** 
 222:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 223:./tmk_core/common/action_layer.c **** uint8_t source_layers_cache[(MATRIX_ROWS * MATRIX_COLS + 7) / 8][MAX_LAYER_BITS] = {{0}};
 224:./tmk_core/common/action_layer.c **** 
 225:./tmk_core/common/action_layer.c **** void update_source_layers_cache(keypos_t key, uint8_t layer)
 226:./tmk_core/common/action_layer.c **** {
 227:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 228:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 229:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 230:./tmk_core/common/action_layer.c **** 
 231:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 232:./tmk_core/common/action_layer.c ****         source_layers_cache[storage_row][bit_number] ^=
 233:./tmk_core/common/action_layer.c ****             (-((layer & (1U << bit_number)) != 0)
 234:./tmk_core/common/action_layer.c ****              ^ source_layers_cache[storage_row][bit_number])
 235:./tmk_core/common/action_layer.c ****             & (1U << storage_bit);
 236:./tmk_core/common/action_layer.c ****     }
 237:./tmk_core/common/action_layer.c **** }
 238:./tmk_core/common/action_layer.c **** 
 239:./tmk_core/common/action_layer.c **** uint8_t read_source_layers_cache(keypos_t key)
 240:./tmk_core/common/action_layer.c **** {
 241:./tmk_core/common/action_layer.c ****     const uint8_t key_number = key.col + (key.row * MATRIX_COLS);
 242:./tmk_core/common/action_layer.c ****     const uint8_t storage_row = key_number / 8;
 243:./tmk_core/common/action_layer.c ****     const uint8_t storage_bit = key_number % 8;
 244:./tmk_core/common/action_layer.c ****     uint8_t layer = 0;
 245:./tmk_core/common/action_layer.c **** 
 246:./tmk_core/common/action_layer.c ****     for (uint8_t bit_number = 0; bit_number < MAX_LAYER_BITS; bit_number++) {
 247:./tmk_core/common/action_layer.c ****         layer |=
 248:./tmk_core/common/action_layer.c ****             ((source_layers_cache[storage_row][bit_number]
 249:./tmk_core/common/action_layer.c ****               & (1U << storage_bit)) != 0)
 250:./tmk_core/common/action_layer.c ****             << bit_number;
 251:./tmk_core/common/action_layer.c ****     }
 252:./tmk_core/common/action_layer.c **** 
 253:./tmk_core/common/action_layer.c ****     return layer;
 254:./tmk_core/common/action_layer.c **** }
 255:./tmk_core/common/action_layer.c **** #endif
 256:./tmk_core/common/action_layer.c **** 
 257:./tmk_core/common/action_layer.c **** /** \brief Store or get action (FIXME: Needs better summary)
 258:./tmk_core/common/action_layer.c ****  *
 259:./tmk_core/common/action_layer.c ****  * Make sure the action triggered when the key is released is the same
 260:./tmk_core/common/action_layer.c ****  * one as the one triggered on press. It's important for the mod keys
 261:./tmk_core/common/action_layer.c ****  * when the layer is switched after the down event but before the up
 262:./tmk_core/common/action_layer.c ****  * event as they may get stuck otherwise.
 263:./tmk_core/common/action_layer.c ****  */
 264:./tmk_core/common/action_layer.c **** action_t store_or_get_action(bool pressed, keypos_t key)
 265:./tmk_core/common/action_layer.c **** {
 266:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 267:./tmk_core/common/action_layer.c ****     if (disable_action_cache) {
 268:./tmk_core/common/action_layer.c ****         return layer_switch_get_action(key);
 269:./tmk_core/common/action_layer.c ****     }
 270:./tmk_core/common/action_layer.c **** 
 271:./tmk_core/common/action_layer.c ****     uint8_t layer;
 272:./tmk_core/common/action_layer.c **** 
 273:./tmk_core/common/action_layer.c ****     if (pressed) {
 274:./tmk_core/common/action_layer.c ****         layer = layer_switch_get_layer(key);
 275:./tmk_core/common/action_layer.c ****         update_source_layers_cache(key, layer);
 276:./tmk_core/common/action_layer.c ****     }
 277:./tmk_core/common/action_layer.c ****     else {
 278:./tmk_core/common/action_layer.c ****         layer = read_source_layers_cache(key);
 279:./tmk_core/common/action_layer.c ****     }
 280:./tmk_core/common/action_layer.c ****     return action_for_key(layer, key);
 281:./tmk_core/common/action_layer.c **** #else
 282:./tmk_core/common/action_layer.c ****     return layer_switch_get_action(key);
 283:./tmk_core/common/action_layer.c **** #endif
 284:./tmk_core/common/action_layer.c **** }
 285:./tmk_core/common/action_layer.c **** 
 286:./tmk_core/common/action_layer.c **** 
 287:./tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 288:./tmk_core/common/action_layer.c ****  *
 289:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 290:./tmk_core/common/action_layer.c ****  */
 291:./tmk_core/common/action_layer.c **** int8_t layer_switch_get_layer(keypos_t key)
 292:./tmk_core/common/action_layer.c **** {
 1075               		.loc 1 292 1 is_stmt 1 view -0
 1076               		.cfi_startproc
 1077               		.loc 1 292 1 is_stmt 0 view .LVU125
 1078 0000 BF92      		push r11
 1079               	.LCFI48:
 1080               		.cfi_def_cfa_offset 3
 1081               		.cfi_offset 11, -2
 1082 0002 CF92      		push r12
 1083               	.LCFI49:
 1084               		.cfi_def_cfa_offset 4
 1085               		.cfi_offset 12, -3
 1086 0004 DF92      		push r13
 1087               	.LCFI50:
 1088               		.cfi_def_cfa_offset 5
 1089               		.cfi_offset 13, -4
 1090 0006 EF92      		push r14
 1091               	.LCFI51:
 1092               		.cfi_def_cfa_offset 6
 1093               		.cfi_offset 14, -5
 1094 0008 FF92      		push r15
 1095               	.LCFI52:
 1096               		.cfi_def_cfa_offset 7
 1097               		.cfi_offset 15, -6
 1098 000a 0F93      		push r16
 1099               	.LCFI53:
 1100               		.cfi_def_cfa_offset 8
 1101               		.cfi_offset 16, -7
 1102 000c 1F93      		push r17
 1103               	.LCFI54:
 1104               		.cfi_def_cfa_offset 9
 1105               		.cfi_offset 17, -8
 1106 000e CF93      		push r28
 1107               	.LCFI55:
 1108               		.cfi_def_cfa_offset 10
 1109               		.cfi_offset 28, -9
 1110 0010 DF93      		push r29
 1111               	.LCFI56:
 1112               		.cfi_def_cfa_offset 11
 1113               		.cfi_offset 29, -10
 1114               	/* prologue: function */
 1115               	/* frame size = 0 */
 1116               	/* stack size = 9 */
 1117               	.L__stack_usage = 9
 1118 0012 8C01      		movw r16,r24
 293:./tmk_core/common/action_layer.c **** #ifndef NO_ACTION_LAYER
 294:./tmk_core/common/action_layer.c ****     action_t action;
 1119               		.loc 1 294 5 is_stmt 1 view .LVU126
 295:./tmk_core/common/action_layer.c ****     action.code = ACTION_TRANSPARENT;
 1120               		.loc 1 295 5 view .LVU127
 1121               	.LVL52:
 296:./tmk_core/common/action_layer.c **** 
 297:./tmk_core/common/action_layer.c ****     uint32_t layers = layer_state | default_layer_state;
 1122               		.loc 1 297 5 view .LVU128
 1123               		.loc 1 297 14 is_stmt 0 view .LVU129
 1124 0014 C090 0000 		lds r12,layer_state
 1125 0018 D090 0000 		lds r13,layer_state+1
 1126 001c E090 0000 		lds r14,layer_state+2
 1127 0020 F090 0000 		lds r15,layer_state+3
 1128 0024 8091 0000 		lds r24,default_layer_state
 1129 0028 9091 0000 		lds r25,default_layer_state+1
 1130 002c A091 0000 		lds r26,default_layer_state+2
 1131 0030 B091 0000 		lds r27,default_layer_state+3
 1132               	.LVL53:
 1133               		.loc 1 297 14 view .LVU130
 1134 0034 C82A      		or r12,r24
 1135 0036 D92A      		or r13,r25
 1136 0038 EA2A      		or r14,r26
 1137 003a FB2A      		or r15,r27
 1138               	.LVL54:
 298:./tmk_core/common/action_layer.c ****     /* check top layer first */
 299:./tmk_core/common/action_layer.c ****     for (int8_t i = 31; i >= 0; i--) {
 1139               		.loc 1 299 5 is_stmt 1 view .LVU131
 1140               	.LBB6:
 1141               		.loc 1 299 10 view .LVU132
 1142               		.loc 1 299 25 view .LVU133
 1143               	.LBE6:
 297:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1144               		.loc 1 297 14 is_stmt 0 view .LVU134
 1145 003c CFE1      		ldi r28,lo8(31)
 1146 003e D0E0      		ldi r29,0
 1147               	.LVL55:
 1148               	.L36:
 297:./tmk_core/common/action_layer.c ****     /* check top layer first */
 1149               		.loc 1 297 14 view .LVU135
 1150 0040 BC2E      		mov r11,r28
 1151               	.LVL56:
 1152               	.LBB7:
 300:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1153               		.loc 1 300 9 is_stmt 1 view .LVU136
 1154               		.loc 1 300 13 is_stmt 0 view .LVU137
 1155 0042 D701      		movw r26,r14
 1156 0044 C601      		movw r24,r12
 1157 0046 0C2E      		mov r0,r28
 1158 0048 00C0      		rjmp 2f
 1159               		1:
 1160 004a B695      		lsr r27
 1161 004c A795      		ror r26
 1162 004e 9795      		ror r25
 1163 0050 8795      		ror r24
 1164               		2:
 1165 0052 0A94      		dec r0
 1166 0054 02F4      		brpl 1b
 1167               		.loc 1 300 12 view .LVU138
 1168 0056 80FD      		sbrc r24,0
 1169 0058 00C0      		rjmp .L35
 1170               	.L38:
 299:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1171               		.loc 1 299 33 is_stmt 1 view .LVU139
 1172               	.LVL57:
 299:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1173               		.loc 1 299 25 view .LVU140
 1174               	.LVL58:
 1175 005a 2197      		sbiw r28,1
 1176 005c 00F4      		brcc .L36
 299:./tmk_core/common/action_layer.c ****         if (layers & (1UL<<i)) {
 1177               		.loc 1 299 25 is_stmt 0 view .LVU141
 1178               	.LBE7:
 301:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 302:./tmk_core/common/action_layer.c ****             if (action.code != ACTION_TRANSPARENT) {
 303:./tmk_core/common/action_layer.c ****                 return i;
 304:./tmk_core/common/action_layer.c ****             }
 305:./tmk_core/common/action_layer.c ****         }
 306:./tmk_core/common/action_layer.c ****     }
 307:./tmk_core/common/action_layer.c ****     /* fall back to layer 0 */
 308:./tmk_core/common/action_layer.c ****     return 0;
 1179               		.loc 1 308 12 view .LVU142
 1180 005e B12C      		mov r11,__zero_reg__
 1181               	.LVL59:
 1182               	.L34:
 309:./tmk_core/common/action_layer.c **** #else
 310:./tmk_core/common/action_layer.c ****     return biton32(default_layer_state);
 311:./tmk_core/common/action_layer.c **** #endif
 312:./tmk_core/common/action_layer.c **** }
 1183               		.loc 1 312 1 view .LVU143
 1184 0060 8B2D      		mov r24,r11
 1185               	/* epilogue start */
 1186 0062 DF91      		pop r29
 1187 0064 CF91      		pop r28
 1188 0066 1F91      		pop r17
 1189 0068 0F91      		pop r16
 1190 006a FF90      		pop r15
 1191 006c EF90      		pop r14
 1192 006e DF90      		pop r13
 1193 0070 CF90      		pop r12
 1194               	.LVL60:
 1195               		.loc 1 312 1 view .LVU144
 1196 0072 BF90      		pop r11
 1197 0074 0895      		ret
 1198               	.LVL61:
 1199               	.L35:
 1200               	.LBB8:
 301:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1201               		.loc 1 301 13 is_stmt 1 view .LVU145
 301:./tmk_core/common/action_layer.c ****             action = action_for_key(i, key);
 1202               		.loc 1 301 22 is_stmt 0 view .LVU146
 1203 0076 B801      		movw r22,r16
 1204 0078 8C2F      		mov r24,r28
 1205 007a 0E94 0000 		call action_for_key
 1206               	.LVL62:
 302:./tmk_core/common/action_layer.c ****                 return i;
 1207               		.loc 1 302 13 is_stmt 1 view .LVU147
 302:./tmk_core/common/action_layer.c ****                 return i;
 1208               		.loc 1 302 16 is_stmt 0 view .LVU148
 1209 007e 0197      		sbiw r24,1
 1210 0080 01F0      		breq .L38
 1211 0082 00C0      		rjmp .L34
 1212               	.LBE8:
 1213               		.cfi_endproc
 1214               	.LFE26:
 1216               		.section	.text.layer_switch_get_action,"ax",@progbits
 1217               	.global	layer_switch_get_action
 1219               	layer_switch_get_action:
 1220               	.LVL63:
 1221               	.LFB27:
 313:./tmk_core/common/action_layer.c **** 
 314:./tmk_core/common/action_layer.c **** /** \brief Layer switch get layer
 315:./tmk_core/common/action_layer.c ****  *
 316:./tmk_core/common/action_layer.c ****  * FIXME: Needs docs
 317:./tmk_core/common/action_layer.c ****  */
 318:./tmk_core/common/action_layer.c **** action_t layer_switch_get_action(keypos_t key)
 319:./tmk_core/common/action_layer.c **** {
 1222               		.loc 1 319 1 is_stmt 1 view -0
 1223               		.cfi_startproc
 1224               		.loc 1 319 1 is_stmt 0 view .LVU150
 1225 0000 CF93      		push r28
 1226               	.LCFI57:
 1227               		.cfi_def_cfa_offset 3
 1228               		.cfi_offset 28, -2
 1229 0002 DF93      		push r29
 1230               	.LCFI58:
 1231               		.cfi_def_cfa_offset 4
 1232               		.cfi_offset 29, -3
 1233               	/* prologue: function */
 1234               	/* frame size = 0 */
 1235               	/* stack size = 2 */
 1236               	.L__stack_usage = 2
 1237 0004 D82F      		mov r29,r24
 1238               	.LVL64:
 1239               		.loc 1 319 1 view .LVU151
 1240 0006 C92F      		mov r28,r25
 1241               	.LVL65:
 320:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1242               		.loc 1 320 5 is_stmt 1 view .LVU152
 1243               		.loc 1 320 27 is_stmt 0 view .LVU153
 1244 0008 0E94 0000 		call layer_switch_get_layer
 1245               	.LVL66:
 1246               		.loc 1 320 12 view .LVU154
 1247 000c 6D2F      		mov r22,r29
 1248 000e 7C2F      		mov r23,r28
 1249               	/* epilogue start */
 321:./tmk_core/common/action_layer.c **** }
 1250               		.loc 1 321 1 view .LVU155
 1251 0010 DF91      		pop r29
 1252               	.LVL67:
 1253               		.loc 1 321 1 view .LVU156
 1254 0012 CF91      		pop r28
 320:./tmk_core/common/action_layer.c ****     return action_for_key(layer_switch_get_layer(key), key);
 1255               		.loc 1 320 12 view .LVU157
 1256 0014 0C94 0000 		jmp action_for_key
 1257               	.LVL68:
 1258               		.cfi_endproc
 1259               	.LFE27:
 1261               		.section	.text.store_or_get_action,"ax",@progbits
 1262               	.global	store_or_get_action
 1264               	store_or_get_action:
 1265               	.LVL69:
 1266               	.LFB25:
 265:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1267               		.loc 1 265 1 is_stmt 1 view -0
 1268               		.cfi_startproc
 1269               	/* prologue: function */
 1270               	/* frame size = 0 */
 1271               	/* stack size = 0 */
 1272               	.L__stack_usage = 0
 265:./tmk_core/common/action_layer.c **** #if !defined(NO_ACTION_LAYER) && defined(PREVENT_STUCK_MODIFIERS)
 1273               		.loc 1 265 1 is_stmt 0 view .LVU159
 1274 0000 CB01      		movw r24,r22
 1275               	.LVL70:
 282:./tmk_core/common/action_layer.c **** #endif
 1276               		.loc 1 282 5 is_stmt 1 view .LVU160
 282:./tmk_core/common/action_layer.c **** #endif
 1277               		.loc 1 282 12 is_stmt 0 view .LVU161
 1278 0002 0C94 0000 		jmp layer_switch_get_action
 1279               	.LVL71:
 282:./tmk_core/common/action_layer.c **** #endif
 1280               		.loc 1 282 12 view .LVU162
 1281               		.cfi_endproc
 1282               	.LFE25:
 1284               	.global	layer_state
 1285               		.section	.bss.layer_state,"aw",@nobits
 1288               	layer_state:
 1289 0000 0000 0000 		.zero	4
 1290               	.global	default_layer_state
 1291               		.section	.bss.default_layer_state,"aw",@nobits
 1294               	default_layer_state:
 1295 0000 0000 0000 		.zero	4
 1296               		.text
 1297               	.Letext0:
 1298               		.file 2 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 1299               		.file 3 "./tmk_core/common/keyboard.h"
 1300               		.file 4 "./tmk_core/common/action_code.h"
 1301               		.file 5 "./tmk_core/common/action_layer.h"
 1302               		.file 6 "./tmk_core/common/avr/xprintf.h"
 1303               		.file 7 "./tmk_core/common/debug.h"
 1304               		.file 8 "./tmk_core/common/action.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 action_layer.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:13     .text.default_layer_state_set_kb:0000000000000000 default_layer_state_set_kb
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:13     .text.default_layer_state_set_kb:0000000000000000 default_layer_state_set_kb.localalias
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:33     .text.default_layer_state_set:0000000000000000 default_layer_state_set
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:1294   .bss.default_layer_state:0000000000000000 default_layer_state
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:68     .text.default_layer_debug:0000000000000000 default_layer_debug
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:86     .text.default_layer_set:0000000000000000 default_layer_set
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:105    .text.default_layer_or:0000000000000000 default_layer_or
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:172    .text.default_layer_and:0000000000000000 default_layer_and
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:239    .text.default_layer_xor:0000000000000000 default_layer_xor
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:306    .text.layer_state_set_user:0000000000000000 layer_state_set_user
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:320    .text.layer_state_set_kb:0000000000000000 layer_state_set_kb
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:340    .text.layer_state_set:0000000000000000 layer_state_set
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:1288   .bss.layer_state:0000000000000000 layer_state
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:375    .text.layer_clear:0000000000000000 layer_clear
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:395    .text.layer_state_is:0000000000000000 layer_state_is
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:462    .text.layer_state_cmp:0000000000000000 layer_state_cmp
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:513    .text.layer_move:0000000000000000 layer_move
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:590    .text.layer_on:0000000000000000 layer_on
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:677    .text.layer_off:0000000000000000 layer_off
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:769    .text.layer_invert:0000000000000000 layer_invert
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:856    .text.layer_or:0000000000000000 layer_or
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:923    .text.layer_and:0000000000000000 layer_and
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:990    .text.layer_xor:0000000000000000 layer_xor
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:1057   .text.layer_debug:0000000000000000 layer_debug
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:1072   .text.layer_switch_get_layer:0000000000000000 layer_switch_get_layer
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:1219   .text.layer_switch_get_action:0000000000000000 layer_switch_get_action
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cclPhruc.s:1264   .text.store_or_get_action:0000000000000000 store_or_get_action

UNDEFINED SYMBOLS
clear_keyboard_but_mods
action_for_key
__do_clear_bss
