   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB4:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** 
  18:./tmk_core/common/keyboard.c **** #include <stdint.h>
  19:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:./tmk_core/common/keyboard.c **** #include "matrix.h"
  21:./tmk_core/common/keyboard.c **** #include "keymap.h"
  22:./tmk_core/common/keyboard.c **** #include "host.h"
  23:./tmk_core/common/keyboard.c **** #include "led.h"
  24:./tmk_core/common/keyboard.c **** #include "keycode.h"
  25:./tmk_core/common/keyboard.c **** #include "timer.h"
  26:./tmk_core/common/keyboard.c **** #include "print.h"
  27:./tmk_core/common/keyboard.c **** #include "debug.h"
  28:./tmk_core/common/keyboard.c **** #include "command.h"
  29:./tmk_core/common/keyboard.c **** #include "util.h"
  30:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:./tmk_core/common/keyboard.c **** #include "backlight.h"
  33:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  34:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  35:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  36:./tmk_core/common/keyboard.c **** #else
  37:./tmk_core/common/keyboard.c **** #   include "magic.h"
  38:./tmk_core/common/keyboard.c **** #endif
  39:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  40:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  41:./tmk_core/common/keyboard.c **** #endif
  42:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  43:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  44:./tmk_core/common/keyboard.c **** #endif
  45:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  46:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  47:./tmk_core/common/keyboard.c **** #endif
  48:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  49:./tmk_core/common/keyboard.c **** #   include "adb.h"
  50:./tmk_core/common/keyboard.c **** #endif
  51:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  52:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  53:./tmk_core/common/keyboard.c **** #endif
  54:./tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  55:./tmk_core/common/keyboard.c **** #   include "process_steno.h"
  56:./tmk_core/common/keyboard.c **** #endif
  57:./tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  58:./tmk_core/common/keyboard.c **** #   include "fauxclicky.h"
  59:./tmk_core/common/keyboard.c **** #endif
  60:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  61:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  62:./tmk_core/common/keyboard.c **** #endif
  63:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  64:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  65:./tmk_core/common/keyboard.c **** #endif
  66:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  67:./tmk_core/common/keyboard.c **** #   include "pointing_device.h"
  68:./tmk_core/common/keyboard.c **** #endif
  69:./tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  70:./tmk_core/common/keyboard.c **** #   include "process_midi.h"
  71:./tmk_core/common/keyboard.c **** #endif
  72:./tmk_core/common/keyboard.c **** 
  73:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  74:./tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
  75:./tmk_core/common/keyboard.c **** static matrix_row_t get_real_keys(uint8_t row, matrix_row_t rowdata){
  76:./tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
  77:./tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
  78:./tmk_core/common/keyboard.c ****         //read each key in the row data and check if the keymap defines it as a real key
  79:./tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1<<col))){
  80:./tmk_core/common/keyboard.c ****             //this creates new row data, if a key is defined in the keymap, it will be set here
  81:./tmk_core/common/keyboard.c ****             out |= 1<<col;
  82:./tmk_core/common/keyboard.c ****         }
  83:./tmk_core/common/keyboard.c ****     }
  84:./tmk_core/common/keyboard.c ****     return out;
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata)
  88:./tmk_core/common/keyboard.c **** {
  89:./tmk_core/common/keyboard.c ****     rowdata &= rowdata-1; //if there are less than two bits (keys) set, rowdata will become zero
  90:./tmk_core/common/keyboard.c ****     return rowdata;
  91:./tmk_core/common/keyboard.c **** }
  92:./tmk_core/common/keyboard.c **** 
  93:./tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata)
  94:./tmk_core/common/keyboard.c **** {
  95:./tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
  96:./tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
  97:./tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
  98:./tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
  99:./tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 100:./tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0){
 101:./tmk_core/common/keyboard.c ****         return false;
 102:./tmk_core/common/keyboard.c ****     }
 103:./tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 104:./tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 105:./tmk_core/common/keyboard.c ****     so they are filtered out.
 106:./tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 107:./tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 108:./tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 109:./tmk_core/common/keyboard.c ****     */
 110:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 111:./tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)){
 112:./tmk_core/common/keyboard.c ****             return true;
 113:./tmk_core/common/keyboard.c ****         }
 114:./tmk_core/common/keyboard.c ****     }
 115:./tmk_core/common/keyboard.c ****     return false;
 116:./tmk_core/common/keyboard.c **** }
 117:./tmk_core/common/keyboard.c **** 
 118:./tmk_core/common/keyboard.c **** #endif
 119:./tmk_core/common/keyboard.c **** 
 120:./tmk_core/common/keyboard.c **** /** \brief matrix_setup
 121:./tmk_core/common/keyboard.c ****  *
 122:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 123:./tmk_core/common/keyboard.c ****  */
 124:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
 125:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 125 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 126:./tmk_core/common/keyboard.c **** }
  22               		.loc 1 126 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB5:
 127:./tmk_core/common/keyboard.c **** 
 128:./tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 129:./tmk_core/common/keyboard.c ****  *
 130:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 131:./tmk_core/common/keyboard.c ****  */
 132:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 132 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
 133:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 133 5 view .LVU3
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE5:
  45               		.section	.text.is_keyboard_master,"ax",@progbits
  46               		.weak	is_keyboard_master
  48               	is_keyboard_master:
  49               	.LFB6:
 134:./tmk_core/common/keyboard.c **** }
 135:./tmk_core/common/keyboard.c **** 
 136:./tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 137:./tmk_core/common/keyboard.c ****  *
 138:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 139:./tmk_core/common/keyboard.c ****  */
 140:./tmk_core/common/keyboard.c **** __attribute__((weak))
 141:./tmk_core/common/keyboard.c **** bool is_keyboard_master(void) {
  50               		.loc 1 141 31 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
 142:./tmk_core/common/keyboard.c ****     return true;
  56               		.loc 1 142 5 view .LVU5
 143:./tmk_core/common/keyboard.c **** }
  57               		.loc 1 143 1 is_stmt 0 view .LVU6
  58 0000 81E0      		ldi r24,lo8(1)
  59               	/* epilogue start */
  60 0002 0895      		ret
  61               		.cfi_endproc
  62               	.LFE6:
  64               		.section	.text.keyboard_init,"ax",@progbits
  65               	.global	keyboard_init
  67               	keyboard_init:
  68               	.LFB7:
 144:./tmk_core/common/keyboard.c **** 
 145:./tmk_core/common/keyboard.c **** /** \brief keyboard_init
 146:./tmk_core/common/keyboard.c ****  *
 147:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 148:./tmk_core/common/keyboard.c ****  */
 149:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  69               		.loc 1 149 26 is_stmt 1 view -0
  70               		.cfi_startproc
  71               	/* prologue: function */
  72               	/* frame size = 0 */
  73               	/* stack size = 0 */
  74               	.L__stack_usage = 0
 150:./tmk_core/common/keyboard.c ****     timer_init();
  75               		.loc 1 150 5 view .LVU8
  76 0000 0E94 0000 		call timer_init
  77               	.LVL1:
 151:./tmk_core/common/keyboard.c ****     matrix_init();
  78               		.loc 1 151 5 view .LVU9
  79 0004 0E94 0000 		call matrix_init
  80               	.LVL2:
 152:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 153:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
 154:./tmk_core/common/keyboard.c **** #endif
 155:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 156:./tmk_core/common/keyboard.c ****     serial_mouse_init();
 157:./tmk_core/common/keyboard.c **** #endif
 158:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 159:./tmk_core/common/keyboard.c ****     adb_mouse_init();
 160:./tmk_core/common/keyboard.c **** #endif
 161:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 162:./tmk_core/common/keyboard.c ****     bootmagic();
 163:./tmk_core/common/keyboard.c **** #else
 164:./tmk_core/common/keyboard.c ****     magic();
  81               		.loc 1 164 5 view .LVU10
  82 0008 0C94 0000 		jmp magic
  83               	.LVL3:
  84               		.cfi_endproc
  85               	.LFE7:
  87               		.section	.text.keyboard_set_leds,"ax",@progbits
  88               	.global	keyboard_set_leds
  90               	keyboard_set_leds:
  91               	.LVL4:
  92               	.LFB9:
 165:./tmk_core/common/keyboard.c **** #endif
 166:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 167:./tmk_core/common/keyboard.c ****     backlight_init();
 168:./tmk_core/common/keyboard.c **** #endif
 169:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 170:./tmk_core/common/keyboard.c ****     rgblight_init();
 171:./tmk_core/common/keyboard.c **** #endif
 172:./tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 173:./tmk_core/common/keyboard.c ****     steno_init();
 174:./tmk_core/common/keyboard.c **** #endif
 175:./tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 176:./tmk_core/common/keyboard.c ****     fauxclicky_init();
 177:./tmk_core/common/keyboard.c **** #endif
 178:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 179:./tmk_core/common/keyboard.c ****     pointing_device_init();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 182:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 183:./tmk_core/common/keyboard.c **** #endif
 184:./tmk_core/common/keyboard.c **** }
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 187:./tmk_core/common/keyboard.c ****  *
 188:./tmk_core/common/keyboard.c ****  * Do routine keyboard jobs: 
 189:./tmk_core/common/keyboard.c ****  *
 190:./tmk_core/common/keyboard.c ****  * * scan matrix
 191:./tmk_core/common/keyboard.c ****  * * handle mouse movements
 192:./tmk_core/common/keyboard.c ****  * * run visualizer code
 193:./tmk_core/common/keyboard.c ****  * * handle midi commands
 194:./tmk_core/common/keyboard.c ****  * * light LEDs
 195:./tmk_core/common/keyboard.c ****  *
 196:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 197:./tmk_core/common/keyboard.c ****  */
 198:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 199:./tmk_core/common/keyboard.c **** {
 200:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 201:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 202:./tmk_core/common/keyboard.c ****   //  static matrix_row_t matrix_ghost[MATRIX_ROWS];
 203:./tmk_core/common/keyboard.c **** #endif
 204:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 205:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 206:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 207:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 208:./tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 209:./tmk_core/common/keyboard.c **** #endif
 210:./tmk_core/common/keyboard.c **** 
 211:./tmk_core/common/keyboard.c ****     matrix_scan();
 212:./tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 213:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 214:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 215:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 216:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 217:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 218:./tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 219:./tmk_core/common/keyboard.c ****                     /* Keep track of whether ghosted status has changed for
 220:./tmk_core/common/keyboard.c ****                     * debugging. But don't update matrix_prev until un-ghosted, or
 221:./tmk_core/common/keyboard.c ****                     * the last key would be lost.
 222:./tmk_core/common/keyboard.c ****                     */
 223:./tmk_core/common/keyboard.c ****                     //if (debug_matrix && matrix_ghost[r] != matrix_row) {
 224:./tmk_core/common/keyboard.c ****                     //    matrix_print();
 225:./tmk_core/common/keyboard.c ****                     //}
 226:./tmk_core/common/keyboard.c ****                     //matrix_ghost[r] = matrix_row;
 227:./tmk_core/common/keyboard.c ****                     continue;
 228:./tmk_core/common/keyboard.c ****                 }
 229:./tmk_core/common/keyboard.c ****                 //matrix_ghost[r] = matrix_row;
 230:./tmk_core/common/keyboard.c **** #endif
 231:./tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 232:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 233:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 234:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 235:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 236:./tmk_core/common/keyboard.c ****                             .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 237:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 238:./tmk_core/common/keyboard.c ****                         });
 239:./tmk_core/common/keyboard.c ****                         // record a processed key
 240:./tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= ((matrix_row_t)1<<c);
 241:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 242:./tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 243:./tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 244:./tmk_core/common/keyboard.c **** #endif
 245:./tmk_core/common/keyboard.c ****                         // process a key per task call
 246:./tmk_core/common/keyboard.c ****                         goto MATRIX_LOOP_END;
 247:./tmk_core/common/keyboard.c ****                     }
 248:./tmk_core/common/keyboard.c ****                 }
 249:./tmk_core/common/keyboard.c ****             }
 250:./tmk_core/common/keyboard.c ****         }
 251:./tmk_core/common/keyboard.c ****     }
 252:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 253:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 254:./tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 255:./tmk_core/common/keyboard.c ****     if (!keys_processed)
 256:./tmk_core/common/keyboard.c **** #endif
 257:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 258:./tmk_core/common/keyboard.c **** 
 259:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 260:./tmk_core/common/keyboard.c **** 
 261:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 262:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 263:./tmk_core/common/keyboard.c ****     mousekey_task();
 264:./tmk_core/common/keyboard.c **** #endif
 265:./tmk_core/common/keyboard.c **** 
 266:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 267:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 268:./tmk_core/common/keyboard.c **** #endif
 269:./tmk_core/common/keyboard.c **** 
 270:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 271:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 272:./tmk_core/common/keyboard.c **** #endif
 273:./tmk_core/common/keyboard.c **** 
 274:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 275:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 276:./tmk_core/common/keyboard.c **** #endif
 277:./tmk_core/common/keyboard.c **** 
 278:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 279:./tmk_core/common/keyboard.c **** 	serial_link_update();
 280:./tmk_core/common/keyboard.c **** #endif
 281:./tmk_core/common/keyboard.c **** 
 282:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 283:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 284:./tmk_core/common/keyboard.c **** #endif
 285:./tmk_core/common/keyboard.c **** 
 286:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 287:./tmk_core/common/keyboard.c ****     pointing_device_task();
 288:./tmk_core/common/keyboard.c **** #endif
 289:./tmk_core/common/keyboard.c **** 
 290:./tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 291:./tmk_core/common/keyboard.c ****     midi_task();
 292:./tmk_core/common/keyboard.c **** #endif
 293:./tmk_core/common/keyboard.c **** 
 294:./tmk_core/common/keyboard.c ****     // update LED
 295:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 296:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 297:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 298:./tmk_core/common/keyboard.c ****     }
 299:./tmk_core/common/keyboard.c **** }
 300:./tmk_core/common/keyboard.c **** 
 301:./tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 302:./tmk_core/common/keyboard.c ****  *
 303:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 304:./tmk_core/common/keyboard.c ****  */
 305:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 306:./tmk_core/common/keyboard.c **** {
  93               		.loc 1 306 1 view -0
  94               		.cfi_startproc
  95               		.loc 1 306 1 is_stmt 0 view .LVU12
  96 0000 CF93      		push r28
  97               	.LCFI0:
  98               		.cfi_def_cfa_offset 3
  99               		.cfi_offset 28, -2
 100               	/* prologue: function */
 101               	/* frame size = 0 */
 102               	/* stack size = 1 */
 103               	.L__stack_usage = 1
 104 0002 C82F      		mov r28,r24
 307:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 105               		.loc 1 307 5 is_stmt 1 view .LVU13
 106               		.loc 1 307 9 is_stmt 0 view .LVU14
 107 0004 8091 0000 		lds r24,debug_config
 108               	.LVL5:
 109               		.loc 1 307 8 view .LVU15
 110 0008 82FF      		sbrs r24,2
 111 000a 00C0      		rjmp .L8
 112               		.loc 1 307 27 is_stmt 1 discriminator 1 view .LVU16
 113               		.loc 1 307 27 discriminator 1 view .LVU17
 114 000c 80FF      		sbrs r24,0
 115 000e 00C0      		rjmp .L8
 116               		.loc 1 307 27 discriminator 2 view .LVU18
 117               	.LBB2:
 118               		.loc 1 307 27 discriminator 2 view .LVU19
 119               		.loc 1 307 27 discriminator 2 view .LVU20
 120               	.LBE2:
 121 0010 80E0      		ldi r24,lo8(__c.2816)
 122 0012 90E0      		ldi r25,hi8(__c.2816)
 123 0014 0E94 0000 		call xputs
 124               	.LVL6:
 125               		.loc 1 307 56 discriminator 2 view .LVU21
 126               		.loc 1 307 56 discriminator 2 view .LVU22
 127 0018 8091 0000 		lds r24,debug_config
 128 001c 80FF      		sbrs r24,0
 129 001e 00C0      		rjmp .L8
 130               		.loc 1 307 56 discriminator 5 view .LVU23
 131               	.LBB3:
 132               		.loc 1 307 56 discriminator 5 view .LVU24
 133               		.loc 1 307 56 discriminator 5 view .LVU25
 134               	.LBE3:
 135 0020 1F92      		push __zero_reg__
 136               	.LCFI1:
 137               		.cfi_def_cfa_offset 4
 138 0022 CF93      		push r28
 139               	.LCFI2:
 140               		.cfi_def_cfa_offset 5
 141 0024 80E0      		ldi r24,lo8(__c.2818)
 142 0026 90E0      		ldi r25,hi8(__c.2818)
 143 0028 9F93      		push r25
 144               	.LCFI3:
 145               		.cfi_def_cfa_offset 6
 146 002a 8F93      		push r24
 147               	.LCFI4:
 148               		.cfi_def_cfa_offset 7
 149 002c 0E94 0000 		call __xprintf
 150               	.LVL7:
 151               		.loc 1 307 74 discriminator 5 view .LVU26
 152               		.loc 1 307 74 discriminator 5 view .LVU27
 153 0030 8091 0000 		lds r24,debug_config
 154 0034 0F90      		pop __tmp_reg__
 155 0036 0F90      		pop __tmp_reg__
 156 0038 0F90      		pop __tmp_reg__
 157 003a 0F90      		pop __tmp_reg__
 158               	.LCFI5:
 159               		.cfi_def_cfa_offset 3
 160 003c 80FF      		sbrs r24,0
 161 003e 00C0      		rjmp .L8
 162               		.loc 1 307 74 discriminator 8 view .LVU28
 163               	.LBB4:
 164               		.loc 1 307 74 discriminator 8 view .LVU29
 165               		.loc 1 307 74 discriminator 8 view .LVU30
 166               	.LBE4:
 167 0040 80E0      		ldi r24,lo8(__c.2820)
 168 0042 90E0      		ldi r25,hi8(__c.2820)
 169 0044 0E94 0000 		call xputs
 170               	.LVL8:
 171               	.L8:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 172               		.loc 1 308 5 view .LVU31
 173 0048 8C2F      		mov r24,r28
 174               	/* epilogue start */
 309:./tmk_core/common/keyboard.c **** }
 175               		.loc 1 309 1 is_stmt 0 view .LVU32
 176 004a CF91      		pop r28
 177               	.LVL9:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 178               		.loc 1 308 5 view .LVU33
 179 004c 0C94 0000 		jmp led_set
 180               	.LVL10:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 181               		.loc 1 308 5 view .LVU34
 182               		.cfi_endproc
 183               	.LFE9:
 185               		.section	.text.keyboard_task,"ax",@progbits
 186               	.global	keyboard_task
 188               	keyboard_task:
 189               	.LFB8:
 199:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 190               		.loc 1 199 1 is_stmt 1 view -0
 191               		.cfi_startproc
 192 0000 BF92      		push r11
 193               	.LCFI6:
 194               		.cfi_def_cfa_offset 3
 195               		.cfi_offset 11, -2
 196 0002 CF92      		push r12
 197               	.LCFI7:
 198               		.cfi_def_cfa_offset 4
 199               		.cfi_offset 12, -3
 200 0004 DF92      		push r13
 201               	.LCFI8:
 202               		.cfi_def_cfa_offset 5
 203               		.cfi_offset 13, -4
 204 0006 EF92      		push r14
 205               	.LCFI9:
 206               		.cfi_def_cfa_offset 6
 207               		.cfi_offset 14, -5
 208 0008 FF92      		push r15
 209               	.LCFI10:
 210               		.cfi_def_cfa_offset 7
 211               		.cfi_offset 15, -6
 212 000a 0F93      		push r16
 213               	.LCFI11:
 214               		.cfi_def_cfa_offset 8
 215               		.cfi_offset 16, -7
 216 000c 1F93      		push r17
 217               	.LCFI12:
 218               		.cfi_def_cfa_offset 9
 219               		.cfi_offset 17, -8
 220 000e CF93      		push r28
 221               	.LCFI13:
 222               		.cfi_def_cfa_offset 10
 223               		.cfi_offset 28, -9
 224 0010 DF93      		push r29
 225               	.LCFI14:
 226               		.cfi_def_cfa_offset 11
 227               		.cfi_offset 29, -10
 228 0012 CDB7      		in r28,__SP_L__
 229 0014 DEB7      		in r29,__SP_H__
 230               	.LCFI15:
 231               		.cfi_def_cfa_register 28
 232 0016 2A97      		sbiw r28,10
 233               	.LCFI16:
 234               		.cfi_def_cfa_offset 21
 235 0018 0FB6      		in __tmp_reg__,__SREG__
 236 001a F894      		cli
 237 001c DEBF      		out __SP_H__,r29
 238 001e 0FBE      		out __SREG__,__tmp_reg__
 239 0020 CDBF      		out __SP_L__,r28
 240               	/* prologue: function */
 241               	/* frame size = 10 */
 242               	/* stack size = 19 */
 243               	.L__stack_usage = 19
 200:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 244               		.loc 1 200 5 view .LVU36
 204:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 245               		.loc 1 204 5 view .LVU37
 205:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 246               		.loc 1 205 5 view .LVU38
 247               	.LVL11:
 206:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 248               		.loc 1 206 5 view .LVU39
 211:./tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 249               		.loc 1 211 5 view .LVU40
 250 0022 0E94 0000 		call matrix_scan
 251               	.LVL12:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 252               		.loc 1 212 5 view .LVU41
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 253               		.loc 1 212 9 is_stmt 0 view .LVU42
 254 0026 0E94 0000 		call is_keyboard_master
 255               	.LVL13:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 256               		.loc 1 212 8 view .LVU43
 257 002a 8823      		tst r24
 258 002c 01F4      		brne .+2
 259 002e 00C0      		rjmp .L22
 260 0030 80E0      		ldi r24,lo8(matrix_prev.2796)
 261 0032 C82E      		mov r12,r24
 262 0034 80E0      		ldi r24,hi8(matrix_prev.2796)
 263 0036 D82E      		mov r13,r24
 264 0038 10E0      		ldi r17,0
 265 003a 00E0      		ldi r16,0
 266               	.LVL14:
 267               	.L29:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 268               		.loc 1 212 8 view .LVU44
 269 003c B02E      		mov r11,r16
 270               	.LVL15:
 271               	.LBB5:
 214:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 272               		.loc 1 214 13 is_stmt 1 view .LVU45
 214:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 273               		.loc 1 214 26 is_stmt 0 view .LVU46
 274 003e 802F      		mov r24,r16
 275 0040 0E94 0000 		call matrix_get_row
 276               	.LVL16:
 277 0044 E82E      		mov r14,r24
 278               	.LVL17:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 279               		.loc 1 215 13 is_stmt 1 view .LVU47
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 280               		.loc 1 215 53 is_stmt 0 view .LVU48
 281 0046 F601      		movw r30,r12
 282 0048 F190      		ld r15,Z+
 283 004a 6F01      		movw r12,r30
 284               	.LVL18:
 216:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 285               		.loc 1 216 13 is_stmt 1 view .LVU49
 216:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 286               		.loc 1 216 16 is_stmt 0 view .LVU50
 287 004c F816      		cp r15,r24
 288 004e 01F4      		brne .+2
 289 0050 00C0      		rjmp .L23
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 290               		.loc 1 231 17 is_stmt 1 view .LVU51
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 291               		.loc 1 231 21 is_stmt 0 view .LVU52
 292 0052 8091 0000 		lds r24,debug_config
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 293               		.loc 1 231 20 view .LVU53
 294 0056 81FD      		sbrc r24,1
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 295               		.loc 1 231 35 is_stmt 1 discriminator 1 view .LVU54
 296 0058 0E94 0000 		call matrix_print
 297               	.LVL19:
 298               	.L24:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 299               		.loc 1 232 17 view .LVU55
 300               	.LBB6:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 301               		.loc 1 232 22 view .LVU56
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 302               		.loc 1 232 22 is_stmt 0 view .LVU57
 303               	.LBE6:
 304               	.LBE5:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 305               		.loc 1 212 8 view .LVU58
 306 005c 90E0      		ldi r25,0
 307 005e 80E0      		ldi r24,0
 308               	.LBB9:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 309               		.loc 1 215 27 view .LVU59
 310 0060 FE24      		eor r15,r14
 311               	.LVL20:
 312               	.LBB7:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 313               		.loc 1 233 25 view .LVU60
 314 0062 2F2D      		mov r18,r15
 315 0064 30E0      		ldi r19,0
 316               	.LVL21:
 317               	.L28:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 318               		.loc 1 233 25 view .LVU61
 319 0066 482F      		mov r20,r24
 320               	.LVL22:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 321               		.loc 1 233 21 is_stmt 1 view .LVU62
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 322               		.loc 1 233 25 is_stmt 0 view .LVU63
 323 0068 B901      		movw r22,r18
 324 006a 082E      		mov r0,r24
 325 006c 00C0      		rjmp 2f
 326               		1:
 327 006e 7595      		asr r23
 328 0070 6795      		ror r22
 329               		2:
 330 0072 0A94      		dec r0
 331 0074 02F4      		brpl 1b
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 332               		.loc 1 233 24 view .LVU64
 333 0076 60FF      		sbrs r22,0
 334 0078 00C0      		rjmp .L25
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 335               		.loc 1 234 25 is_stmt 1 view .LVU65
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 336               		.loc 1 234 49 is_stmt 0 view .LVU66
 337 007a 8E83      		std Y+6,r24
 338 007c BF82      		std Y+7,r11
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 339               		.loc 1 236 70 view .LVU67
 340 007e 81E0      		ldi r24,lo8(1)
 341 0080 90E0      		ldi r25,0
 342               	.LVL23:
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 343               		.loc 1 236 70 view .LVU68
 344 0082 6C01      		movw r12,r24
 345 0084 00C0      		rjmp 2f
 346               		1:
 347 0086 CC0C      		lsl r12
 348 0088 DD1C      		rol r13
 349               		2:
 350 008a 4A95      		dec r20
 351 008c 02F4      		brpl 1b
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 352               		.loc 1 236 52 view .LVU69
 353 008e 2E2D      		mov r18,r14
 354 0090 30E0      		ldi r19,0
 355 0092 2C21      		and r18,r12
 356 0094 3D21      		and r19,r13
 357 0096 232B      		or r18,r19
 358 0098 01F4      		brne .L26
 359 009a 80E0      		ldi r24,0
 360               	.L26:
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 361               		.loc 1 234 49 view .LVU70
 362 009c 8887      		std Y+8,r24
 237:./tmk_core/common/keyboard.c ****                         });
 363               		.loc 1 237 38 view .LVU71
 364 009e 0E94 0000 		call timer_read
 365               	.LVL24:
 237:./tmk_core/common/keyboard.c ****                         });
 366               		.loc 1 237 51 view .LVU72
 367 00a2 8160      		ori r24,1
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 368               		.loc 1 234 49 view .LVU73
 369 00a4 782F      		mov r23,r24
 370 00a6 9A87      		std Y+10,r25
 371 00a8 8987      		std Y+9,r24
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 372               		.loc 1 234 25 view .LVU74
 373 00aa 4E81      		ldd r20,Y+6
 374 00ac 5F81      		ldd r21,Y+7
 375 00ae 6885      		ldd r22,Y+8
 376 00b0 8A85      		ldd r24,Y+10
 377 00b2 0E94 0000 		call action_exec
 378               	.LVL25:
 240:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 379               		.loc 1 240 25 is_stmt 1 view .LVU75
 240:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 380               		.loc 1 240 40 is_stmt 0 view .LVU76
 381 00b6 F801      		movw r30,r16
 382 00b8 E050      		subi r30,lo8(-(matrix_prev.2796))
 383 00ba F040      		sbci r31,hi8(-(matrix_prev.2796))
 384 00bc 8081      		ld r24,Z
 385 00be 8C25      		eor r24,r12
 386 00c0 8083      		st Z,r24
 246:./tmk_core/common/keyboard.c ****                     }
 387               		.loc 1 246 25 is_stmt 1 view .LVU77
 388               	.LVL26:
 389               	.L27:
 246:./tmk_core/common/keyboard.c ****                     }
 390               		.loc 1 246 25 is_stmt 0 view .LVU78
 391               	.LBE7:
 392               	.LBE9:
 263:./tmk_core/common/keyboard.c **** #endif
 393               		.loc 1 263 5 is_stmt 1 view .LVU79
 394 00c2 0E94 0000 		call mousekey_task
 395               	.LVL27:
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 396               		.loc 1 295 5 view .LVU80
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 397               		.loc 1 295 23 is_stmt 0 view .LVU81
 398 00c6 0E94 0000 		call host_keyboard_leds
 399               	.LVL28:
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 400               		.loc 1 295 8 view .LVU82
 401 00ca 9091 0000 		lds r25,led_status.2797
 402 00ce 8917      		cp r24,r25
 403 00d0 01F0      		breq .L21
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 404               		.loc 1 296 9 is_stmt 1 view .LVU83
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 405               		.loc 1 296 22 is_stmt 0 view .LVU84
 406 00d2 0E94 0000 		call host_keyboard_leds
 407               	.LVL29:
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 408               		.loc 1 296 20 view .LVU85
 409 00d6 8093 0000 		sts led_status.2797,r24
 297:./tmk_core/common/keyboard.c ****     }
 410               		.loc 1 297 9 is_stmt 1 view .LVU86
 411               	/* epilogue start */
 299:./tmk_core/common/keyboard.c **** 
 412               		.loc 1 299 1 is_stmt 0 view .LVU87
 413 00da 2A96      		adiw r28,10
 414 00dc 0FB6      		in __tmp_reg__,__SREG__
 415 00de F894      		cli
 416 00e0 DEBF      		out __SP_H__,r29
 417 00e2 0FBE      		out __SREG__,__tmp_reg__
 418 00e4 CDBF      		out __SP_L__,r28
 419 00e6 DF91      		pop r29
 420 00e8 CF91      		pop r28
 421 00ea 1F91      		pop r17
 422 00ec 0F91      		pop r16
 423 00ee FF90      		pop r15
 424 00f0 EF90      		pop r14
 425 00f2 DF90      		pop r13
 426 00f4 CF90      		pop r12
 427 00f6 BF90      		pop r11
 297:./tmk_core/common/keyboard.c ****     }
 428               		.loc 1 297 9 view .LVU88
 429 00f8 0C94 0000 		jmp keyboard_set_leds
 430               	.LVL30:
 431               	.L25:
 297:./tmk_core/common/keyboard.c ****     }
 432               		.loc 1 297 9 view .LVU89
 433 00fc 0196      		adiw r24,1
 434               	.LVL31:
 435               	.LBB10:
 436               	.LBB8:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 437               		.loc 1 232 17 discriminator 2 view .LVU90
 438 00fe 8630      		cpi r24,6
 439 0100 9105      		cpc r25,__zero_reg__
 440 0102 01F0      		breq .+2
 441 0104 00C0      		rjmp .L28
 442               	.LVL32:
 443               	.L23:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 444               		.loc 1 232 17 discriminator 2 view .LVU91
 445 0106 0F5F      		subi r16,-1
 446 0108 1F4F      		sbci r17,-1
 447               	.LVL33:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 448               		.loc 1 232 17 discriminator 2 view .LVU92
 449               	.LBE8:
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 450               		.loc 1 213 9 view .LVU93
 451 010a 0E30      		cpi r16,14
 452 010c 1105      		cpc r17,__zero_reg__
 453 010e 01F0      		breq .+2
 454 0110 00C0      		rjmp .L29
 455               	.LVL34:
 456               	.L22:
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 457               		.loc 1 213 9 view .LVU94
 458               	.LBE10:
 257:./tmk_core/common/keyboard.c **** 
 459               		.loc 1 257 5 is_stmt 1 view .LVU95
 257:./tmk_core/common/keyboard.c **** 
 460               		.loc 1 257 17 is_stmt 0 view .LVU96
 461 0112 8FEF      		ldi r24,lo8(-1)
 462 0114 8983      		std Y+1,r24
 463 0116 8A83      		std Y+2,r24
 464 0118 1B82      		std Y+3,__zero_reg__
 465 011a 0E94 0000 		call timer_read
 466               	.LVL35:
 467 011e 8160      		ori r24,1
 468 0120 782F      		mov r23,r24
 469 0122 9D83      		std Y+5,r25
 470 0124 8C83      		std Y+4,r24
 257:./tmk_core/common/keyboard.c **** 
 471               		.loc 1 257 5 view .LVU97
 472 0126 4981      		ldd r20,Y+1
 473 0128 5A81      		ldd r21,Y+2
 474 012a 6B81      		ldd r22,Y+3
 475 012c 8D81      		ldd r24,Y+5
 476 012e 0E94 0000 		call action_exec
 477               	.LVL36:
 478 0132 00C0      		rjmp .L27
 479               	.L21:
 480               	/* epilogue start */
 299:./tmk_core/common/keyboard.c **** 
 481               		.loc 1 299 1 view .LVU98
 482 0134 2A96      		adiw r28,10
 483 0136 0FB6      		in __tmp_reg__,__SREG__
 484 0138 F894      		cli
 485 013a DEBF      		out __SP_H__,r29
 486 013c 0FBE      		out __SREG__,__tmp_reg__
 487 013e CDBF      		out __SP_L__,r28
 488 0140 DF91      		pop r29
 489 0142 CF91      		pop r28
 490 0144 1F91      		pop r17
 491 0146 0F91      		pop r16
 492 0148 FF90      		pop r15
 493 014a EF90      		pop r14
 494 014c DF90      		pop r13
 495 014e CF90      		pop r12
 496 0150 BF90      		pop r11
 497 0152 0895      		ret
 498               		.cfi_endproc
 499               	.LFE8:
 501               		.section	.progmem.data.__c.2820,"a"
 504               	__c.2820:
 505 0000 0A00      		.string	"\n"
 506               		.section	.progmem.data.__c.2818,"a"
 509               	__c.2818:
 510 0000 2530 3258 		.string	"%02X"
 510      00
 511               		.section	.progmem.data.__c.2816,"a"
 514               	__c.2816:
 515 0000 6B65 7962 		.string	"keyboard_set_led: "
 515      6F61 7264 
 515      5F73 6574 
 515      5F6C 6564 
 515      3A20 00
 516               		.section	.bss.led_status.2797,"aw",@nobits
 519               	led_status.2797:
 520 0000 00        		.zero	1
 521               		.section	.bss.matrix_prev.2796,"aw",@nobits
 524               	matrix_prev.2796:
 525 0000 0000 0000 		.zero	14
 525      0000 0000 
 525      0000 0000 
 525      0000 
 526               		.text
 527               	.Letext0:
 528               		.file 2 "/usr/local/Cellar/avr-gcc@8/8.3.0_1/avr/include/stdint.h"
 529               		.file 3 "./tmk_core/common/keyboard.h"
 530               		.file 4 "./tmk_core/common/matrix.h"
 531               		.file 5 "./tmk_core/common/host.h"
 532               		.file 6 "./tmk_core/common/avr/xprintf.h"
 533               		.file 7 "./tmk_core/common/debug.h"
 534               		.file 8 "./quantum/keycode_config.h"
 535               		.file 9 "./quantum/keymap.h"
 536               		.file 10 "./tmk_core/common/timer.h"
 537               		.file 11 "./tmk_core/common/command.h"
 538               		.file 12 "./tmk_core/common/action_layer.h"
 539               		.file 13 "./tmk_core/common/mousekey.h"
 540               		.file 14 "./tmk_core/common/led.h"
 541               		.file 15 "./tmk_core/common/action.h"
 542               		.file 16 "./tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:4      *ABS*:000000000000003f __SREG__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:13     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:31     .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:48     .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:67     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:90     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:514    .progmem.data.__c.2816:0000000000000000 __c.2816
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:509    .progmem.data.__c.2818:0000000000000000 __c.2818
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:504    .progmem.data.__c.2820:0000000000000000 __c.2820
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:188    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:524    .bss.matrix_prev.2796:0000000000000000 matrix_prev.2796
/var/folders/3d/n9bt7hnj55x7z_fzmyrbdqym0000gp/T//ccZlbpVp.s:519    .bss.led_status.2797:0000000000000000 led_status.2797

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
