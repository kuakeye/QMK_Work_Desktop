   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB4:
  15               		.file 1 "./tmk_core/common/keyboard.c"
   1:./tmk_core/common/keyboard.c **** /*
   2:./tmk_core/common/keyboard.c **** Copyright 2011, 2012, 2013 Jun Wako <wakojun@gmail.com>
   3:./tmk_core/common/keyboard.c **** 
   4:./tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:./tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:./tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:./tmk_core/common/keyboard.c **** (at your option) any later version.
   8:./tmk_core/common/keyboard.c **** 
   9:./tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:./tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:./tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:./tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:./tmk_core/common/keyboard.c **** 
  14:./tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:./tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:./tmk_core/common/keyboard.c **** */
  17:./tmk_core/common/keyboard.c **** 
  18:./tmk_core/common/keyboard.c **** #include <stdint.h>
  19:./tmk_core/common/keyboard.c **** #include "keyboard.h"
  20:./tmk_core/common/keyboard.c **** #include "matrix.h"
  21:./tmk_core/common/keyboard.c **** #include "keymap.h"
  22:./tmk_core/common/keyboard.c **** #include "host.h"
  23:./tmk_core/common/keyboard.c **** #include "led.h"
  24:./tmk_core/common/keyboard.c **** #include "keycode.h"
  25:./tmk_core/common/keyboard.c **** #include "timer.h"
  26:./tmk_core/common/keyboard.c **** #include "print.h"
  27:./tmk_core/common/keyboard.c **** #include "debug.h"
  28:./tmk_core/common/keyboard.c **** #include "command.h"
  29:./tmk_core/common/keyboard.c **** #include "util.h"
  30:./tmk_core/common/keyboard.c **** #include "sendchar.h"
  31:./tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:./tmk_core/common/keyboard.c **** #include "backlight.h"
  33:./tmk_core/common/keyboard.c **** #include "action_layer.h"
  34:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  35:./tmk_core/common/keyboard.c **** #   include "bootmagic.h"
  36:./tmk_core/common/keyboard.c **** #else
  37:./tmk_core/common/keyboard.c **** #   include "magic.h"
  38:./tmk_core/common/keyboard.c **** #endif
  39:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  40:./tmk_core/common/keyboard.c **** #   include "mousekey.h"
  41:./tmk_core/common/keyboard.c **** #endif
  42:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  43:./tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  44:./tmk_core/common/keyboard.c **** #endif
  45:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  46:./tmk_core/common/keyboard.c **** #   include "serial_mouse.h"
  47:./tmk_core/common/keyboard.c **** #endif
  48:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  49:./tmk_core/common/keyboard.c **** #   include "adb.h"
  50:./tmk_core/common/keyboard.c **** #endif
  51:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
  52:./tmk_core/common/keyboard.c **** #   include "rgblight.h"
  53:./tmk_core/common/keyboard.c **** #endif
  54:./tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
  55:./tmk_core/common/keyboard.c **** #   include "process_steno.h"
  56:./tmk_core/common/keyboard.c **** #endif
  57:./tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
  58:./tmk_core/common/keyboard.c **** #   include "fauxclicky.h"
  59:./tmk_core/common/keyboard.c **** #endif
  60:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
  61:./tmk_core/common/keyboard.c **** #   include "serial_link/system/serial_link.h"
  62:./tmk_core/common/keyboard.c **** #endif
  63:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
  64:./tmk_core/common/keyboard.c **** #   include "visualizer/visualizer.h"
  65:./tmk_core/common/keyboard.c **** #endif
  66:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
  67:./tmk_core/common/keyboard.c **** #   include "pointing_device.h"
  68:./tmk_core/common/keyboard.c **** #endif
  69:./tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
  70:./tmk_core/common/keyboard.c **** #   include "process_midi.h"
  71:./tmk_core/common/keyboard.c **** #endif
  72:./tmk_core/common/keyboard.c **** 
  73:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  74:./tmk_core/common/keyboard.c **** extern const uint16_t keymaps[][MATRIX_ROWS][MATRIX_COLS];
  75:./tmk_core/common/keyboard.c **** static matrix_row_t get_real_keys(uint8_t row, matrix_row_t rowdata){
  76:./tmk_core/common/keyboard.c ****     matrix_row_t out = 0;
  77:./tmk_core/common/keyboard.c ****     for (uint8_t col = 0; col < MATRIX_COLS; col++) {
  78:./tmk_core/common/keyboard.c ****         //read each key in the row data and check if the keymap defines it as a real key
  79:./tmk_core/common/keyboard.c ****         if (pgm_read_byte(&keymaps[0][row][col]) && (rowdata & (1<<col))){
  80:./tmk_core/common/keyboard.c ****             //this creates new row data, if a key is defined in the keymap, it will be set here
  81:./tmk_core/common/keyboard.c ****             out |= 1<<col;
  82:./tmk_core/common/keyboard.c ****         }
  83:./tmk_core/common/keyboard.c ****     }
  84:./tmk_core/common/keyboard.c ****     return out;
  85:./tmk_core/common/keyboard.c **** }
  86:./tmk_core/common/keyboard.c **** 
  87:./tmk_core/common/keyboard.c **** static inline bool popcount_more_than_one(matrix_row_t rowdata)
  88:./tmk_core/common/keyboard.c **** {
  89:./tmk_core/common/keyboard.c ****     rowdata &= rowdata-1; //if there are less than two bits (keys) set, rowdata will become zero
  90:./tmk_core/common/keyboard.c ****     return rowdata;
  91:./tmk_core/common/keyboard.c **** }
  92:./tmk_core/common/keyboard.c **** 
  93:./tmk_core/common/keyboard.c **** static inline bool has_ghost_in_row(uint8_t row, matrix_row_t rowdata)
  94:./tmk_core/common/keyboard.c **** {
  95:./tmk_core/common/keyboard.c ****     /* No ghost exists when less than 2 keys are down on the row.
  96:./tmk_core/common/keyboard.c ****     If there are "active" blanks in the matrix, the key can't be pressed by the user,
  97:./tmk_core/common/keyboard.c ****     there is no doubt as to which keys are really being pressed.
  98:./tmk_core/common/keyboard.c ****     The ghosts will be ignored, they are KC_NO.   */
  99:./tmk_core/common/keyboard.c ****     rowdata = get_real_keys(row, rowdata);
 100:./tmk_core/common/keyboard.c ****     if ((popcount_more_than_one(rowdata)) == 0){
 101:./tmk_core/common/keyboard.c ****         return false;
 102:./tmk_core/common/keyboard.c ****     }
 103:./tmk_core/common/keyboard.c ****     /* Ghost occurs when the row shares a column line with other row,
 104:./tmk_core/common/keyboard.c ****     and two columns are read on each row. Blanks in the matrix don't matter,
 105:./tmk_core/common/keyboard.c ****     so they are filtered out.
 106:./tmk_core/common/keyboard.c ****     If there are two or more real keys pressed and they match columns with
 107:./tmk_core/common/keyboard.c ****     at least two of another row's real keys, the row will be ignored. Keep in mind,
 108:./tmk_core/common/keyboard.c ****     we are checking one row at a time, not all of them at once.
 109:./tmk_core/common/keyboard.c ****     */
 110:./tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
 111:./tmk_core/common/keyboard.c ****         if (i != row && popcount_more_than_one(get_real_keys(i, matrix_get_row(i)) & rowdata)){
 112:./tmk_core/common/keyboard.c ****             return true;
 113:./tmk_core/common/keyboard.c ****         }
 114:./tmk_core/common/keyboard.c ****     }
 115:./tmk_core/common/keyboard.c ****     return false;
 116:./tmk_core/common/keyboard.c **** }
 117:./tmk_core/common/keyboard.c **** 
 118:./tmk_core/common/keyboard.c **** #endif
 119:./tmk_core/common/keyboard.c **** 
 120:./tmk_core/common/keyboard.c **** /** \brief matrix_setup
 121:./tmk_core/common/keyboard.c ****  *
 122:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 123:./tmk_core/common/keyboard.c ****  */
 124:./tmk_core/common/keyboard.c **** __attribute__ ((weak))
 125:./tmk_core/common/keyboard.c **** void matrix_setup(void) {
  16               		.loc 1 125 25 view -0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
 126:./tmk_core/common/keyboard.c **** }
  22               		.loc 1 126 1 view .LVU1
  23               	/* epilogue start */
  24 0000 0895      		ret
  25               		.cfi_endproc
  26               	.LFE4:
  28               		.section	.text.keyboard_setup,"ax",@progbits
  29               	.global	keyboard_setup
  31               	keyboard_setup:
  32               	.LFB5:
 127:./tmk_core/common/keyboard.c **** 
 128:./tmk_core/common/keyboard.c **** /** \brief keyboard_setup
 129:./tmk_core/common/keyboard.c ****  *
 130:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 131:./tmk_core/common/keyboard.c ****  */
 132:./tmk_core/common/keyboard.c **** void keyboard_setup(void) {
  33               		.loc 1 132 27 view -0
  34               		.cfi_startproc
  35               	/* prologue: function */
  36               	/* frame size = 0 */
  37               	/* stack size = 0 */
  38               	.L__stack_usage = 0
 133:./tmk_core/common/keyboard.c ****     matrix_setup();
  39               		.loc 1 133 5 view .LVU3
  40 0000 0C94 0000 		jmp matrix_setup
  41               	.LVL0:
  42               		.cfi_endproc
  43               	.LFE5:
  45               		.section	.text.is_keyboard_master,"ax",@progbits
  46               		.weak	is_keyboard_master
  48               	is_keyboard_master:
  49               	.LFB6:
 134:./tmk_core/common/keyboard.c **** }
 135:./tmk_core/common/keyboard.c **** 
 136:./tmk_core/common/keyboard.c **** /** \brief is_keyboard_master
 137:./tmk_core/common/keyboard.c ****  *
 138:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 139:./tmk_core/common/keyboard.c ****  */
 140:./tmk_core/common/keyboard.c **** __attribute__((weak))
 141:./tmk_core/common/keyboard.c **** bool is_keyboard_master(void) {
  50               		.loc 1 141 31 view -0
  51               		.cfi_startproc
  52               	/* prologue: function */
  53               	/* frame size = 0 */
  54               	/* stack size = 0 */
  55               	.L__stack_usage = 0
 142:./tmk_core/common/keyboard.c ****     return true;
  56               		.loc 1 142 5 view .LVU5
 143:./tmk_core/common/keyboard.c **** }
  57               		.loc 1 143 1 is_stmt 0 view .LVU6
  58 0000 81E0      		ldi r24,lo8(1)
  59               	/* epilogue start */
  60 0002 0895      		ret
  61               		.cfi_endproc
  62               	.LFE6:
  64               		.section	.text.keyboard_init,"ax",@progbits
  65               	.global	keyboard_init
  67               	keyboard_init:
  68               	.LFB7:
 144:./tmk_core/common/keyboard.c **** 
 145:./tmk_core/common/keyboard.c **** /** \brief keyboard_init
 146:./tmk_core/common/keyboard.c ****  *
 147:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 148:./tmk_core/common/keyboard.c ****  */
 149:./tmk_core/common/keyboard.c **** void keyboard_init(void) {
  69               		.loc 1 149 26 is_stmt 1 view -0
  70               		.cfi_startproc
  71               	/* prologue: function */
  72               	/* frame size = 0 */
  73               	/* stack size = 0 */
  74               	.L__stack_usage = 0
 150:./tmk_core/common/keyboard.c ****     timer_init();
  75               		.loc 1 150 5 view .LVU8
  76 0000 0E94 0000 		call timer_init
  77               	.LVL1:
 151:./tmk_core/common/keyboard.c ****     matrix_init();
  78               		.loc 1 151 5 view .LVU9
  79 0004 0E94 0000 		call matrix_init
  80               	.LVL2:
 152:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 153:./tmk_core/common/keyboard.c ****     ps2_mouse_init();
 154:./tmk_core/common/keyboard.c **** #endif
 155:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 156:./tmk_core/common/keyboard.c ****     serial_mouse_init();
 157:./tmk_core/common/keyboard.c **** #endif
 158:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 159:./tmk_core/common/keyboard.c ****     adb_mouse_init();
 160:./tmk_core/common/keyboard.c **** #endif
 161:./tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
 162:./tmk_core/common/keyboard.c ****     bootmagic();
 163:./tmk_core/common/keyboard.c **** #else
 164:./tmk_core/common/keyboard.c ****     magic();
  81               		.loc 1 164 5 view .LVU10
  82 0008 0C94 0000 		jmp magic
  83               	.LVL3:
  84               		.cfi_endproc
  85               	.LFE7:
  87               		.section	.text.keyboard_set_leds,"ax",@progbits
  88               	.global	keyboard_set_leds
  90               	keyboard_set_leds:
  91               	.LVL4:
  92               	.LFB9:
 165:./tmk_core/common/keyboard.c **** #endif
 166:./tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
 167:./tmk_core/common/keyboard.c ****     backlight_init();
 168:./tmk_core/common/keyboard.c **** #endif
 169:./tmk_core/common/keyboard.c **** #ifdef RGBLIGHT_ENABLE
 170:./tmk_core/common/keyboard.c ****     rgblight_init();
 171:./tmk_core/common/keyboard.c **** #endif
 172:./tmk_core/common/keyboard.c **** #ifdef STENO_ENABLE
 173:./tmk_core/common/keyboard.c ****     steno_init();
 174:./tmk_core/common/keyboard.c **** #endif
 175:./tmk_core/common/keyboard.c **** #ifdef FAUXCLICKY_ENABLE
 176:./tmk_core/common/keyboard.c ****     fauxclicky_init();
 177:./tmk_core/common/keyboard.c **** #endif
 178:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 179:./tmk_core/common/keyboard.c ****     pointing_device_init();
 180:./tmk_core/common/keyboard.c **** #endif
 181:./tmk_core/common/keyboard.c **** #if defined(NKRO_ENABLE) && defined(FORCE_NKRO)
 182:./tmk_core/common/keyboard.c ****     keymap_config.nkro = 1;
 183:./tmk_core/common/keyboard.c **** #endif
 184:./tmk_core/common/keyboard.c **** }
 185:./tmk_core/common/keyboard.c **** 
 186:./tmk_core/common/keyboard.c **** /** \brief Keyboard task: Do keyboard routine jobs
 187:./tmk_core/common/keyboard.c ****  *
 188:./tmk_core/common/keyboard.c ****  * Do routine keyboard jobs: 
 189:./tmk_core/common/keyboard.c ****  *
 190:./tmk_core/common/keyboard.c ****  * * scan matrix
 191:./tmk_core/common/keyboard.c ****  * * handle mouse movements
 192:./tmk_core/common/keyboard.c ****  * * run visualizer code
 193:./tmk_core/common/keyboard.c ****  * * handle midi commands
 194:./tmk_core/common/keyboard.c ****  * * light LEDs
 195:./tmk_core/common/keyboard.c ****  *
 196:./tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
 197:./tmk_core/common/keyboard.c ****  */
 198:./tmk_core/common/keyboard.c **** void keyboard_task(void)
 199:./tmk_core/common/keyboard.c **** {
 200:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 201:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 202:./tmk_core/common/keyboard.c ****   //  static matrix_row_t matrix_ghost[MATRIX_ROWS];
 203:./tmk_core/common/keyboard.c **** #endif
 204:./tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 205:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 206:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 207:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 208:./tmk_core/common/keyboard.c ****     uint8_t keys_processed = 0;
 209:./tmk_core/common/keyboard.c **** #endif
 210:./tmk_core/common/keyboard.c **** 
 211:./tmk_core/common/keyboard.c ****     matrix_scan();
 212:./tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 213:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 214:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 215:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 216:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 217:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 218:./tmk_core/common/keyboard.c ****                 if (has_ghost_in_row(r, matrix_row)) {
 219:./tmk_core/common/keyboard.c ****                     /* Keep track of whether ghosted status has changed for
 220:./tmk_core/common/keyboard.c ****                     * debugging. But don't update matrix_prev until un-ghosted, or
 221:./tmk_core/common/keyboard.c ****                     * the last key would be lost.
 222:./tmk_core/common/keyboard.c ****                     */
 223:./tmk_core/common/keyboard.c ****                     //if (debug_matrix && matrix_ghost[r] != matrix_row) {
 224:./tmk_core/common/keyboard.c ****                     //    matrix_print();
 225:./tmk_core/common/keyboard.c ****                     //}
 226:./tmk_core/common/keyboard.c ****                     //matrix_ghost[r] = matrix_row;
 227:./tmk_core/common/keyboard.c ****                     continue;
 228:./tmk_core/common/keyboard.c ****                 }
 229:./tmk_core/common/keyboard.c ****                 //matrix_ghost[r] = matrix_row;
 230:./tmk_core/common/keyboard.c **** #endif
 231:./tmk_core/common/keyboard.c ****                 if (debug_matrix) matrix_print();
 232:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 233:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 234:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 235:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 236:./tmk_core/common/keyboard.c ****                             .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 237:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 238:./tmk_core/common/keyboard.c ****                         });
 239:./tmk_core/common/keyboard.c ****                         // record a processed key
 240:./tmk_core/common/keyboard.c ****                         matrix_prev[r] ^= ((matrix_row_t)1<<c);
 241:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 242:./tmk_core/common/keyboard.c ****                         // only jump out if we have processed "enough" keys.
 243:./tmk_core/common/keyboard.c ****                         if (++keys_processed >= QMK_KEYS_PER_SCAN)
 244:./tmk_core/common/keyboard.c **** #endif
 245:./tmk_core/common/keyboard.c ****                         // process a key per task call
 246:./tmk_core/common/keyboard.c ****                         goto MATRIX_LOOP_END;
 247:./tmk_core/common/keyboard.c ****                     }
 248:./tmk_core/common/keyboard.c ****                 }
 249:./tmk_core/common/keyboard.c ****             }
 250:./tmk_core/common/keyboard.c ****         }
 251:./tmk_core/common/keyboard.c ****     }
 252:./tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 253:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 254:./tmk_core/common/keyboard.c ****     // we can get here with some keys processed now.
 255:./tmk_core/common/keyboard.c ****     if (!keys_processed)
 256:./tmk_core/common/keyboard.c **** #endif
 257:./tmk_core/common/keyboard.c ****     action_exec(TICK);
 258:./tmk_core/common/keyboard.c **** 
 259:./tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 260:./tmk_core/common/keyboard.c **** 
 261:./tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 262:./tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 263:./tmk_core/common/keyboard.c ****     mousekey_task();
 264:./tmk_core/common/keyboard.c **** #endif
 265:./tmk_core/common/keyboard.c **** 
 266:./tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 267:./tmk_core/common/keyboard.c ****     ps2_mouse_task();
 268:./tmk_core/common/keyboard.c **** #endif
 269:./tmk_core/common/keyboard.c **** 
 270:./tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 271:./tmk_core/common/keyboard.c ****     serial_mouse_task();
 272:./tmk_core/common/keyboard.c **** #endif
 273:./tmk_core/common/keyboard.c **** 
 274:./tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 275:./tmk_core/common/keyboard.c ****     adb_mouse_task();
 276:./tmk_core/common/keyboard.c **** #endif
 277:./tmk_core/common/keyboard.c **** 
 278:./tmk_core/common/keyboard.c **** #ifdef SERIAL_LINK_ENABLE
 279:./tmk_core/common/keyboard.c **** 	serial_link_update();
 280:./tmk_core/common/keyboard.c **** #endif
 281:./tmk_core/common/keyboard.c **** 
 282:./tmk_core/common/keyboard.c **** #ifdef VISUALIZER_ENABLE
 283:./tmk_core/common/keyboard.c ****     visualizer_update(default_layer_state, layer_state, visualizer_get_mods(), host_keyboard_leds()
 284:./tmk_core/common/keyboard.c **** #endif
 285:./tmk_core/common/keyboard.c **** 
 286:./tmk_core/common/keyboard.c **** #ifdef POINTING_DEVICE_ENABLE
 287:./tmk_core/common/keyboard.c ****     pointing_device_task();
 288:./tmk_core/common/keyboard.c **** #endif
 289:./tmk_core/common/keyboard.c **** 
 290:./tmk_core/common/keyboard.c **** #ifdef MIDI_ENABLE
 291:./tmk_core/common/keyboard.c ****     midi_task();
 292:./tmk_core/common/keyboard.c **** #endif
 293:./tmk_core/common/keyboard.c **** 
 294:./tmk_core/common/keyboard.c ****     // update LED
 295:./tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 296:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 297:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 298:./tmk_core/common/keyboard.c ****     }
 299:./tmk_core/common/keyboard.c **** }
 300:./tmk_core/common/keyboard.c **** 
 301:./tmk_core/common/keyboard.c **** /** \brief keyboard set leds
 302:./tmk_core/common/keyboard.c ****  *
 303:./tmk_core/common/keyboard.c ****  * FIXME: needs doc
 304:./tmk_core/common/keyboard.c ****  */
 305:./tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 306:./tmk_core/common/keyboard.c **** {
  93               		.loc 1 306 1 view -0
  94               		.cfi_startproc
  95               		.loc 1 306 1 is_stmt 0 view .LVU12
  96 0000 CF93      		push r28
  97               	.LCFI0:
  98               		.cfi_def_cfa_offset 3
  99               		.cfi_offset 28, -2
 100               	/* prologue: function */
 101               	/* frame size = 0 */
 102               	/* stack size = 1 */
 103               	.L__stack_usage = 1
 104 0002 C82F      		mov r28,r24
 307:./tmk_core/common/keyboard.c ****     if (debug_keyboard) { debug("keyboard_set_led: "); debug_hex8(leds); debug("\n"); }
 105               		.loc 1 307 5 is_stmt 1 view .LVU13
 106               		.loc 1 307 9 is_stmt 0 view .LVU14
 107 0004 8091 0000 		lds r24,debug_config
 108               	.LVL5:
 109               		.loc 1 307 8 view .LVU15
 110 0008 82FF      		sbrs r24,2
 111 000a 00C0      		rjmp .L8
 112               		.loc 1 307 27 is_stmt 1 discriminator 1 view .LVU16
 113               		.loc 1 307 27 discriminator 1 view .LVU17
 114 000c 80FF      		sbrs r24,0
 115 000e 00C0      		rjmp .L8
 116               		.loc 1 307 27 discriminator 3 view .LVU18
 117               	.LBB2:
 118               		.loc 1 307 27 discriminator 3 view .LVU19
 119               		.loc 1 307 27 discriminator 3 view .LVU20
 120               	.LBE2:
 121 0010 80E0      		ldi r24,lo8(__c.2765)
 122 0012 90E0      		ldi r25,hi8(__c.2765)
 123 0014 0E94 0000 		call xputs
 124               	.LVL6:
 125               		.loc 1 307 27 discriminator 3 view .LVU21
 126               		.loc 1 307 56 discriminator 3 view .LVU22
 127               		.loc 1 307 56 discriminator 3 view .LVU23
 128 0018 8091 0000 		lds r24,debug_config
 129 001c 80FF      		sbrs r24,0
 130 001e 00C0      		rjmp .L8
 131               		.loc 1 307 56 discriminator 6 view .LVU24
 132               	.LBB3:
 133               		.loc 1 307 56 discriminator 6 view .LVU25
 134               		.loc 1 307 56 discriminator 6 view .LVU26
 135               	.LBE3:
 136 0020 1F92      		push __zero_reg__
 137               	.LCFI1:
 138               		.cfi_def_cfa_offset 4
 139 0022 CF93      		push r28
 140               	.LCFI2:
 141               		.cfi_def_cfa_offset 5
 142 0024 80E0      		ldi r24,lo8(__c.2767)
 143 0026 90E0      		ldi r25,hi8(__c.2767)
 144 0028 9F93      		push r25
 145               	.LCFI3:
 146               		.cfi_def_cfa_offset 6
 147 002a 8F93      		push r24
 148               	.LCFI4:
 149               		.cfi_def_cfa_offset 7
 150 002c 0E94 0000 		call __xprintf
 151               	.LVL7:
 152               		.loc 1 307 56 discriminator 6 view .LVU27
 153               		.loc 1 307 74 discriminator 6 view .LVU28
 154               		.loc 1 307 74 discriminator 6 view .LVU29
 155 0030 8091 0000 		lds r24,debug_config
 156 0034 0F90      		pop __tmp_reg__
 157 0036 0F90      		pop __tmp_reg__
 158 0038 0F90      		pop __tmp_reg__
 159 003a 0F90      		pop __tmp_reg__
 160               	.LCFI5:
 161               		.cfi_def_cfa_offset 3
 162 003c 80FF      		sbrs r24,0
 163 003e 00C0      		rjmp .L8
 164               		.loc 1 307 74 discriminator 9 view .LVU30
 165               	.LBB4:
 166               		.loc 1 307 74 discriminator 9 view .LVU31
 167               		.loc 1 307 74 discriminator 9 view .LVU32
 168               	.LBE4:
 169 0040 80E0      		ldi r24,lo8(__c.2769)
 170 0042 90E0      		ldi r25,hi8(__c.2769)
 171 0044 0E94 0000 		call xputs
 172               	.LVL8:
 173               	.L8:
 174               		.loc 1 307 74 discriminator 11 view .LVU33
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 175               		.loc 1 308 5 discriminator 11 view .LVU34
 176 0048 8C2F      		mov r24,r28
 177               	/* epilogue start */
 309:./tmk_core/common/keyboard.c **** }
 178               		.loc 1 309 1 is_stmt 0 discriminator 11 view .LVU35
 179 004a CF91      		pop r28
 180               	.LVL9:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 181               		.loc 1 308 5 discriminator 11 view .LVU36
 182 004c 0C94 0000 		jmp led_set
 183               	.LVL10:
 308:./tmk_core/common/keyboard.c ****     led_set(leds);
 184               		.loc 1 308 5 discriminator 11 view .LVU37
 185               		.cfi_endproc
 186               	.LFE9:
 188               		.section	.text.keyboard_task,"ax",@progbits
 189               	.global	keyboard_task
 191               	keyboard_task:
 192               	.LFB8:
 199:./tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 193               		.loc 1 199 1 is_stmt 1 view -0
 194               		.cfi_startproc
 195 0000 BF92      		push r11
 196               	.LCFI6:
 197               		.cfi_def_cfa_offset 3
 198               		.cfi_offset 11, -2
 199 0002 CF92      		push r12
 200               	.LCFI7:
 201               		.cfi_def_cfa_offset 4
 202               		.cfi_offset 12, -3
 203 0004 DF92      		push r13
 204               	.LCFI8:
 205               		.cfi_def_cfa_offset 5
 206               		.cfi_offset 13, -4
 207 0006 EF92      		push r14
 208               	.LCFI9:
 209               		.cfi_def_cfa_offset 6
 210               		.cfi_offset 14, -5
 211 0008 FF92      		push r15
 212               	.LCFI10:
 213               		.cfi_def_cfa_offset 7
 214               		.cfi_offset 15, -6
 215 000a 0F93      		push r16
 216               	.LCFI11:
 217               		.cfi_def_cfa_offset 8
 218               		.cfi_offset 16, -7
 219 000c 1F93      		push r17
 220               	.LCFI12:
 221               		.cfi_def_cfa_offset 9
 222               		.cfi_offset 17, -8
 223 000e CF93      		push r28
 224               	.LCFI13:
 225               		.cfi_def_cfa_offset 10
 226               		.cfi_offset 28, -9
 227 0010 DF93      		push r29
 228               	.LCFI14:
 229               		.cfi_def_cfa_offset 11
 230               		.cfi_offset 29, -10
 231 0012 00D0      		rcall .
 232 0014 00D0      		rcall .
 233 0016 0F92      		push __tmp_reg__
 234               	.LCFI15:
 235               		.cfi_def_cfa_offset 16
 236 0018 CDB7      		in r28,__SP_L__
 237 001a DEB7      		in r29,__SP_H__
 238               	.LCFI16:
 239               		.cfi_def_cfa_register 28
 240               	/* prologue: function */
 241               	/* frame size = 5 */
 242               	/* stack size = 14 */
 243               	.L__stack_usage = 14
 200:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 244               		.loc 1 200 5 view .LVU39
 204:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 245               		.loc 1 204 5 view .LVU40
 205:./tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 246               		.loc 1 205 5 view .LVU41
 247               	.LVL11:
 206:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 248               		.loc 1 206 5 view .LVU42
 211:./tmk_core/common/keyboard.c ****     if (is_keyboard_master()) {
 249               		.loc 1 211 5 view .LVU43
 250 001c 0E94 0000 		call matrix_scan
 251               	.LVL12:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 252               		.loc 1 212 5 view .LVU44
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 253               		.loc 1 212 9 is_stmt 0 view .LVU45
 254 0020 0E94 0000 		call is_keyboard_master
 255               	.LVL13:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 256               		.loc 1 212 8 view .LVU46
 257 0024 8823      		tst r24
 258 0026 01F4      		brne .+2
 259 0028 00C0      		rjmp .L22
 260 002a 80E0      		ldi r24,lo8(matrix_prev.2745)
 261 002c C82E      		mov r12,r24
 262 002e 80E0      		ldi r24,hi8(matrix_prev.2745)
 263 0030 D82E      		mov r13,r24
 264 0032 10E0      		ldi r17,0
 265 0034 00E0      		ldi r16,0
 266               	.LVL14:
 267               	.L29:
 212:./tmk_core/common/keyboard.c ****         for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 268               		.loc 1 212 8 view .LVU47
 269 0036 E02E      		mov r14,r16
 270               	.LVL15:
 271               	.LBB5:
 214:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 272               		.loc 1 214 13 is_stmt 1 view .LVU48
 214:./tmk_core/common/keyboard.c ****             matrix_change = matrix_row ^ matrix_prev[r];
 273               		.loc 1 214 26 is_stmt 0 view .LVU49
 274 0038 802F      		mov r24,r16
 275 003a 0E94 0000 		call matrix_get_row
 276               	.LVL16:
 277 003e B82E      		mov r11,r24
 278               	.LVL17:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 279               		.loc 1 215 13 is_stmt 1 view .LVU50
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 280               		.loc 1 215 53 is_stmt 0 view .LVU51
 281 0040 F601      		movw r30,r12
 282 0042 F190      		ld r15,Z+
 283 0044 6F01      		movw r12,r30
 284               	.LVL18:
 216:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 285               		.loc 1 216 13 is_stmt 1 view .LVU52
 216:./tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 286               		.loc 1 216 16 is_stmt 0 view .LVU53
 287 0046 F816      		cp r15,r24
 288 0048 01F4      		brne .+2
 289 004a 00C0      		rjmp .L23
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 290               		.loc 1 231 17 is_stmt 1 view .LVU54
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 291               		.loc 1 231 21 is_stmt 0 view .LVU55
 292 004c 8091 0000 		lds r24,debug_config
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 293               		.loc 1 231 20 view .LVU56
 294 0050 81FD      		sbrc r24,1
 231:./tmk_core/common/keyboard.c ****                 for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 295               		.loc 1 231 35 is_stmt 1 discriminator 1 view .LVU57
 296 0052 0E94 0000 		call matrix_print
 297               	.LVL19:
 298               	.L24:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 299               		.loc 1 215 27 is_stmt 0 view .LVU58
 300 0056 FB24      		eor r15,r11
 301               	.LVL20:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 302               		.loc 1 232 17 is_stmt 1 view .LVU59
 303               	.LBB6:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 304               		.loc 1 232 22 view .LVU60
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 305               		.loc 1 232 37 view .LVU61
 306               	.LBE6:
 215:./tmk_core/common/keyboard.c ****             if (matrix_change) {
 307               		.loc 1 215 27 is_stmt 0 view .LVU62
 308 0058 30E0      		ldi r19,0
 309 005a 20E0      		ldi r18,0
 310               	.LBB8:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 311               		.loc 1 233 25 view .LVU63
 312 005c 4F2D      		mov r20,r15
 313 005e 50E0      		ldi r21,0
 314               	.LVL21:
 315               	.L28:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 316               		.loc 1 233 25 view .LVU64
 317 0060 922F      		mov r25,r18
 318               	.LVL22:
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 319               		.loc 1 233 21 is_stmt 1 view .LVU65
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 320               		.loc 1 233 25 is_stmt 0 view .LVU66
 321 0062 BA01      		movw r22,r20
 322 0064 022E      		mov r0,r18
 323 0066 00C0      		rjmp 2f
 324               		1:
 325 0068 7595      		asr r23
 326 006a 6795      		ror r22
 327               		2:
 328 006c 0A94      		dec r0
 329 006e 02F4      		brpl 1b
 233:./tmk_core/common/keyboard.c ****                         action_exec((keyevent_t){
 330               		.loc 1 233 24 view .LVU67
 331 0070 60FF      		sbrs r22,0
 332 0072 00C0      		rjmp .L25
 333               	.LBB7:
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 334               		.loc 1 234 25 is_stmt 1 view .LVU68
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 335               		.loc 1 234 49 is_stmt 0 view .LVU69
 336 0074 2983      		std Y+1,r18
 337 0076 EA82      		std Y+2,r14
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 338               		.loc 1 236 70 view .LVU70
 339 0078 21E0      		ldi r18,lo8(1)
 340 007a 30E0      		ldi r19,0
 341               	.LVL23:
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 342               		.loc 1 236 70 view .LVU71
 343 007c 7901      		movw r14,r18
 344 007e 00C0      		rjmp 2f
 345               		1:
 346 0080 EE0C      		lsl r14
 347 0082 FF1C      		rol r15
 348               		2:
 349 0084 9A95      		dec r25
 350 0086 02F4      		brpl 1b
 236:./tmk_core/common/keyboard.c ****                             .time = (timer_read() | 1) /* time should not be 0 */
 351               		.loc 1 236 52 view .LVU72
 352 0088 2B2D      		mov r18,r11
 353 008a 30E0      		ldi r19,0
 354 008c 2E21      		and r18,r14
 355 008e 3F21      		and r19,r15
 356 0090 81E0      		ldi r24,lo8(1)
 357 0092 232B      		or r18,r19
 358 0094 01F4      		brne .L26
 359 0096 80E0      		ldi r24,0
 360               	.L26:
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 361               		.loc 1 234 49 view .LVU73
 362 0098 8B83      		std Y+3,r24
 237:./tmk_core/common/keyboard.c ****                         });
 363               		.loc 1 237 38 view .LVU74
 364 009a 0E94 0000 		call timer_read
 365               	.LVL24:
 237:./tmk_core/common/keyboard.c ****                         });
 366               		.loc 1 237 51 view .LVU75
 367 009e 8160      		ori r24,1
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 368               		.loc 1 234 49 view .LVU76
 369 00a0 782F      		mov r23,r24
 370 00a2 9D83      		std Y+5,r25
 371 00a4 8C83      		std Y+4,r24
 234:./tmk_core/common/keyboard.c ****                             .key = (keypos_t){ .row = r, .col = c },
 372               		.loc 1 234 25 view .LVU77
 373 00a6 4981      		ldd r20,Y+1
 374 00a8 5A81      		ldd r21,Y+2
 375 00aa 6B81      		ldd r22,Y+3
 376 00ac 8D81      		ldd r24,Y+5
 377 00ae 0E94 0000 		call action_exec
 378               	.LVL25:
 240:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 379               		.loc 1 240 25 is_stmt 1 view .LVU78
 240:./tmk_core/common/keyboard.c **** #ifdef QMK_KEYS_PER_SCAN
 380               		.loc 1 240 40 is_stmt 0 view .LVU79
 381 00b2 F801      		movw r30,r16
 382 00b4 E050      		subi r30,lo8(-(matrix_prev.2745))
 383 00b6 F040      		sbci r31,hi8(-(matrix_prev.2745))
 384 00b8 8081      		ld r24,Z
 385 00ba 8E25      		eor r24,r14
 386 00bc 8083      		st Z,r24
 246:./tmk_core/common/keyboard.c ****                     }
 387               		.loc 1 246 25 is_stmt 1 view .LVU80
 388               	.LVL26:
 389               	.L27:
 246:./tmk_core/common/keyboard.c ****                     }
 390               		.loc 1 246 25 is_stmt 0 view .LVU81
 391               	.LBE7:
 392               	.LBE8:
 393               	.LBE5:
 263:./tmk_core/common/keyboard.c **** #endif
 394               		.loc 1 263 5 is_stmt 1 view .LVU82
 395 00be 0E94 0000 		call mousekey_task
 396               	.LVL27:
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 397               		.loc 1 295 5 view .LVU83
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 398               		.loc 1 295 23 is_stmt 0 view .LVU84
 399 00c2 0E94 0000 		call host_keyboard_leds
 400               	.LVL28:
 295:./tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 401               		.loc 1 295 8 view .LVU85
 402 00c6 9091 0000 		lds r25,led_status.2746
 403 00ca 8917      		cp r24,r25
 404 00cc 01F0      		breq .L21
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 405               		.loc 1 296 9 is_stmt 1 view .LVU86
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 406               		.loc 1 296 22 is_stmt 0 view .LVU87
 407 00ce 0E94 0000 		call host_keyboard_leds
 408               	.LVL29:
 296:./tmk_core/common/keyboard.c ****         keyboard_set_leds(led_status);
 409               		.loc 1 296 20 view .LVU88
 410 00d2 8093 0000 		sts led_status.2746,r24
 297:./tmk_core/common/keyboard.c ****     }
 411               		.loc 1 297 9 is_stmt 1 view .LVU89
 412               	/* epilogue start */
 299:./tmk_core/common/keyboard.c **** 
 413               		.loc 1 299 1 is_stmt 0 view .LVU90
 414 00d6 0F90      		pop __tmp_reg__
 415 00d8 0F90      		pop __tmp_reg__
 416 00da 0F90      		pop __tmp_reg__
 417 00dc 0F90      		pop __tmp_reg__
 418 00de 0F90      		pop __tmp_reg__
 419 00e0 DF91      		pop r29
 420 00e2 CF91      		pop r28
 421 00e4 1F91      		pop r17
 422 00e6 0F91      		pop r16
 423 00e8 FF90      		pop r15
 424 00ea EF90      		pop r14
 425 00ec DF90      		pop r13
 426 00ee CF90      		pop r12
 427 00f0 BF90      		pop r11
 297:./tmk_core/common/keyboard.c ****     }
 428               		.loc 1 297 9 view .LVU91
 429 00f2 0C94 0000 		jmp keyboard_set_leds
 430               	.LVL30:
 431               	.L25:
 432               	.LBB10:
 433               	.LBB9:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 434               		.loc 1 232 54 is_stmt 1 discriminator 2 view .LVU92
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 435               		.loc 1 232 37 discriminator 2 view .LVU93
 436 00f6 2F5F      		subi r18,-1
 437 00f8 3F4F      		sbci r19,-1
 438               	.LVL31:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 439               		.loc 1 232 17 is_stmt 0 discriminator 2 view .LVU94
 440 00fa 2630      		cpi r18,6
 441 00fc 3105      		cpc r19,__zero_reg__
 442 00fe 01F0      		breq .+2
 443 0100 00C0      		rjmp .L28
 444               	.LVL32:
 445               	.L23:
 232:./tmk_core/common/keyboard.c ****                     if (matrix_change & ((matrix_row_t)1<<c)) {
 446               		.loc 1 232 17 discriminator 2 view .LVU95
 447               	.LBE9:
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 448               		.loc 1 213 46 is_stmt 1 view .LVU96
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 449               		.loc 1 213 29 view .LVU97
 450 0102 0F5F      		subi r16,-1
 451 0104 1F4F      		sbci r17,-1
 452               	.LVL33:
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 453               		.loc 1 213 9 is_stmt 0 view .LVU98
 454 0106 0E30      		cpi r16,14
 455 0108 1105      		cpc r17,__zero_reg__
 456 010a 01F0      		breq .+2
 457 010c 00C0      		rjmp .L29
 458               	.LVL34:
 459               	.L22:
 213:./tmk_core/common/keyboard.c ****             matrix_row = matrix_get_row(r);
 460               		.loc 1 213 9 view .LVU99
 461               	.LBE10:
 257:./tmk_core/common/keyboard.c **** 
 462               		.loc 1 257 5 is_stmt 1 view .LVU100
 257:./tmk_core/common/keyboard.c **** 
 463               		.loc 1 257 17 is_stmt 0 view .LVU101
 464 010e 8FEF      		ldi r24,lo8(-1)
 465 0110 8983      		std Y+1,r24
 466 0112 8A83      		std Y+2,r24
 467 0114 1B82      		std Y+3,__zero_reg__
 468 0116 0E94 0000 		call timer_read
 469               	.LVL35:
 470 011a 8160      		ori r24,1
 471 011c 782F      		mov r23,r24
 472 011e 9D83      		std Y+5,r25
 473 0120 8C83      		std Y+4,r24
 257:./tmk_core/common/keyboard.c **** 
 474               		.loc 1 257 5 view .LVU102
 475 0122 4981      		ldd r20,Y+1
 476 0124 5A81      		ldd r21,Y+2
 477 0126 6B81      		ldd r22,Y+3
 478 0128 8D81      		ldd r24,Y+5
 479 012a 0E94 0000 		call action_exec
 480               	.LVL36:
 481 012e 00C0      		rjmp .L27
 482               	.L21:
 483               	/* epilogue start */
 299:./tmk_core/common/keyboard.c **** 
 484               		.loc 1 299 1 view .LVU103
 485 0130 0F90      		pop __tmp_reg__
 486 0132 0F90      		pop __tmp_reg__
 487 0134 0F90      		pop __tmp_reg__
 488 0136 0F90      		pop __tmp_reg__
 489 0138 0F90      		pop __tmp_reg__
 490 013a DF91      		pop r29
 491 013c CF91      		pop r28
 492 013e 1F91      		pop r17
 493 0140 0F91      		pop r16
 494 0142 FF90      		pop r15
 495 0144 EF90      		pop r14
 496 0146 DF90      		pop r13
 497 0148 CF90      		pop r12
 498 014a BF90      		pop r11
 499 014c 0895      		ret
 500               		.cfi_endproc
 501               	.LFE8:
 503               		.section	.progmem.data.__c.2769,"a"
 506               	__c.2769:
 507 0000 0A00      		.string	"\n"
 508               		.section	.progmem.data.__c.2767,"a"
 511               	__c.2767:
 512 0000 2530 3258 		.string	"%02X"
 512      00
 513               		.section	.progmem.data.__c.2765,"a"
 516               	__c.2765:
 517 0000 6B65 7962 		.string	"keyboard_set_led: "
 517      6F61 7264 
 517      5F73 6574 
 517      5F6C 6564 
 517      3A20 00
 518               		.section	.bss.led_status.2746,"aw",@nobits
 521               	led_status.2746:
 522 0000 00        		.zero	1
 523               		.section	.bss.matrix_prev.2745,"aw",@nobits
 526               	matrix_prev.2745:
 527 0000 0000 0000 		.zero	14
 527      0000 0000 
 527      0000 0000 
 527      0000 
 528               		.text
 529               	.Letext0:
 530               		.file 2 "/usr/local/Cellar/avr-gcc@9/9.3.0_3/avr/include/stdint.h"
 531               		.file 3 "./tmk_core/common/keyboard.h"
 532               		.file 4 "./tmk_core/common/matrix.h"
 533               		.file 5 "./tmk_core/common/host.h"
 534               		.file 6 "./tmk_core/common/avr/xprintf.h"
 535               		.file 7 "./tmk_core/common/debug.h"
 536               		.file 8 "./quantum/keycode_config.h"
 537               		.file 9 "./quantum/keymap.h"
 538               		.file 10 "./tmk_core/common/timer.h"
 539               		.file 11 "./tmk_core/common/command.h"
 540               		.file 12 "./tmk_core/common/action_layer.h"
 541               		.file 13 "./tmk_core/common/mousekey.h"
 542               		.file 14 "./tmk_core/common/led.h"
 543               		.file 15 "./tmk_core/common/action.h"
 544               		.file 16 "./tmk_core/common/magic.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:4      *ABS*:000000000000003f __SREG__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:13     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:31     .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:48     .text.is_keyboard_master:0000000000000000 is_keyboard_master
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:67     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:90     .text.keyboard_set_leds:0000000000000000 keyboard_set_leds
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:516    .progmem.data.__c.2765:0000000000000000 __c.2765
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:511    .progmem.data.__c.2767:0000000000000000 __c.2767
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:506    .progmem.data.__c.2769:0000000000000000 __c.2769
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:191    .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:526    .bss.matrix_prev.2745:0000000000000000 matrix_prev.2745
/var/folders/_p/hcjbsmwn4x14x6mnhxrqw_c80000gn/T//cciLHleQ.s:521    .bss.led_status.2746:0000000000000000 led_status.2746

UNDEFINED SYMBOLS
timer_init
matrix_init
magic
debug_config
xputs
__xprintf
led_set
matrix_scan
matrix_get_row
matrix_print
timer_read
action_exec
mousekey_task
host_keyboard_leds
__do_clear_bss
